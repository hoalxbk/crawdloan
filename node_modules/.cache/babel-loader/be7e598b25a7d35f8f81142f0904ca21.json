{"ast":null,"code":"// Copyright 2019-2021 @polkadot/extension authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcat, u8aEq, u8aToU8a } from '@polkadot/util';\nexport const PREFIX = u8aToU8a('<Bytes>');\nexport const POSTFIX = u8aToU8a('</Bytes>');\nconst WRAP_LEN = PREFIX.length + POSTFIX.length;\n\nfunction isWrapped(u8a) {\n  return u8a.length >= WRAP_LEN && u8aEq(u8a.subarray(0, PREFIX.length), PREFIX) && u8aEq(u8a.slice(-POSTFIX.length), POSTFIX);\n}\n\nexport function unwrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes);\n  return isWrapped(u8a) ? u8a.subarray(PREFIX.length, u8a.length - POSTFIX.length) : u8a;\n}\nexport function wrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes);\n  return isWrapped(u8a) ? u8a : u8aConcat(PREFIX, u8a, POSTFIX);\n}","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/node_modules/@polkadot/extension-dapp/wrapBytes.js"],"names":["u8aConcat","u8aEq","u8aToU8a","PREFIX","POSTFIX","WRAP_LEN","length","isWrapped","u8a","subarray","slice","unwrapBytes","bytes","wrapBytes"],"mappings":"AAAA;AACA;AACA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,QAA3B,QAA2C,gBAA3C;AACA,OAAO,MAAMC,MAAM,GAAGD,QAAQ,CAAC,SAAD,CAAvB;AACP,OAAO,MAAME,OAAO,GAAGF,QAAQ,CAAC,UAAD,CAAxB;AACP,MAAMG,QAAQ,GAAGF,MAAM,CAACG,MAAP,GAAgBF,OAAO,CAACE,MAAzC;;AAEA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACtB,SAAOA,GAAG,CAACF,MAAJ,IAAcD,QAAd,IAA0BJ,KAAK,CAACO,GAAG,CAACC,QAAJ,CAAa,CAAb,EAAgBN,MAAM,CAACG,MAAvB,CAAD,EAAiCH,MAAjC,CAA/B,IAA2EF,KAAK,CAACO,GAAG,CAACE,KAAJ,CAAU,CAACN,OAAO,CAACE,MAAnB,CAAD,EAA6BF,OAA7B,CAAvF;AACD;;AAED,OAAO,SAASO,WAAT,CAAqBC,KAArB,EAA4B;AACjC,QAAMJ,GAAG,GAAGN,QAAQ,CAACU,KAAD,CAApB;AACA,SAAOL,SAAS,CAACC,GAAD,CAAT,GAAiBA,GAAG,CAACC,QAAJ,CAAaN,MAAM,CAACG,MAApB,EAA4BE,GAAG,CAACF,MAAJ,GAAaF,OAAO,CAACE,MAAjD,CAAjB,GAA4EE,GAAnF;AACD;AACD,OAAO,SAASK,SAAT,CAAmBD,KAAnB,EAA0B;AAC/B,QAAMJ,GAAG,GAAGN,QAAQ,CAACU,KAAD,CAApB;AACA,SAAOL,SAAS,CAACC,GAAD,CAAT,GAAiBA,GAAjB,GAAuBR,SAAS,CAACG,MAAD,EAASK,GAAT,EAAcJ,OAAd,CAAvC;AACD","sourcesContent":["// Copyright 2019-2021 @polkadot/extension authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nimport { u8aConcat, u8aEq, u8aToU8a } from '@polkadot/util';\nexport const PREFIX = u8aToU8a('<Bytes>');\nexport const POSTFIX = u8aToU8a('</Bytes>');\nconst WRAP_LEN = PREFIX.length + POSTFIX.length;\n\nfunction isWrapped(u8a) {\n  return u8a.length >= WRAP_LEN && u8aEq(u8a.subarray(0, PREFIX.length), PREFIX) && u8aEq(u8a.slice(-POSTFIX.length), POSTFIX);\n}\n\nexport function unwrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes);\n  return isWrapped(u8a) ? u8a.subarray(PREFIX.length, u8a.length - POSTFIX.length) : u8a;\n}\nexport function wrapBytes(bytes) {\n  const u8a = u8aToU8a(bytes);\n  return isWrapped(u8a) ? u8a : u8aConcat(PREFIX, u8a, POSTFIX);\n}"]},"metadata":{},"sourceType":"module"}