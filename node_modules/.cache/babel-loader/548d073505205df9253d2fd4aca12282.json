{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/AccountV2/ManageTier/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport useStyles from './style';\nimport useCommonStyle from '../../../styles/CommonStyle';\nimport { CircularProgress } from '@material-ui/core';\nimport { getWithdrawPercent } from '../../../store/actions/sota-tiers';\nimport ModalDeposit from '../ModalDeposit';\nimport ModalWithdraw from '../ModalWithdraw';\nimport ModalTransaction from '../ModalTransaction';\nimport useAuth from '../../../hooks/useAuth';\nimport { sotaTiersActions } from '../../../store/constants/sota-tiers';\nimport { sotaTokenActions } from '../../../store/constants/sota-token'; //@ts-ignore\n\nimport { numberWithCommas } from '../../../utils/formatNumber';\nimport { USER_STATUS, CONVERSION_RATE } from '../../../constants';\nimport { Dialog, DialogContent } from '@material-ui/core';\nimport { ETH_CHAIN_ID } from '../../../constants/network';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconClose = '/images/icons/close.svg';\n\nconst ManageTier = props => {\n  _s();\n\n  var _CONVERSION_RATE$, _CONVERSION_RATE$2;\n\n  const styles = useStyles();\n  const commonStyles = useCommonStyle();\n  const dispatch = useDispatch();\n  const [openModalDeposit, setOpenModalDeposit] = useState(false);\n  const [openModalWithdraw, setOpenModalWithdraw] = useState(false);\n  const [openModalTransactionSubmitting, setOpenModalTransactionSubmitting] = useState(false);\n  const [transactionHashes, setTransactionHashes] = useState([]);\n  const {\n    data: depositTransaction,\n    error: depositError\n  } = useSelector(state => state.deposit);\n  const {\n    data: approveTransaction,\n    error: approveError\n  } = useSelector(state => state.approve);\n  const {\n    data: withdrawTransaction,\n    error: withdrawError\n  } = useSelector(state => state.withdraw);\n  const {\n    data: userInfo = {}\n  } = useSelector(state => state.userInfo);\n  const {\n    data: balance = {}\n  } = useSelector(state => state.balance);\n  const {\n    connectedAccount,\n    isAuth,\n    wrongChain\n  } = useAuth();\n  const {\n    appChainID\n  } = useSelector(state => state.appNetwork).data;\n  const {\n    classNamePrefix = '',\n    emailVerified,\n    listTokenDetails,\n    totalUnstaked,\n    total\n  } = props;\n  useEffect(() => {\n    dispatch(getWithdrawPercent());\n  }, []);\n  useEffect(() => {\n    if (depositTransaction === null || depositTransaction === void 0 ? void 0 : depositTransaction.hash) {\n      setTransactionHashes([...transactionHashes, {\n        tnx: depositTransaction.hash,\n        isApprove: false\n      }]);\n      setOpenModalTransactionSubmitting(false);\n      dispatch({\n        type: sotaTiersActions.DEPOSIT_SUCCESS,\n        payload: undefined\n      });\n    }\n\n    if (depositError.message) setOpenModalTransactionSubmitting(false);\n  }, [depositTransaction, depositError]);\n  useEffect(() => {\n    if (approveTransaction === null || approveTransaction === void 0 ? void 0 : approveTransaction.hash) {\n      setTransactionHashes([...transactionHashes, {\n        tnx: approveTransaction.hash,\n        isApprove: true\n      }]);\n      setOpenModalTransactionSubmitting(false);\n      dispatch({\n        type: sotaTokenActions.APPROVE_SUCCESS,\n        payload: undefined\n      });\n    }\n\n    if (approveError.message) setOpenModalTransactionSubmitting(false);\n  }, [approveTransaction, approveError]);\n  useEffect(() => {\n    if (withdrawTransaction === null || withdrawTransaction === void 0 ? void 0 : withdrawTransaction.hash) {\n      setTransactionHashes([...transactionHashes, {\n        tnx: withdrawTransaction.hash,\n        isApprove: false\n      }]);\n      setOpenModalTransactionSubmitting(false);\n      dispatch({\n        type: sotaTiersActions.WITHDRAW_SUCCESS,\n        payload: undefined\n      });\n    }\n\n    if (withdrawError.message) setOpenModalTransactionSubmitting(false);\n  }, [withdrawTransaction, withdrawError]);\n\n  const renderToken = (symbol, balance, staked) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"group\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), (wrongChain || !isAuth) && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 35\n      }, this), !wrongChain && isAuth && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: numberWithCommas(balance || 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }, this), (wrongChain || !isAuth) && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 35\n      }, this), !wrongChain && isAuth && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: numberWithCommas(staked || 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classNamePrefix}__component`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.styles.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.styles.manageTier,\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: this.styles.title,\n          children: \"Wallet balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.styles.walletBalance,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.styles.tableHead,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Available Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Staked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.styles.tableBody,\n          children: [renderToken('PKF', balance === null || balance === void 0 ? void 0 : balance.pkf, userInfo === null || userInfo === void 0 ? void 0 : userInfo.pkfStaked), renderToken((_CONVERSION_RATE$ = CONVERSION_RATE[0]) === null || _CONVERSION_RATE$ === void 0 ? void 0 : _CONVERSION_RATE$.symbol, balance === null || balance === void 0 ? void 0 : balance.uni, userInfo === null || userInfo === void 0 ? void 0 : userInfo.uniStaked), renderToken((_CONVERSION_RATE$2 = CONVERSION_RATE[1]) === null || _CONVERSION_RATE$2 === void 0 ? void 0 : _CONVERSION_RATE$2.symbol, balance === null || balance === void 0 ? void 0 : balance.mantra, userInfo === null || userInfo === void 0 ? void 0 : userInfo.mantraStaked)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-lock ${emailVerified == USER_STATUS.UNVERIFIED || wrongChain || !isAuth || ETH_CHAIN_ID !== appChainID ? 'disabled' : ''}`,\n          onClick: () => {\n            setOpenModalDeposit(true);\n          },\n          disabled: emailVerified == USER_STATUS.UNVERIFIED || wrongChain || !isAuth || ETH_CHAIN_ID !== appChainID,\n          children: \"Stake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn btn-unlock ${emailVerified == USER_STATUS.UNVERIFIED || wrongChain || !isAuth || ETH_CHAIN_ID !== appChainID ? 'disabled' : ''}`,\n          onClick: () => {\n            setOpenModalWithdraw(true);\n          },\n          disabled: emailVerified == USER_STATUS.UNVERIFIED || wrongChain || !isAuth || ETH_CHAIN_ID !== appChainID,\n          children: \"Unstake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), ETH_CHAIN_ID !== appChainID && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: this.styles.noteNetwork,\n        children: \"Note: To change tier, please switch to ETH network to do Stake/Unstake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalDeposit, {\n      setOpenModalDeposit: setOpenModalDeposit,\n      setOpenModalTransactionSubmitting: setOpenModalTransactionSubmitting,\n      listTokenDetails: listTokenDetails,\n      open: openModalDeposit,\n      totalStaked: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalWithdraw, {\n      setOpenModalWithdraw: setOpenModalWithdraw,\n      setOpenModalTransactionSubmitting: setOpenModalTransactionSubmitting,\n      listTokenDetails: listTokenDetails,\n      open: openModalWithdraw,\n      totalStaked: total\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openModalTransactionSubmitting,\n      keepMounted: true,\n      onClose: () => setOpenModalTransactionSubmitting(false),\n      \"aria-labelledby\": \"alert-dialog-slide-title\",\n      \"aria-describedby\": \"alert-dialog-slide-description\",\n      className: commonStyles.loadingTransaction,\n      children: /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: iconClose,\n          onClick: () => setOpenModalTransactionSubmitting(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: commonStyles.nnb1824d,\n          children: \"Transaction Submitting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), transactionHashes.length > 0 && /*#__PURE__*/_jsxDEV(ModalTransaction, {\n      transactionHashes: transactionHashes,\n      setTransactionHashes: setTransactionHashes,\n      open: transactionHashes.length > 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ManageTier, \"d+hTFUmUP3AunTW0cQrTN6k3/UQ=\", false, function () {\n  return [useStyles, useCommonStyle, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useAuth, useSelector];\n});\n\n_c = ManageTier;\nexport default ManageTier;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageTier\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/AccountV2/ManageTier/index.tsx"],"names":["useEffect","useState","useSelector","useDispatch","useStyles","useCommonStyle","CircularProgress","getWithdrawPercent","ModalDeposit","ModalWithdraw","ModalTransaction","useAuth","sotaTiersActions","sotaTokenActions","numberWithCommas","USER_STATUS","CONVERSION_RATE","Dialog","DialogContent","ETH_CHAIN_ID","iconClose","ManageTier","props","styles","commonStyles","dispatch","openModalDeposit","setOpenModalDeposit","openModalWithdraw","setOpenModalWithdraw","openModalTransactionSubmitting","setOpenModalTransactionSubmitting","transactionHashes","setTransactionHashes","data","depositTransaction","error","depositError","state","deposit","approveTransaction","approveError","approve","withdrawTransaction","withdrawError","withdraw","userInfo","balance","connectedAccount","isAuth","wrongChain","appChainID","appNetwork","classNamePrefix","emailVerified","listTokenDetails","totalUnstaked","total","hash","tnx","isApprove","type","DEPOSIT_SUCCESS","payload","undefined","message","APPROVE_SUCCESS","WITHDRAW_SUCCESS","renderToken","symbol","staked","content","manageTier","title","walletBalance","tableHead","tableBody","pkf","pkfStaked","uni","uniStaked","mantra","mantraStaked","UNVERIFIED","noteNetwork","loadingTransaction","nnb1824d","length"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport useStyles from './style';\nimport useCommonStyle from '../../../styles/CommonStyle';\nimport { CircularProgress } from '@material-ui/core';\nimport { getWithdrawPercent, getWithdrawFee } from '../../../store/actions/sota-tiers';\nimport ModalDeposit from '../ModalDeposit';\nimport ModalWithdraw from '../ModalWithdraw';\nimport ModalTransaction from '../ModalTransaction';\nimport useAuth from '../../../hooks/useAuth';\nimport { sotaTiersActions } from '../../../store/constants/sota-tiers';\nimport { sotaTokenActions } from '../../../store/constants/sota-token';\n//@ts-ignore\nimport AnimatedNumber from \"animated-number-react\";\nimport { numberWithCommas } from '../../../utils/formatNumber';\nimport { timeAgo } from '../../../utils/convertDate';\nimport { USER_STATUS, CONVERSION_RATE } from '../../../constants';\nimport {Dialog, DialogTitle, DialogContent, DialogActions} from '@material-ui/core';\nimport { ETH_CHAIN_ID } from '../../../constants/network';\n\nconst iconClose = '/images/icons/close.svg'\n\nconst ManageTier = (props: any) => {\n  const styles = useStyles();\n  const commonStyles = useCommonStyle();\n  const dispatch = useDispatch()\n\n  const [openModalDeposit, setOpenModalDeposit] = useState(false)\n  const [openModalWithdraw, setOpenModalWithdraw] = useState(false)\n  const [openModalTransactionSubmitting, setOpenModalTransactionSubmitting] = useState(false)\n  const [transactionHashes, setTransactionHashes] = useState([]) as any;\n\n\n  const { data: depositTransaction, error: depositError } = useSelector((state: any) => state.deposit);\n  const { data: approveTransaction, error: approveError } = useSelector((state: any) => state.approve);\n  const { data: withdrawTransaction, error: withdrawError } = useSelector((state: any) => state.withdraw);\n  const { data: userInfo = {} } = useSelector((state: any) => state.userInfo);\n  const { data: balance = {} } = useSelector((state: any) => state.balance);\n  const { connectedAccount, isAuth, wrongChain } = useAuth();\n  const { appChainID } = useSelector((state: any) => state.appNetwork).data\n\n  const {\n    classNamePrefix = '',\n    emailVerified,\n    listTokenDetails,\n    totalUnstaked,\n    total\n  } = props;\n\n  useEffect(() => {\n    dispatch(getWithdrawPercent());\n  }, [])\n\n  useEffect(() => {\n    if(depositTransaction?.hash) {\n      setTransactionHashes([...transactionHashes, {tnx: depositTransaction.hash, isApprove: false}]);\n      setOpenModalTransactionSubmitting(false);\n      dispatch({\n        type: sotaTiersActions.DEPOSIT_SUCCESS,\n        payload: undefined,\n      });\n    }\n    if(depositError.message) setOpenModalTransactionSubmitting(false);\n  }, [depositTransaction, depositError])\n\n  useEffect(() => {\n    if(approveTransaction?.hash) {\n      setTransactionHashes([...transactionHashes, {tnx: approveTransaction.hash, isApprove: true}]);\n      setOpenModalTransactionSubmitting(false);\n      dispatch({\n        type: sotaTokenActions.APPROVE_SUCCESS,\n        payload: undefined,\n      });\n    }\n    if(approveError.message) setOpenModalTransactionSubmitting(false);\n  }, [approveTransaction, approveError])\n\n  useEffect(() => {\n    if(withdrawTransaction?.hash) {\n      setTransactionHashes([...transactionHashes, {tnx: withdrawTransaction.hash, isApprove: false}]);\n      setOpenModalTransactionSubmitting(false);\n      dispatch({\n        type: sotaTiersActions.WITHDRAW_SUCCESS,\n        payload: undefined,\n      });\n    }\n    if(withdrawError.message) setOpenModalTransactionSubmitting(false);\n  }, [withdrawTransaction, withdrawError])\n\n  const renderToken = (symbol: string, balance: any, staked: any) => {\n    return <div className=\"group\">\n      <span>{symbol}</span>\n      {(wrongChain || !isAuth) && <span>0</span>}\n      {!wrongChain && isAuth && <span>{numberWithCommas(balance || 0)}</span>}\n      {(wrongChain || !isAuth) && <span>0</span>}\n      {!wrongChain && isAuth && <span>{numberWithCommas(staked || 0)}</span>}\n    </div>\n  }\n\n  return (\n    <div className={`${classNamePrefix}__component`}>\n      <div className={this.styles.content}>\n        <div className={this.styles.manageTier}>\n          <h2 className={this.styles.title}>Wallet balance</h2>\n        </div>\n        <div className={this.styles.walletBalance}>\n          <div className={this.styles.tableHead}>\n            <div className=\"group\">\n              <span>Currency</span>\n              <span>Available Balance</span>\n              <span>Staked</span>\n            </div>\n          </div>\n          <div className={this.styles.tableBody}>\n            {renderToken('PKF', balance?.pkf, userInfo?.pkfStaked)}\n            {renderToken(CONVERSION_RATE[0]?.symbol, balance?.uni, userInfo?.uniStaked)}\n            {renderToken(CONVERSION_RATE[1]?.symbol, balance?.mantra, userInfo?.mantraStaked)}\n          </div>\n        </div>\n        <div className=\"button-area\">\n          <button\n            className={`btn btn-lock ${(emailVerified == USER_STATUS.UNVERIFIED || wrongChain || !isAuth || ETH_CHAIN_ID !== appChainID) ? 'disabled' : ''}`}\n            onClick={() => {setOpenModalDeposit(true)}}\n            disabled={emailVerified == USER_STATUS.UNVERIFIED || wrongChain || !isAuth || ETH_CHAIN_ID !== appChainID}\n          >\n            Stake\n          </button>\n          <button\n            className={`btn btn-unlock ${(emailVerified == USER_STATUS.UNVERIFIED || wrongChain || !isAuth || ETH_CHAIN_ID !== appChainID) ? 'disabled' : ''}`}\n            onClick={() => {setOpenModalWithdraw(true)}}\n            disabled={emailVerified == USER_STATUS.UNVERIFIED || wrongChain || !isAuth || ETH_CHAIN_ID !== appChainID}\n          >\n            Unstake\n          </button>\n        </div>\n        {ETH_CHAIN_ID !== appChainID && <p className={this.styles.noteNetwork}>Note: To change tier, please switch to ETH network to do Stake/Unstake</p>}\n        {/* <p className={this.styles.balance}>\n          {(wrongChain || !isAuth) && <AnimatedNumber\n            value={0}\n            formatValue={numberWithCommas}\n          />}\n          {!wrongChain && isAuth && <AnimatedNumber\n            value={balance.token}\n            formatValue={numberWithCommas}\n          />}\n          &nbsp;{tokenDetails?.symbol}\n        </p> */}\n      </div>\n      <ModalDeposit\n        setOpenModalDeposit={setOpenModalDeposit}\n        setOpenModalTransactionSubmitting={setOpenModalTransactionSubmitting}\n        listTokenDetails={listTokenDetails}\n        open={openModalDeposit}\n        totalStaked={total}\n      />\n      <ModalWithdraw\n        setOpenModalWithdraw={setOpenModalWithdraw}\n        setOpenModalTransactionSubmitting={setOpenModalTransactionSubmitting}\n        listTokenDetails={listTokenDetails}\n        open={openModalWithdraw}\n        totalStaked={total}\n      />\n\n      <Dialog\n        open={openModalTransactionSubmitting}\n        keepMounted\n        onClose={() => setOpenModalTransactionSubmitting(false)}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n        className={commonStyles.loadingTransaction}\n      >\n        <DialogContent className=\"content\">\n          <img src={iconClose} onClick={() => setOpenModalTransactionSubmitting(false)}/>\n          <span className={commonStyles.nnb1824d}>Transaction Submitting</span>\n          <CircularProgress color=\"primary\" />\n        </DialogContent>\n      </Dialog>\n\n      {transactionHashes.length > 0 && <ModalTransaction\n        transactionHashes={transactionHashes}\n        setTransactionHashes={setTransactionHashes}\n        open={transactionHashes.length > 0}\n      />}\n    </div>\n  );\n};\n\nexport default ManageTier;\n"]},"metadata":{},"sourceType":"module"}