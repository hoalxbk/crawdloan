{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/components/Base/TransactionSubmitModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { createStyles, withStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { ClipLoader } from \"react-spinners\";\nimport { useTypedSelector } from '../../../hooks/useTypedSelector';\nimport { ETH_CHAIN_ID } from '../../../constants/network';\nimport useStyles from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ETHERSCAN_URL = process.env.REACT_APP_ETHERSCAN_BASE_URL || \"\";\nconst BCSSCAN_URL = process.env.REACT_APP_BSCSCAN_BASE_URL || \"\";\n\nconst styles = theme => createStyles({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    background: '#020616',\n    paddingTop: 0\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: 'black',\n    backgroundColor: '#4B4B4B',\n    padding: 4,\n    \"&:hover\": {\n      backgroundColor: '#D4D4D4'\n    }\n  },\n  svgIcon: {\n    fontSize: 5\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    customClass,\n    onClose,\n    ...other\n  } = props;\n  const customStyles = {\n    color: 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: `${classes.root} ${customClass}`,\n    ...other,\n    style: customStyles,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    color: '#999999'\n  }\n}))(MuiDialogContent);\n\nconst TransactionSubmitModal = props => {\n  _s();\n\n  const styles = useStyles();\n  const {\n    appChainID\n  } = useTypedSelector(state => state.appNetwork).data;\n  const {\n    opened,\n    handleClose,\n    transactionHash,\n    additionalText,\n    networkAvailable\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: opened,\n    onClose: handleClose,\n    className: styles.dialog,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: handleClose,\n      customClass: styles.dialogTitle,\n      children: [\"Transaction \", transactionHash ? 'Submitted' : 'Submitting']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: transactionHash ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.dialogLabel,\n            children: \"TXn Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: transactionHash,\n            className: styles.dialogInput,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: ETH_CHAIN_ID == appChainID ? `${ETHERSCAN_URL}/tx/${transactionHash}` : `${BCSSCAN_URL}/tx/${transactionHash}`,\n            className: styles.dialogButton,\n            target: \"_blank\",\n            children: [\"View on \", ETH_CHAIN_ID == appChainID ? 'Etherscan' : 'Bscscan']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), additionalText && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginTop: 30,\n              fontWeight: 'bold',\n              lineHeight: '18px',\n              fontSize: 15.5,\n              color: '#8db4ff',\n              fontFamily: 'Helvetica'\n            },\n            children: additionalText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: 'white'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TransactionSubmitModal, \"rXrq8fH/upZuuT5BKGTkiW9wLg8=\", false, function () {\n  return [useStyles, useTypedSelector];\n});\n\n_c = TransactionSubmitModal;\nexport default TransactionSubmitModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionSubmitModal\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/components/Base/TransactionSubmitModal/index.tsx"],"names":["React","createStyles","withStyles","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","Typography","ClipLoader","useTypedSelector","ETH_CHAIN_ID","useStyles","ETHERSCAN_URL","process","env","REACT_APP_ETHERSCAN_BASE_URL","BCSSCAN_URL","REACT_APP_BSCSCAN_BASE_URL","styles","theme","root","margin","padding","spacing","background","paddingTop","closeButton","position","right","top","color","backgroundColor","svgIcon","fontSize","DialogTitle","props","children","classes","customClass","onClose","other","customStyles","DialogContent","TransactionSubmitModal","appChainID","state","appNetwork","data","opened","handleClose","transactionHash","additionalText","networkAvailable","dialog","dialogTitle","dialogLabel","dialogInput","dialogButton","marginTop","fontWeight","lineHeight","fontFamily"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {createStyles, Theme, withStyles, WithStyles} from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport {ClipLoader} from \"react-spinners\";\nimport {useTypedSelector} from '../../../hooks/useTypedSelector';\nimport {ETH_CHAIN_ID} from '../../../constants/network';\n\nimport useStyles from './style';\n\nconst ETHERSCAN_URL = process.env.REACT_APP_ETHERSCAN_BASE_URL || \"\";\nconst BCSSCAN_URL = process.env.REACT_APP_BSCSCAN_BASE_URL || \"\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n      background: '#020616',\n      paddingTop: 0\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: 'black',\n      backgroundColor: '#4B4B4B',\n      padding: 4,\n\n      \"&:hover\" : {\n        backgroundColor: '#D4D4D4'\n      }\n    },\n    svgIcon: {\n      fontSize: 5\n    }\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n  customClass: string,\n  networkAvailable?: string,\n}\n\nexport interface ComponentProps {\n  opened: boolean,\n  handleClose: () => void;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, customClass, onClose, ...other } = props;\n\n  const customStyles = {\n    color: 'white',\n  }\n\n  return (\n    <MuiDialogTitle disableTypography className={`${classes.root} ${customClass}`} {...other} style={customStyles}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    color: '#999999'\n  },\n}))(MuiDialogContent);\n\nconst TransactionSubmitModal: React.FC<any> = (props: any) => {\n  const styles = useStyles();\n  const { appChainID } = useTypedSelector(state => state.appNetwork).data;\n  const { opened, handleClose, transactionHash, additionalText, networkAvailable } = props;\n\n  return (\n      <Dialog open={opened} onClose={handleClose} className={styles.dialog}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} customClass={styles.dialogTitle} >\n          Transaction {transactionHash ? 'Submitted': 'Submitting'}\n        </DialogTitle>\n        <DialogContent>\n          <div>\n            {\n              transactionHash ? (\n                <>\n                <span className={styles.dialogLabel}>TXn Hash</span>\n                <input value={transactionHash} className={styles.dialogInput} disabled={true} />\n                <a\n                  href={ETH_CHAIN_ID == appChainID ? `${ETHERSCAN_URL}/tx/${transactionHash}` : `${BCSSCAN_URL}/tx/${transactionHash}`}\n                  className={styles.dialogButton}\n                  target=\"_blank\"\n                >\n                  View on {ETH_CHAIN_ID == appChainID ? 'Etherscan' : 'Bscscan'}\n                </a>\n                {\n                  additionalText && (\n                    <p style={{ marginTop: 30, fontWeight: 'bold', lineHeight: '18px', fontSize: 15.5, color: '#8db4ff', fontFamily: 'Helvetica' }}>\n                      {additionalText}\n                    </p>\n                  )\n                }\n                </>\n              ): <ClipLoader color={'white'}/>\n            }\n          </div>\n        </DialogContent>\n      </Dialog>\n  )\n}\n\nexport default TransactionSubmitModal;\n"]},"metadata":{},"sourceType":"module"}