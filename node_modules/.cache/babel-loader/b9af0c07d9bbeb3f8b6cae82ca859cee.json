{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/BuyToken/MyTier/index.tsx\",\n    _s = $RefreshSig$();\n\n/* import { useState, useEffect } from 'react'; */\n\n/* import useFetch from '../../../hooks/useFetch'; */\nimport { convertTimeToStringFormat } from '../../../utils/convertDate';\nimport withWidth from '@material-ui/core/withWidth';\n/* import Tooltip from '@material-ui/core/Tooltip'; */\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport useStyles from './style';\nimport TierTableWithWeightRate from \"./TierTableWithWeightRate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst headers = ['Tier', 'Allocation (%)', 'Start Buy Time', 'End Buy Time'];\n\nconst MyTier = ({\n  tiers,\n  poolDetails\n}) => {\n  _s();\n\n  const styles = useStyles();\n  const poolPickWeight = 27; // const poolPickWeight = 860;\n\n  const isPickeWeight = poolDetails.id == poolPickWeight;\n  console.log('poolDetails -- poolDetails===>', poolDetails);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: this.styles.MyTier,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: this.styles.MyTierRulesHeader,\n      children: \"At current tier, you will be able to purchase with the following rules:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: this.styles.tableContainer,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: this.styles.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          className: this.styles.tableHeaderWrapper,\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: headers.map(header => /*#__PURE__*/_jsxDEV(TableCell, {\n              className: this.styles.tableHeader,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this)\n            }, header, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [!isPickeWeight && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: tiers && tiers.length > 0 && tiers.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.allocation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: [!row.startTime && '--', row.startTime && convertTimeToStringFormat(new Date(row.startTime * 1000))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: [!row.endTime && '--', row.endTime && convertTimeToStringFormat(new Date(row.endTime * 1000))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this))\n          }, void 0, false), isPickeWeight && tiers && tiers.length > 0 && /*#__PURE__*/_jsxDEV(TierTableWithWeightRate, {\n            tiers: tiers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyTier, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", false, function () {\n  return [useStyles];\n});\n\n_c = MyTier;\nexport default withWidth()(MyTier);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyTier\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/BuyToken/MyTier/index.tsx"],"names":["convertTimeToStringFormat","withWidth","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","TierTableWithWeightRate","headers","MyTier","tiers","poolDetails","styles","poolPickWeight","isPickeWeight","id","console","log","MyTierRulesHeader","tableContainer","table","tableHeaderWrapper","map","header","tableHeader","length","row","index","name","allocation","startTime","Date","endTime"],"mappings":";;;AAAA;;AACA;AAGA,SAASA,yBAAT,QAA0C,4BAA1C;AACA,OAAOC,SAAP,MAAqC,6BAArC;AAEA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;;;AAOA,MAAMC,OAAO,GAAG,CAAC,MAAD,EAAS,gBAAT,EAA2B,gBAA3B,EAA6C,cAA7C,CAAhB;;AAEA,MAAMC,MAA6B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyC;AAAA;;AAC7E,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,cAAc,GAAG,EAAvB,CAF6E,CAG7E;;AACA,QAAMC,aAAa,GAAGH,WAAW,CAACI,EAAZ,IAAkBF,cAAxC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CN,WAA9C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAE,KAAKC,MAAL,CAAYH,MAA5B;AAAA,4BAIE;AAAG,MAAA,SAAS,EAAE,KAAKG,MAAL,CAAYM,iBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOI,QAAC,cAAD;AAAgB,MAAA,SAAS,EAAEb,KAA3B;AAAkC,MAAA,SAAS,EAAE,KAAKO,MAAL,CAAYO,cAAzD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKP,MAAL,CAAYQ,KAA9B;AAAqC,sBAAW,cAAhD;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,SAAS,EAAE,KAAKR,MAAL,CAAYS,kBAAlC;AAAA,iCACE,QAAC,QAAD;AAAA,sBAEEb,OAAO,CAACc,GAAR,CAAYC,MAAM,iBAChB,QAAC,SAAD;AAAwB,cAAA,SAAS,EAAE,KAAKX,MAAL,CAAYY,WAA/C;AAAA,qCACE;AAAA,0BACGD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,eAAgBA,MAAhB;AAAA;AAAA;AAAA;AAAA,oBADF;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,SAAD;AAAA,qBACG,CAACT,aAAD,iBACC;AAAA,sBACGJ,KAAK,IAAIA,KAAK,CAACe,MAAN,GAAc,CAAvB,IAA4Bf,KAAK,CAACY,GAAN,CAAU,CAACI,GAAD,EAAWC,KAAX,kBACrC,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,IAArB;AAA0B,gBAAA,KAAK,EAAC,KAAhC;AAAA,0BACGD,GAAG,CAACE;AADP;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,IAArB;AAA0B,gBAAA,KAAK,EAAC,KAAhC;AAAA,0BACGF,GAAG,CAACG;AADP;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,IAArB;AAA0B,gBAAA,KAAK,EAAC,KAAhC;AAAA,2BACG,CAACH,GAAG,CAACI,SAAL,IAAkB,IADrB,EAEGJ,GAAG,CAACI,SAAJ,IAAgBjC,yBAAyB,CAAC,IAAIkC,IAAJ,CAASL,GAAG,CAACI,SAAJ,GAAgB,IAAzB,CAAD,CAF5C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAWE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAC,IAArB;AAA0B,gBAAA,KAAK,EAAC,KAAhC;AAAA,2BACG,CAACJ,GAAG,CAACM,OAAL,IAAgB,IADnB,EAEGN,GAAG,CAACM,OAAJ,IAAenC,yBAAyB,CAAC,IAAIkC,IAAJ,CAASL,GAAG,CAACM,OAAJ,GAAc,IAAvB,CAAD,CAF3C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF;AAAA,eAAeL,KAAf;AAAA;AAAA;AAAA;AAAA,oBAD2B;AAD/B,2BAFJ,EAwBGb,aAAa,IACZJ,KADD,IACUA,KAAK,CAACe,MAAN,GAAe,CADzB,iBAEG,QAAC,uBAAD;AACE,YAAA,KAAK,EAAEf;AADT;AAAA;AAAA;AAAA;AAAA,kBA1BN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4DD,CAnED;;GAAMD,M;UACWH,S;;;KADXG,M;AAqEN,eAAeX,SAAS,GAAGW,MAAH,CAAxB","sourcesContent":["/* import { useState, useEffect } from 'react'; */\n/* import useFetch from '../../../hooks/useFetch'; */\nimport { Link } from 'react-router-dom';\nimport { Tier } from '../../../hooks/usePoolDetails';\nimport { convertTimeToStringFormat } from '../../../utils/convertDate';\nimport withWidth, {isWidthDown} from '@material-ui/core/withWidth';\n\n/* import Tooltip from '@material-ui/core/Tooltip'; */\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport useStyles from './style';\nimport TierTableWithWeightRate from \"./TierTableWithWeightRate\";\n\ntype MyTierProps = {\n  tiers: Tier[] | undefined,\n  poolDetails: any,\n}\n\nconst headers = ['Tier', 'Allocation (%)', 'Start Buy Time', 'End Buy Time'];\n\nconst MyTier: React.FC<MyTierProps> = ({ tiers, poolDetails }: MyTierProps) => {\n  const styles = useStyles();\n  const poolPickWeight = 27;\n  // const poolPickWeight = 860;\n  const isPickeWeight = poolDetails.id == poolPickWeight;\n  console.log('poolDetails -- poolDetails===>', poolDetails);\n\n  return (\n    <div className={this.styles.MyTier}>\n      {/* <p className={this.styles.MyTierAccountRedirect}> */}\n      {/*   To upgrade your tier, please click <Link to=\"/account\" style={{ color: '#6399FF', textDecoration: 'underline' }}>here</Link> ! */}\n      {/* </p> */}\n      <p className={this.styles.MyTierRulesHeader}>\n        At current tier, you will be able to purchase with the following rules:\n      </p>\n        <TableContainer component={Paper} className={this.styles.tableContainer}>\n          <Table className={this.styles.table} aria-label=\"simple table\">\n            <TableHead className={this.styles.tableHeaderWrapper}>\n              <TableRow>\n              {\n                headers.map(header => (\n                  <TableCell key={header} className={this.styles.tableHeader}>\n                    <span>\n                      {header}\n                    </span>\n                  </TableCell>\n                ))\n              }\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {!isPickeWeight &&\n                <>\n                  {tiers && tiers.length> 0 && tiers.map((row: any, index) => (\n                    <TableRow key={index}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.allocation}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {!row.startTime && '--'}\n                        {row.startTime &&convertTimeToStringFormat(new Date(row.startTime * 1000))}\n                      </TableCell>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {!row.endTime && '--'}\n                        {row.endTime && convertTimeToStringFormat(new Date(row.endTime * 1000))}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </>\n              }\n\n              {isPickeWeight &&\n                tiers && tiers.length > 0 && (\n                  <TierTableWithWeightRate\n                    tiers={tiers}\n                  />\n                )\n              }\n\n            </TableBody>\n            </Table>\n        </TableContainer>\n    </div>\n  )\n}\n\nexport default withWidth()(MyTier);\n"]},"metadata":{},"sourceType":"module"}