{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/components/Base/Countdown/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport useStyles from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countdown = ({\n  startDate,\n  getCurrentDateRealTime\n}) => {\n  _s();\n\n  const styles = useStyles();\n  const [second, setSecond] = useState('0');\n  const [minute, setMinute] = useState('0');\n  const [hour, setHour] = useState('0');\n  const [day, setDay] = useState('0');\n  const emitCurrentDate = useCallback(now => {\n    getCurrentDateRealTime && getCurrentDateRealTime(now);\n  }, [getCurrentDateRealTime]);\n  useEffect(() => {\n    let countDownInterval = undefined;\n\n    if (startDate && startDate >= new Date()) {\n      const second = 1000,\n            minute = second * 60,\n            hour = minute * 60,\n            day = hour * 24;\n      let countDown = startDate.getTime();\n      countDownInterval = setInterval(function () {\n        let now = new Date().getTime(),\n            distance = countDown - now;\n\n        if (distance >= 0) {\n          const currentDay = Math.floor(distance / day);\n          const currentHour = Math.floor(distance % day / hour);\n          const currentMinute = Math.floor(distance % hour / minute);\n          const currentSecond = Math.floor(distance % minute / second);\n          setDay(currentDay < 10 ? `0${currentDay}` : `${currentDay}`);\n          setHour(currentHour < 10 ? `0${currentHour}` : `${currentHour}`);\n          setMinute(currentMinute < 10 ? `0${currentMinute}` : `${currentMinute}`);\n          setSecond(currentSecond < 10 ? `0${currentSecond}` : `${currentSecond}`);\n          emitCurrentDate(new Date(now));\n        } //do something later when date is reached\n\n\n        if (distance <= 0 && countDownInterval) {\n          clearInterval(countDownInterval);\n          window.location.reload();\n        } //seconds\n\n      }, 0);\n    } else {\n      setSecond(\"00\");\n      setMinute(\"00\");\n      setHour(\"00\");\n      setDay(\"00\");\n    }\n\n    return () => {\n      clearInterval(countDownInterval);\n    };\n  }, [startDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"countdown\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        display: 'flex',\n        alignItems: 'flex-start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.countdownPart + ' number',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"days\",\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.countdownInfo,\n          children: \"Days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.countdownPart,\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.countdownPart + ' number',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"hours\",\n          children: hour\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.countdownInfo,\n          children: \"Hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.countdownPart,\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.countdownPart + ' number',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"minutes\",\n          children: minute\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.countdownInfo,\n          children: \"Minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.countdownPart,\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.countdownPart + ' number',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"seconds\",\n          children: second\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.countdownInfo,\n          children: \"Seconds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Countdown, \"0ZNq+QX6BU9++pnhyt+AIatb3KQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/components/Base/Countdown/index.tsx"],"names":["React","useState","useEffect","useCallback","useStyles","Countdown","startDate","getCurrentDateRealTime","styles","second","setSecond","minute","setMinute","hour","setHour","day","setDay","emitCurrentDate","now","countDownInterval","undefined","Date","countDown","getTime","setInterval","distance","currentDay","Math","floor","currentHour","currentMinute","currentSecond","clearInterval","window","location","reload","display","alignItems","countdownPart","countdownInfo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport useStyles from './style';\n\ntype CountDownProps = {\n  startDate?: Date,\n  getCurrentDateRealTime?: (currentDate: Date) => void\n}\n\nconst Countdown: React.FC<CountDownProps> = ({ startDate, getCurrentDateRealTime }: CountDownProps) => {\n  const styles = useStyles();\n  const [second, setSecond] = useState('0');\n  const [minute, setMinute] = useState('0');\n  const [hour, setHour] = useState('0');\n  const [day, setDay] = useState('0');\n\n  const emitCurrentDate = useCallback((now: Date) => {\n    getCurrentDateRealTime && getCurrentDateRealTime(now);\n  }, [getCurrentDateRealTime]);\n\n  useEffect(() => {\n    let countDownInterval = undefined as any; \n\n    if (startDate && startDate >= new Date()) {\n      const second = 1000,\n      minute = second * 60,\n      hour = minute * 60,\n      day = hour * 24;\n\n      let countDown = startDate.getTime();\n      countDownInterval = setInterval(function() {    \n\n        let now = new Date().getTime(), distance = countDown - now;\n        \n        if (distance >= 0) {\n          const currentDay = Math.floor(distance / (day));\n          const currentHour = Math.floor((distance % (day)) / (hour))\n          const currentMinute = Math.floor((distance % (hour)) / (minute));\n          const currentSecond = Math.floor((distance % (minute)) / second)\n\n          setDay(currentDay < 10 ? `0${currentDay}`: `${currentDay}`);\n          setHour(currentHour < 10 ? `0${currentHour}`: `${currentHour}`);\n          setMinute(currentMinute < 10 ? `0${currentMinute}`: `${currentMinute}`);\n          setSecond(currentSecond < 10 ? `0${currentSecond}`: `${currentSecond}`);\n          emitCurrentDate(new Date(now));\n        }\n\n        //do something later when date is reached\n        if (distance <= 0 && countDownInterval) {\n          clearInterval(countDownInterval);\n          window.location.reload();\n        }\n        //seconds\n      }, 0);\n    } else {\n      setSecond(\"00\");\n      setMinute(\"00\");\n      setHour(\"00\");\n      setDay(\"00\");\n    }\n\n    return () => {\n      clearInterval(countDownInterval);\n    }\n  }, [startDate]);\n\n  return (\n    <div id=\"countdown\">\n      <ul style={{ display: 'flex', alignItems: 'flex-start' }}>\n        <li className={styles.countdownPart + ' number'}>\n          <span id=\"days\">{day}</span><span className={styles.countdownInfo}>Days</span>\n        </li>\n        <li className={styles.countdownPart}>:</li>\n        <li className={styles.countdownPart + ' number'}>\n          <span id=\"hours\">{hour}</span><span className={styles.countdownInfo}>Hours</span>\n        </li>\n        <li className={styles.countdownPart}>:</li>\n        <li className={styles.countdownPart + ' number'}>\n          <span id=\"minutes\">{minute}</span><span className={styles.countdownInfo}>Minutes</span></li>\n        <li className={styles.countdownPart}>:</li>\n        <li className={styles.countdownPart + ' number'}>\n          <span id=\"seconds\">{second}</span><span className={styles.countdownInfo}>Seconds</span></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Countdown;\n"]},"metadata":{},"sourceType":"module"}