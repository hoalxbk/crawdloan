{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/components/Base/HeaderDefaultLayout/HeaderDefaultLayout.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { BeatLoader } from 'react-spinners';\nimport { css } from \"@emotion/core\";\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport useStyles from './styles';\nimport ButtonLink from '../ButtonLink';\nimport { ETH_CHAIN_ID } from '../../../constants/network';\nimport AppNetworkSwitch from './AppNetworkSwitch';\nimport ConnectWalletModal from './ConnectWalletModal';\nimport WalletDisconnect from './WalletDisconnect';\nimport { HeaderContext } from './context/HeaderContext';\nimport { AppContext } from '../../../AppContext';\nimport { trimMiddlePartAddress } from '../../../utils/accountAddress';\nimport { connectorsByName } from '../../../constants/connectors';\nimport { WalletConnectionState } from '../../../store/reducers/wallet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountIcon = \"user.svg\";\nconst BrightStartIcon = \"bright-star.svg\";\nconst WalletIcon = \"wallet.svg\";\nconst EthereumIcon = \"ethereum.svg\";\nconst BSCIcon = \"bsc.svg\";\nconst logo = \"/images/logo-red-kite.svg\";\nconst iconClose = \"/images/icons/close.svg\";\nconst iconHamburger = \"/images/icons/hamburger.svg\";\nconst iconAccount = \"icons/account.svg\";\n\nconst HeaderDefaultLayout = props => {\n  _s();\n\n  const styles = useStyles();\n  const [switchNetworkDialog, setSwitchNetworkDialog] = useState(false);\n  const [disconnectDialog, setDisconnectDialog] = useState(false);\n  const [agreedTerms, setAgreedTerms] = useState(false);\n  const {\n    appChainID\n  } = useSelector(state => state.appNetwork).data;\n  const walletsInfo = useSelector(state => state.wallet).entities;\n  const [openSideBar, setOpenSideBar] = useState(false);\n  const {\n    data: message = ''\n  } = useSelector(state => state.messages);\n  const {\n    handleProviderChosen,\n    currentConnector,\n    walletName,\n    setWalletName,\n    loginError,\n    currentConnectedWallet,\n    setCurrentConnectedWallet,\n    openConnectWallet,\n    setOpenConnectWallet,\n    connectWalletLoading\n  } = useContext(AppContext);\n  const currentAccount = currentConnectedWallet && currentConnectedWallet.addresses[0];\n  const balance = currentConnectedWallet ? currentConnectedWallet.balances[currentAccount] : 0;\n\n  const handleConnectWalletClose = () => {\n    setOpenConnectWallet && setOpenConnectWallet(false);\n  };\n\n  const handleConnectWalletOpen = () => {\n    setOpenConnectWallet && setOpenConnectWallet(true);\n    setOpenSideBar(false);\n  };\n\n  const handleDisconnectDialogOpen = () => {\n    setDisconnectDialog(true);\n    setOpenSideBar(false);\n  };\n  /* const hamburgerStyle = (isSmartPhone: boolean) => { */\n\n  /*   if(isSmartPhone) { */\n\n  /*     return openSideBar ? 'flex' : 'none'; */\n\n  /*   } */\n\n  /*   else { */\n\n  /*     return 'flex'; */\n\n  /*   } */\n\n  /* } */\n\n\n  useEffect(() => {\n    if (walletsInfo && walletName) {\n      let currentWalletsName = [];\n      let isFound = false;\n      Object.keys(walletsInfo).forEach(key => {\n        const wallet = walletsInfo[key];\n\n        if (wallet.addresses.length > 0 && wallet.connectionState === WalletConnectionState.CONNECTED && !isFound) {\n          isFound = true;\n          setCurrentConnectedWallet && setCurrentConnectedWallet(wallet);\n          currentWalletsName.push(key);\n        }\n      });\n\n      if (currentWalletsName.length > 0 && walletName.length === 0 && !currentConnector) {\n        const chooseWallet = currentWalletsName[0];\n        setWalletName && setWalletName(currentWalletsName);\n        handleProviderChosen && handleProviderChosen(chooseWallet, connectorsByName[chooseWallet]);\n      }\n    }\n  }, [walletsInfo, walletName]);\n\n  const handleClickPoolList = e => {\n    var _props$location;\n\n    console.log('props', props.location.pathname);\n\n    if ((props === null || props === void 0 ? void 0 : (_props$location = props.location) === null || _props$location === void 0 ? void 0 : _props$location.pathname) === '/dashboard') {\n      window.location.reload();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.styles.navBar,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/',\n            className: this.styles.navbarLink,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              className: this.styles.navbarLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), isWidthDown('xs', props.width) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: iconHamburger,\n          onClick: () => setOpenSideBar(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.styles.rightBar + (openSideBar ? ' active' : ''),\n          children: [isWidthDown('xs', props.width) && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: logo,\n              className: this.styles.sideBarLogo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: iconClose,\n              className: this.styles.closeBtn,\n              onClick: () => setOpenSideBar(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(ButtonLink, {\n            text: \"Pool\",\n            to: '/dashboard',\n            icon: BrightStartIcon,\n            className: `${this.styles.btn} start`,\n            onClick: handleClickPoolList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 19\n          }, this), currentAccount && /*#__PURE__*/_jsxDEV(ButtonLink, {\n            text: \"My Account\",\n            to: '/account',\n            icon: iconAccount,\n            className: `${this.styles.btn} start my-account`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${this.styles.btn} ${this.styles.btnNetwork}`,\n            onClick: () => {\n              setSwitchNetworkDialog(true);\n              setOpenSideBar(false);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/images/${appChainID === ETH_CHAIN_ID ? EthereumIcon : BSCIcon}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: this.styles.btnConnectText,\n              children: appChainID === ETH_CHAIN_ID ? 'Ethereum' : 'BSC Mainnet'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `${this.styles.btn} ${this.styles.btnConnect}`,\n            onClick: () => {\n              if (!connectWalletLoading) {\n                !currentAccount ? handleConnectWalletOpen() : handleDisconnectDialogOpen();\n              }\n            },\n            disabled: connectWalletLoading,\n            children: !connectWalletLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: currentAccount && (!loginError ? `${balance} ${appChainID === ETH_CHAIN_ID ? \"ETH\" : \"BNB\"}` : '0')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 23\n              }, this), !currentAccount && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/images/${WalletIcon}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `${this.styles.btnConnectText} ${currentAccount ? this.styles.btnAccount : ''}`,\n                children: currentAccount && `${trimMiddlePartAddress(currentAccount)}` || \"Connect Wallet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(BeatLoader, {\n              color: 'white',\n              css: css`margin-top: 3px`,\n              size: 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeaderContext.Provider, {\n        value: {\n          agreedTerms,\n          setAgreedTerms\n        },\n        children: [/*#__PURE__*/_jsxDEV(ConnectWalletModal, {\n          opened: openConnectWallet,\n          handleClose: handleConnectWalletClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AppNetworkSwitch, {\n          opened: switchNetworkDialog,\n          handleClose: () => setSwitchNetworkDialog(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WalletDisconnect, {\n          opened: disconnectDialog,\n          handleClose: () => {\n            setDisconnectDialog(false);\n            setAgreedTerms(false);\n            setOpenSideBar(false);\n          },\n          currentWallet: currentConnectedWallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), loginError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.styles.loginErrorBanner,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/red-warning.svg\",\n          alt: \"red-warning icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.styles.loginErrorBannerText,\n          children: [loginError, \" Learn how to \\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://help.1inch.exchange/en/articles/4966690-how-to-use-1inch-on-bsc-binance-smart-chain\",\n            target: \"_blank\",\n            className: this.styles.loginErrorGuide,\n            children: \"change network in wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this), \"\\xA0 or \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: this.styles.btnChangeAppNetwork,\n            onClick: () => {\n              setOpenSideBar(false);\n              setSwitchNetworkDialog(true);\n            },\n            children: \"Change App Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), window.location.href.indexOf('buy-token') > -1 && !loginError && message != '' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.styles.loginErrorBanner,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/red-warning.svg\",\n          alt: \"red-warning icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: this.styles.loginErrorBannerText,\n          children: [message, \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: this.styles.btnChangeAppNetwork,\n            onClick: () => {\n              setOpenSideBar(false);\n              setSwitchNetworkDialog(true);\n            },\n            children: \"Change App Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 95\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(HeaderDefaultLayout, \"YCNH3p43e1bDtRVWPWDycipCQXc=\", false, function () {\n  return [useStyles, useSelector, useSelector, useSelector];\n});\n\n_c = HeaderDefaultLayout;\nexport default withWidth()(withRouter(HeaderDefaultLayout));\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderDefaultLayout\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/components/Base/HeaderDefaultLayout/HeaderDefaultLayout.tsx"],"names":["React","useState","useEffect","useContext","withRouter","Link","useSelector","BeatLoader","css","withWidth","isWidthDown","useStyles","ButtonLink","ETH_CHAIN_ID","AppNetworkSwitch","ConnectWalletModal","WalletDisconnect","HeaderContext","AppContext","trimMiddlePartAddress","connectorsByName","WalletConnectionState","AccountIcon","BrightStartIcon","WalletIcon","EthereumIcon","BSCIcon","logo","iconClose","iconHamburger","iconAccount","HeaderDefaultLayout","props","styles","switchNetworkDialog","setSwitchNetworkDialog","disconnectDialog","setDisconnectDialog","agreedTerms","setAgreedTerms","appChainID","state","appNetwork","data","walletsInfo","wallet","entities","openSideBar","setOpenSideBar","message","messages","handleProviderChosen","currentConnector","walletName","setWalletName","loginError","currentConnectedWallet","setCurrentConnectedWallet","openConnectWallet","setOpenConnectWallet","connectWalletLoading","currentAccount","addresses","balance","balances","handleConnectWalletClose","handleConnectWalletOpen","handleDisconnectDialogOpen","currentWalletsName","isFound","Object","keys","forEach","key","length","connectionState","CONNECTED","push","chooseWallet","handleClickPoolList","e","console","log","location","pathname","window","reload","navBar","navbarLink","navbarLogo","width","rightBar","sideBarLogo","closeBtn","btn","btnNetwork","btnConnectText","btnConnect","btnAccount","loginErrorBanner","loginErrorBannerText","loginErrorGuide","btnChangeAppNetwork","href","indexOf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { BeatLoader } from 'react-spinners';\nimport { css } from \"@emotion/core\";\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport useStyles from './styles';\n\nimport ButtonLink from '../ButtonLink'\nimport { ETH_CHAIN_ID } from '../../../constants/network'\nimport AppNetworkSwitch from './AppNetworkSwitch';\nimport ConnectWalletModal from './ConnectWalletModal';\nimport WalletDisconnect from './WalletDisconnect';\nimport { HeaderContext } from './context/HeaderContext'\nimport { AppContext } from '../../../AppContext';\nimport { trimMiddlePartAddress } from '../../../utils/accountAddress';\nimport { connectorsByName, connectorNames } from '../../../constants/connectors';\nimport { WalletConnectionState } from  '../../../store/reducers/wallet';\n\nconst AccountIcon = \"user.svg\";\nconst BrightStartIcon = \"bright-star.svg\";\nconst WalletIcon = \"wallet.svg\";\nconst EthereumIcon = \"ethereum.svg\";\nconst BSCIcon = \"bsc.svg\";\nconst logo = \"/images/logo-red-kite.svg\";\nconst iconClose = \"/images/icons/close.svg\";\nconst iconHamburger = \"/images/icons/hamburger.svg\";\nconst iconAccount = \"icons/account.svg\";\n\nconst HeaderDefaultLayout: React.FC<any> = (props: any) => {\n  const styles = useStyles();\n\n  const [switchNetworkDialog, setSwitchNetworkDialog] = useState<boolean>(false);\n  const [disconnectDialog, setDisconnectDialog] = useState<boolean>(false);\n  const [agreedTerms, setAgreedTerms] = useState<boolean>(false);\n  const { appChainID } = useSelector((state: any) => state.appNetwork).data;\n  const walletsInfo = useSelector((state: any) => state.wallet).entities;\n  const [openSideBar, setOpenSideBar] = useState(false);\n  const { data: message = '' } = useSelector((state: any) => state.messages);\n\n  const {\n    handleProviderChosen,\n    currentConnector,\n    walletName,\n    setWalletName,\n    loginError,\n    currentConnectedWallet,\n    setCurrentConnectedWallet,\n    openConnectWallet,\n    setOpenConnectWallet,\n    connectWalletLoading\n  } = useContext(AppContext);\n\n  const currentAccount = currentConnectedWallet && currentConnectedWallet.addresses[0];\n  const balance = currentConnectedWallet ? currentConnectedWallet.balances[currentAccount]: 0;\n\n  const handleConnectWalletClose = () => {\n    setOpenConnectWallet && setOpenConnectWallet(false);\n  }\n\n  const handleConnectWalletOpen = () => {\n    setOpenConnectWallet && setOpenConnectWallet(true);\n    setOpenSideBar(false);\n  }\n\n  const handleDisconnectDialogOpen = () => {\n    setDisconnectDialog(true);\n    setOpenSideBar(false)\n  }\n\n  /* const hamburgerStyle = (isSmartPhone: boolean) => { */\n  /*   if(isSmartPhone) { */\n  /*     return openSideBar ? 'flex' : 'none'; */\n  /*   } */\n  /*   else { */\n  /*     return 'flex'; */\n  /*   } */\n  /* } */\n\n  useEffect(() => {\n    if (walletsInfo && walletName) {\n      let currentWalletsName: string[] = [];\n      let isFound = false;\n\n      Object.keys(walletsInfo).forEach(key => {\n        const wallet = walletsInfo[key];\n\n        if (wallet.addresses.length > 0 && wallet.connectionState === WalletConnectionState.CONNECTED && !isFound) {\n          isFound = true;\n          setCurrentConnectedWallet && setCurrentConnectedWallet(wallet);\n          currentWalletsName.push(key);\n        }\n      });\n\n      if (currentWalletsName.length > 0 && walletName.length === 0 && !currentConnector) {\n        const chooseWallet = currentWalletsName[0] as connectorNames;\n\n        setWalletName && setWalletName(currentWalletsName);\n        handleProviderChosen && handleProviderChosen(chooseWallet, connectorsByName[chooseWallet]);\n      }\n    }\n  }, [walletsInfo, walletName]);\n\n  const handleClickPoolList = (e: any) => {\n    console.log('props', props.location.pathname);\n    if (props?.location?.pathname === '/dashboard') {\n      window.location.reload();\n    }\n  };\n\n  return (\n    <>\n      <div>\n        <div className={this.styles.navBar}>\n          <div>\n            <Link to={'/'} className={this.styles.navbarLink}>\n              <img src={logo} className={this.styles.navbarLogo}/>\n            </Link>\n          </div>\n          {isWidthDown('xs', props.width) && <img src={iconHamburger} onClick={() => setOpenSideBar(true)}/>}\n          <div className={this.styles.rightBar + (openSideBar ? ' active' : '')}>\n              {isWidthDown('xs', props.width) &&\n                <>\n                  <img src={logo} className={this.styles.sideBarLogo}/>\n                  <img src={iconClose} className={this.styles.closeBtn} onClick={() => setOpenSideBar(false)}/></>}\n                  <ButtonLink text=\"Pool\" to={'/dashboard'} icon={BrightStartIcon} className={`${this.styles.btn} start`} onClick={handleClickPoolList}/>\n                  {currentAccount && <ButtonLink text=\"My Account\" to={'/account'} icon={iconAccount} className={`${this.styles.btn} start my-account`} />}\n                  <button className={`${this.styles.btn} ${this.styles.btnNetwork}`} onClick={() => {setSwitchNetworkDialog(true); setOpenSideBar(false);}}>\n                    <img src={`/images/${appChainID === ETH_CHAIN_ID ? EthereumIcon: BSCIcon}`} />\n                    <span className={this.styles.btnConnectText}>\n                      {appChainID === ETH_CHAIN_ID ? 'Ethereum': 'BSC Mainnet'}\n                    </span>\n                  </button>\n                  <button\n                    className={`${this.styles.btn} ${this.styles.btnConnect}`}\n                    onClick={() => {\n                      if (!connectWalletLoading) {\n                        !currentAccount ? handleConnectWalletOpen(): handleDisconnectDialogOpen()\n                      }\n                    }}\n                    disabled={connectWalletLoading}\n                  >\n                {\n                  !connectWalletLoading ? (\n                    <>\n                      <span>\n                      {\n                        currentAccount && (!loginError ? `${balance} ${appChainID === ETH_CHAIN_ID ? \"ETH\": \"BNB\"}`: '0' )\n                      }\n                      </span>\n                      {\n                        !currentAccount && <img src={ `/images/${WalletIcon}`} />\n                      }\n                      <span className={`${this.styles.btnConnectText} ${currentAccount ? this.styles.btnAccount: ''}`}>\n                      {\n                        currentAccount && `${trimMiddlePartAddress(currentAccount)}` || \"Connect Wallet\"\n                      }\n                      </span>\n                      </>\n                  ): <BeatLoader color={'white'} css={css`margin-top: 3px`} size={10} />\n                }\n                </button>\n            </div>\n          </div>\n        <HeaderContext.Provider value={{ agreedTerms, setAgreedTerms }}>\n            <ConnectWalletModal opened={openConnectWallet as boolean} handleClose={handleConnectWalletClose}/>\n            <AppNetworkSwitch\n              opened={switchNetworkDialog}\n              handleClose={() => setSwitchNetworkDialog(false)}\n            />\n            <WalletDisconnect\n              opened={disconnectDialog}\n              handleClose={() => { setDisconnectDialog(false); setAgreedTerms(false); setOpenSideBar(false); }}\n              currentWallet={currentConnectedWallet}\n            />\n        </HeaderContext.Provider>\n        {\n          loginError && (\n            <div className={this.styles.loginErrorBanner}>\n              <img src=\"/images/red-warning.svg\" alt=\"red-warning icon\" />\n              <span className={this.styles.loginErrorBannerText}>\n                {loginError} Learn how to &nbsp;\n                <a href=\"https://help.1inch.exchange/en/articles/4966690-how-to-use-1inch-on-bsc-binance-smart-chain\" target=\"_blank\" className={this.styles.loginErrorGuide}>\n                  change network in wallet\n                </a>\n                &nbsp; or &nbsp;\n                <button\n                  className={this.styles.btnChangeAppNetwork}\n                  onClick={() => {setOpenSideBar(false); setSwitchNetworkDialog(true);}}\n                >\n                  Change App Network\n                </button>\n              </span>\n            </div>\n          )\n        }\n        {\n          (window.location.href.indexOf('buy-token') > -1) && !loginError && message != '' && <div className={this.styles.loginErrorBanner}>\n          <img src=\"/images/red-warning.svg\" alt=\"red-warning icon\" />\n          <span className={this.styles.loginErrorBannerText}>\n            {message}&nbsp;&nbsp;\n            <button\n              className={this.styles.btnChangeAppNetwork}\n              onClick={() => {setOpenSideBar(false); setSwitchNetworkDialog(true);}}\n            >\n              Change App Network\n            </button>\n          </span>\n        </div>\n        }\n      </div>\n    </>\n  );\n};\n\nexport default withWidth()(withRouter(HeaderDefaultLayout));\n"]},"metadata":{},"sourceType":"module"}