{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useCallback } from 'react';\nimport axios from '../services/axios';\n\nconst useFetch = (uri, suspendRender = false, config = {}) => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(undefined);\n  const [error, setError] = useState('');\n  const fetchDataFromUri = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      var _response$data;\n\n      const response = await axios.get(uri, config);\n      response.data && setData(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      setError(error.message);\n    }\n  }, [uri]);\n  useEffect(() => {\n    uri && !suspendRender && fetchDataFromUri();\n  }, [uri, suspendRender]);\n  return {\n    loading,\n    error,\n    data\n  };\n};\n\n_s(useFetch, \"Bcx/Sx3TbRtFZDrDmlN8sbMrXn8=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/hooks/useFetch.ts"],"names":["useState","useEffect","useCallback","axios","useFetch","uri","suspendRender","config","loading","setLoading","data","setData","undefined","error","setError","fetchDataFromUri","response","get","message"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAQA,MAAMC,QAAQ,GAAG,CAAIC,GAAJ,EAA6BC,aAAkB,GAAG,KAAlD,EAAyDC,MAAW,GAAG,EAAvE,KAAqG;AAAA;;AACpH,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAU,KAAV,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAgBY,SAAhB,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAS,EAAT,CAAlC;AAEA,QAAMe,gBAAgB,GAAGb,WAAW,CAAC,YAAY;AAC/CO,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AAAA;;AACF,YAAMO,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUZ,GAAV,EAAyBE,MAAzB,CAAvB;AACAS,MAAAA,QAAQ,CAACN,IAAT,IAAiBC,OAAO,CAACK,QAAD,aAACA,QAAD,yCAACA,QAAQ,CAAEN,IAAX,mDAAC,eAAgBA,IAAjB,CAAxB;AAEAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD,CAKE,OAAOI,KAAP,EAAmB;AACnBJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAK,MAAAA,QAAQ,CAACD,KAAK,CAACK,OAAP,CAAR;AACD;AACF,GAZmC,EAYjC,CAACb,GAAD,CAZiC,CAApC;AAcAJ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,GAAG,IAAI,CAACC,aAAR,IAAyBS,gBAAgB,EAAzC;AACD,GAFQ,EAEN,CAACV,GAAD,EAAMC,aAAN,CAFM,CAAT;AAIA,SAAO;AACLE,IAAAA,OADK;AAELK,IAAAA,KAFK;AAGLH,IAAAA;AAHK,GAAP;AAKD,CA5BD;;GAAMN,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport axios from '../services/axios';\n\ntype useFetchReturnType<T> ={\n  loading: boolean;\n  error: string;\n  data: T | undefined\n}\n\nconst useFetch = <T>(uri: string | undefined, suspendRender: any = false, config: any = {}): useFetchReturnType<T> => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [data, setData] = useState<T | undefined>(undefined);\n  const [error, setError] = useState<string>('');\n\n  const fetchDataFromUri = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get(uri as string, config) as any;\n      response.data && setData(response?.data?.data);\n\n      setLoading(false);\n    } catch (error: any) {\n      setLoading(false);\n      setError(error.message);\n    }\n  }, [uri]);\n\n  useEffect(() => {\n    uri && !suspendRender && fetchDataFromUri();\n  }, [uri, suspendRender]);\n\n  return {\n    loading, \n    error,\n    data\n  }\n}\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}