{"ast":null,"code":"import { sotaTokenActions } from '../constants/sota-token';\nconst initialState = {\n  data: {},\n  loading: false,\n  error: ''\n};\nexport const getAllowanceReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case sotaTokenActions.ALLOWANCE_LOADING:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case sotaTokenActions.ALLOWANCE_SUCCESS:\n      {\n        return { ...state,\n          data: action.payload,\n          loading: false\n        };\n      }\n\n    case sotaTokenActions.ALLOWANCE_FAILURE:\n      {\n        return { ...state,\n          error: action.payload,\n          loading: false\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const approveReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case sotaTokenActions.APPROVE_LOADING:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case sotaTokenActions.APPROVE_SUCCESS:\n      {\n        return { ...state,\n          data: action.payload,\n          loading: false\n        };\n      }\n\n    case sotaTokenActions.APPROVE_FAILURE:\n      {\n        return { ...state,\n          error: action.payload,\n          loading: false\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/store/reducers/sota-token.ts"],"names":["sotaTokenActions","initialState","data","loading","error","getAllowanceReducer","state","action","type","ALLOWANCE_LOADING","ALLOWANCE_SUCCESS","payload","ALLOWANCE_FAILURE","approveReducer","APPROVE_LOADING","APPROVE_SUCCESS","APPROVE_FAILURE"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,yBAAjC;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,KAAgB,GAAGL,YAApB,EAAkCM,MAAlC,KAAwD;AACzF,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,gBAAgB,CAACS,iBAAtB;AAAyC;AACvC,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AAED,SAAKH,gBAAgB,CAACU,iBAAtB;AAAyC;AACvC,eAAO,EACL,GAAGJ,KADE;AAELJ,UAAAA,IAAI,EAAEK,MAAM,CAACI,OAFR;AAGLR,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED,SAAKH,gBAAgB,CAACY,iBAAtB;AAAyC;AACvC,eAAO,EACL,GAAGN,KADE;AAELF,UAAAA,KAAK,EAAEG,MAAM,CAACI,OAFT;AAGLR,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED;AAAS;AACP,eAAOG,KAAP;AACD;AA3BH;AA6BD,CA9BM;AAgCP,OAAO,MAAMO,cAAc,GAAG,CAACP,KAAgB,GAAGL,YAApB,EAAkCM,MAAlC,KAAwD;AACpF,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,gBAAgB,CAACc,eAAtB;AAAuC;AACrC,eAAO,EACL,GAAGR,KADE;AAELH,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AAED,SAAKH,gBAAgB,CAACe,eAAtB;AAAuC;AACrC,eAAO,EACL,GAAGT,KADE;AAELJ,UAAAA,IAAI,EAAEK,MAAM,CAACI,OAFR;AAGLR,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED,SAAKH,gBAAgB,CAACgB,eAAtB;AAAuC;AACrC,eAAO,EACL,GAAGV,KADE;AAELF,UAAAA,KAAK,EAAEG,MAAM,CAACI,OAFT;AAGLR,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED;AAAS;AACP,eAAOG,KAAP;AACD;AA3BH;AA6BD,CA9BM","sourcesContent":["import { sotaTokenActions } from '../constants/sota-token';\nimport { AnyAction } from 'redux';\n\ntype StateType = {\n  data: object;\n  loading: boolean;\n  error: string;\n};\n\nconst initialState = {\n  data: {},\n  loading: false,\n  error: ''\n};\n\nexport const getAllowanceReducer = (state: StateType = initialState, action: AnyAction) => {\n  switch (action.type) {\n\n    case sotaTokenActions.ALLOWANCE_LOADING: {\n      return {\n        ...state,\n        loading: true\n      }\n    } \n\n    case sotaTokenActions.ALLOWANCE_SUCCESS: {\n      return {\n        ...state,\n        data: action.payload,\n        loading: false\n      }\n    }\n\n    case sotaTokenActions.ALLOWANCE_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const approveReducer = (state: StateType = initialState, action: AnyAction) => {\n  switch (action.type) {\n\n    case sotaTokenActions.APPROVE_LOADING: {\n      return {\n        ...state,\n        loading: true\n      }\n    } \n\n    case sotaTokenActions.APPROVE_SUCCESS: {\n      return {\n        ...state,\n        data: action.payload,\n        loading: false\n      }\n    }\n\n    case sotaTokenActions.APPROVE_FAILURE: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}