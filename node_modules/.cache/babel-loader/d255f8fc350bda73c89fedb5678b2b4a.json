{"ast":null,"code":"import { alertActions } from '../constants/alert';\nconst initialState = {\n  type: '',\n  message: ''\n};\nexport const alertReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case alertActions.SUCCESS_MESSAGE:\n      {\n        return {\n          type: 'success',\n          message: action.payload\n        };\n      }\n\n    case alertActions.WARNING_MESSAGE:\n      {\n        return {\n          type: 'warning',\n          message: action.payload\n        };\n      }\n\n    case alertActions.ERROR_MESSAGE:\n      {\n        return {\n          type: 'error',\n          message: action.payload\n        };\n      }\n\n    case alertActions.CLEAR_MESSAGE:\n      {\n        return {\n          type: \"\",\n          message: \"\"\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/store/reducers/alert.ts"],"names":["alertActions","initialState","type","message","alertReducer","state","action","SUCCESS_MESSAGE","payload","WARNING_MESSAGE","ERROR_MESSAGE","CLEAR_MESSAGE"],"mappings":"AACA,SAASA,YAAT,QAA6B,oBAA7B;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAgB,GAAGJ,YAApB,EAAkCK,MAAlC,KAAwD;AAClF,UAAQA,MAAM,CAACJ,IAAf;AACE,SAAKF,YAAY,CAACO,eAAlB;AAAmC;AACjC,eAAO;AACLL,UAAAA,IAAI,EAAE,SADD;AAELC,UAAAA,OAAO,EAAEG,MAAM,CAACE;AAFX,SAAP;AAID;;AAED,SAAKR,YAAY,CAACS,eAAlB;AAAmC;AACjC,eAAO;AACLP,UAAAA,IAAI,EAAE,SADD;AAELC,UAAAA,OAAO,EAAEG,MAAM,CAACE;AAFX,SAAP;AAID;;AAED,SAAKR,YAAY,CAACU,aAAlB;AAAiC;AAC/B,eAAO;AACLR,UAAAA,IAAI,EAAE,OADD;AAELC,UAAAA,OAAO,EAAEG,MAAM,CAACE;AAFX,SAAP;AAID;;AAED,SAAKR,YAAY,CAACW,aAAlB;AAAiC;AAC/B,eAAO;AACLT,UAAAA,IAAI,EAAE,EADD;AAELC,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AAED;AAAS;AACP,eAAOE,KAAP;AACD;AA/BH;AAiCD,CAlCM","sourcesContent":["import { AnyAction } from 'redux'\nimport { alertActions } from '../constants/alert'\n\ntype StateType = {\n  type: string;\n  message: string;\n}\n\nconst initialState = {\n  type: '',\n  message: ''\n}\n\nexport const alertReducer = (state: StateType = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case alertActions.SUCCESS_MESSAGE: {\n      return {\n        type: 'success',\n        message: action.payload\n      }\n    }\n\n    case alertActions.WARNING_MESSAGE: {\n      return {\n        type: 'warning',\n        message: action.payload\n      }\n    }\n\n    case alertActions.ERROR_MESSAGE: {\n      return {\n        type: 'error',\n        message: action.payload\n      }\n    }\n\n    case alertActions.CLEAR_MESSAGE: {\n      return {\n        type: \"\",\n        message: \"\"\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}