{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { ACCEPT_CURRENCY, NETWORK_AVAILABLE } from \"../constants\";\nexport const convertAmountToUsdt = (decimals, amount) => {\n  const decimalsNumber = new BigNumber(`1e+${decimals}`);\n  const amountNumber = new BigNumber(amount);\n  return amountNumber.multipliedBy(decimalsNumber);\n};\nexport const isAllowanceUsdt = (decimals, amount, allowanceAmount) => {\n  const amountNumberConvert = convertAmountToUsdt(decimals, amount);\n  const allowanceAmountNumber = new BigNumber(allowanceAmount);\n  const resultCompare = allowanceAmountNumber.comparedTo(amountNumberConvert);\n  return resultCompare === 1 || resultCompare === 0;\n};\nexport const getIconCurrencyUsdt = ({\n  purchasableCurrency,\n  networkAvailable\n}) => {\n  purchasableCurrency = purchasableCurrency + '';\n  let currencyIcon = `/images/${purchasableCurrency.toUpperCase()}.png`;\n  let currencyName = purchasableCurrency.toUpperCase();\n\n  if (networkAvailable == NETWORK_AVAILABLE.BSC) {\n    if ((purchasableCurrency + '').toLowerCase() == ACCEPT_CURRENCY.USDT) {\n      currencyIcon = `/images/BUSD.png`;\n      currencyName = 'BUSD';\n    } else if ((purchasableCurrency + '').toLowerCase() == ACCEPT_CURRENCY.ETH) {\n      currencyIcon = `/images/BNB.png`;\n      currencyName = 'BNB';\n    }\n  }\n\n  return {\n    currencyIcon,\n    currencyName\n  };\n};","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/utils/usdt.ts"],"names":["BigNumber","ACCEPT_CURRENCY","NETWORK_AVAILABLE","convertAmountToUsdt","decimals","amount","decimalsNumber","amountNumber","multipliedBy","isAllowanceUsdt","allowanceAmount","amountNumberConvert","allowanceAmountNumber","resultCompare","comparedTo","getIconCurrencyUsdt","purchasableCurrency","networkAvailable","currencyIcon","toUpperCase","currencyName","BSC","toLowerCase","USDT","ETH"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAAQC,eAAR,EAAyBC,iBAAzB,QAAiD,cAAjD;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAACC,QAAD,EAAgBC,MAAhB,KAAmC;AACpE,QAAMC,cAAc,GAAG,IAAIN,SAAJ,CAAe,MAAKI,QAAS,EAA7B,CAAvB;AACA,QAAMG,YAAY,GAAG,IAAIP,SAAJ,CAAcK,MAAd,CAArB;AACA,SAAOE,YAAY,CAACC,YAAb,CAA0BF,cAA1B,CAAP;AACD,CAJM;AAMP,OAAO,MAAMG,eAAe,GAAG,CAACL,QAAD,EAAgBC,MAAhB,EAA6BK,eAA7B,KAAsD;AACnF,QAAMC,mBAAmB,GAAGR,mBAAmB,CAACC,QAAD,EAAWC,MAAX,CAA/C;AACA,QAAMO,qBAAqB,GAAG,IAAIZ,SAAJ,CAAcU,eAAd,CAA9B;AAEA,QAAMG,aAAa,GAAGD,qBAAqB,CAACE,UAAtB,CAAiCH,mBAAjC,CAAtB;AACA,SAAOE,aAAa,KAAK,CAAlB,IAAuBA,aAAa,KAAK,CAAhD;AACD,CANM;AAQP,OAAO,MAAME,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,mBAAF;AAAuBC,EAAAA;AAAvB,CAAD,KAAoD;AACrFD,EAAAA,mBAAmB,GAAGA,mBAAmB,GAAG,EAA5C;AACA,MAAIE,YAAY,GAAI,WAAUF,mBAAmB,CAACG,WAApB,EAAkC,MAAhE;AACA,MAAIC,YAAY,GAAGJ,mBAAmB,CAACG,WAApB,EAAnB;;AACA,MAAIF,gBAAgB,IAAIf,iBAAiB,CAACmB,GAA1C,EAA+C;AAC7C,QAAI,CAACL,mBAAmB,GAAG,EAAvB,EAA2BM,WAA3B,MAA4CrB,eAAe,CAACsB,IAAhE,EAAsE;AACpEL,MAAAA,YAAY,GAAI,kBAAhB;AACAE,MAAAA,YAAY,GAAG,MAAf;AACD,KAHD,MAGO,IAAI,CAACJ,mBAAmB,GAAG,EAAvB,EAA2BM,WAA3B,MAA4CrB,eAAe,CAACuB,GAAhE,EAAqE;AAC1EN,MAAAA,YAAY,GAAI,iBAAhB;AACAE,MAAAA,YAAY,GAAG,KAAf;AACD;AACF;;AACD,SAAO;AACLF,IAAAA,YADK;AAELE,IAAAA;AAFK,GAAP;AAID,CAjBM","sourcesContent":["import BigNumber from 'bignumber.js';\nimport {ACCEPT_CURRENCY, NETWORK_AVAILABLE} from \"../constants\";\n\nexport const convertAmountToUsdt = (decimals: any, amount: string) => {\n  const decimalsNumber = new BigNumber(`1e+${decimals}`);\n  const amountNumber = new BigNumber(amount);\n  return amountNumber.multipliedBy(decimalsNumber);\n};\n\nexport const isAllowanceUsdt = (decimals: any, amount: any, allowanceAmount: any) => {\n  const amountNumberConvert = convertAmountToUsdt(decimals, amount);\n  const allowanceAmountNumber = new BigNumber(allowanceAmount);\n\n  const resultCompare = allowanceAmountNumber.comparedTo(amountNumberConvert);\n  return resultCompare === 1 || resultCompare === 0;\n};\n\nexport const getIconCurrencyUsdt = ({ purchasableCurrency, networkAvailable }: any) => {\n  purchasableCurrency = purchasableCurrency + '';\n  let currencyIcon = `/images/${purchasableCurrency.toUpperCase()}.png`;\n  let currencyName = purchasableCurrency.toUpperCase();\n  if (networkAvailable == NETWORK_AVAILABLE.BSC) {\n    if ((purchasableCurrency + '').toLowerCase() == ACCEPT_CURRENCY.USDT) {\n      currencyIcon = `/images/BUSD.png`;\n      currencyName = 'BUSD';\n    } else if ((purchasableCurrency + '').toLowerCase() == ACCEPT_CURRENCY.ETH) {\n      currencyIcon = `/images/BNB.png`;\n      currencyName = 'BNB';\n    }\n  }\n  return {\n    currencyIcon,\n    currencyName,\n  }\n};\n"]},"metadata":{},"sourceType":"module"}