{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/Pools/Pool/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useStyles from './style';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { ACCEPT_CURRENCY } from '../../../constants';\nimport { numberWithCommas } from '../../../utils/formatNumber';\nimport useCommonStyle from '../../../styles/CommonStyle';\nimport { getIconCurrencyUsdt } from \"../../../utils/usdt\";\nimport { PoolStatus } from \"../../../utils/getPoolStatus\";\nimport { getAccessPoolText, getProgressWithPools, getTokenSold } from \"../../../utils/campaign\";\nimport BigNumber from 'bignumber.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst Pool = props => {\n  _s();\n\n  const styles = useStyles();\n  const commonStyle = useCommonStyle();\n  const [timeLeft, setTimeLeft] = useState('');\n  const [progress, setProgress] = useState(0);\n  const {\n    pool\n  } = props;\n  useEffect(() => {\n    const getTokenSoldByPool = async () => {\n      let resTokenSold = '0';\n\n      if (pool.is_deploy) {\n        const tokenSold = await getTokenSold(pool);\n        console.log('pool45', pool.id, pool, tokenSold);\n        resTokenSold = tokenSold;\n      }\n\n      console.log('resTokenSold==>: ', resTokenSold);\n      let {\n        progress: progressPercent,\n        tokenSold,\n        totalSoldCoin\n      } = getProgressWithPools({ ...pool,\n        tokenSold: resTokenSold\n      });\n      setProgress(parseFloat(progressPercent));\n      console.log('Progress: ', progressPercent);\n    };\n\n    getTokenSoldByPool();\n    const intervalProgress = setInterval(() => {\n      getTokenSoldByPool();\n    }, 20000);\n    return () => {\n      intervalProgress && clearInterval(intervalProgress);\n    };\n  }, [pool]);\n  useEffect(() => {\n    const currentTime = moment().unix();\n    var diffTime = parseInt(pool.start_time) - currentTime;\n    let intervalCount;\n\n    if (diffTime > 0) {\n      let timeLeftToStart = diffTime * 1000;\n      const interval = 1000;\n      intervalCount = setInterval(() => {\n        timeLeftToStart -= interval;\n        const timeLeftDuration = moment.duration(timeLeftToStart, 'milliseconds');\n        let timeLeftString = '';\n\n        if (timeLeftToStart >= 86400000) {\n          timeLeftString = 'In ' + timeLeftDuration.days() + \" days\";\n        } else {\n          timeLeftString = 'In ' + timeLeftDuration.hours() + \":\" + timeLeftDuration.minutes() + \":\" + timeLeftDuration.seconds();\n        }\n\n        setTimeLeft(timeLeftString);\n      }, interval);\n    }\n\n    return () => clearInterval(intervalCount);\n  }, []);\n\n  const poolStatus = () => {\n    switch (pool.status) {\n      case PoolStatus.TBA:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tba\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"TBA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 16\n        }, this);\n\n      case PoolStatus.Upcoming:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"up-comming\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Upcoming\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }, this);\n\n      case PoolStatus.Joining:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"joining\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Whitelisting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }, this);\n\n      case PoolStatus.Progress:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"in-progress\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Inprogress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 16\n        }, this);\n\n      case PoolStatus.Filled:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filled\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Filled\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 16\n        }, this);\n\n      case PoolStatus.Closed:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"closed\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Ended\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 16\n        }, this);\n\n      case PoolStatus.Claimable:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"claimable\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Claimable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 16\n        }, this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"up-comming\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: pool.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 16\n        }, this);\n    }\n  };\n\n  const {\n    currencyIcon,\n    currencyName\n  } = getIconCurrencyUsdt({\n    purchasableCurrency: pool === null || pool === void 0 ? void 0 : pool.accept_currency,\n    networkAvailable: pool === null || pool === void 0 ? void 0 : pool.network_available\n  });\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/buy-token/${pool.id}`,\n      className: this.styles.link,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.styles.row,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.styles.name,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: pool.token_images\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: commonStyle.nnb1418d,\n            children: pool.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.styles.ratio + ' ' + commonStyle.nnn1424h,\n          children: [pool.accept_currency === ACCEPT_CURRENCY.ETH && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: `${numberWithCommas(pool === null || pool === void 0 ? void 0 : pool.price_usdt, 4)} USD`\n          }, void 0, false), pool.accept_currency !== ACCEPT_CURRENCY.ETH && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [numberWithCommas(pool === null || pool === void 0 ? void 0 : pool.token_conversion_rate, 4), \" \", currencyName]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.styles.poolType + ' ' + commonStyle.nnn1424h,\n          children: getAccessPoolText(pool)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.styles.progress,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: commonStyle.nnb1418d,\n            children: `${new BigNumber(progress).toFixed(2)}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `current-progress ${progress > 0 ? '' : 'inactive'}`,\n              style: {\n                width: `${new BigNumber(progress).toFixed(2)}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.styles.status,\n          children: poolStatus()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pool, \"wh1PdAdHsX3A2BnB87ZUFqQGLX0=\", false, function () {\n  return [useStyles, useCommonStyle];\n});\n\n_c = Pool;\nexport default Pool;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pool\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/Pools/Pool/index.tsx"],"names":["React","useState","useEffect","useStyles","moment","Link","ACCEPT_CURRENCY","numberWithCommas","useCommonStyle","getIconCurrencyUsdt","PoolStatus","getAccessPoolText","getProgressWithPools","getTokenSold","BigNumber","BASE_URL","process","env","REACT_APP_API_BASE_URL","Pool","props","styles","commonStyle","timeLeft","setTimeLeft","progress","setProgress","pool","getTokenSoldByPool","resTokenSold","is_deploy","tokenSold","console","log","id","progressPercent","totalSoldCoin","parseFloat","intervalProgress","setInterval","clearInterval","currentTime","unix","diffTime","parseInt","start_time","intervalCount","timeLeftToStart","interval","timeLeftDuration","duration","timeLeftString","days","hours","minutes","seconds","poolStatus","status","TBA","Upcoming","Joining","Progress","Filled","Closed","Claimable","currencyIcon","currencyName","purchasableCurrency","accept_currency","networkAvailable","network_available","link","row","name","token_images","nnb1418d","title","ratio","nnn1424h","ETH","price_usdt","token_conversion_rate","poolType","toFixed","width"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport useStyles from './style';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { POOL_STATUS, NETWORK, POOL_TYPE, ACCEPT_CURRENCY, BUY_TYPE } from '../../../constants';\nimport { numberWithCommas } from '../../../utils/formatNumber';\nimport useCommonStyle from '../../../styles/CommonStyle';\nimport {getIconCurrencyUsdt} from \"../../../utils/usdt\";\nimport {PoolStatus} from \"../../../utils/getPoolStatus\";\nimport {getAccessPoolText, getProgressWithPools, getTokenSold} from \"../../../utils/campaign\";\nimport BigNumber from 'bignumber.js';\n\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst Pool = (props: any): JSX.Element => {\n  const styles = useStyles();\n  const commonStyle = useCommonStyle();\n  const [timeLeft, setTimeLeft] = useState('');\n  const [progress, setProgress] = useState(0);\n\n  const {\n    pool\n  } = props\n\n  useEffect(() => {\n    const getTokenSoldByPool = async () => {\n      let resTokenSold = '0';\n      if (pool.is_deploy) {\n        const tokenSold = await getTokenSold(pool);\n        console.log('pool45', pool.id, pool, tokenSold);\n        resTokenSold = tokenSold;\n      }\n\n      console.log('resTokenSold==>: ', resTokenSold);\n      let { progress: progressPercent, tokenSold, totalSoldCoin } = getProgressWithPools({\n        ...pool,\n        tokenSold: resTokenSold,\n      });\n      setProgress(parseFloat(progressPercent));\n      console.log('Progress: ', progressPercent);\n    };\n\n    getTokenSoldByPool();\n    const intervalProgress = setInterval(() => {\n      getTokenSoldByPool();\n    }, 20000);\n\n    return () => {\n      intervalProgress && clearInterval(intervalProgress);\n    }\n\n  }, [pool])\n\n  useEffect(() => {\n    const currentTime = moment().unix()\n    var diffTime = parseInt(pool.start_time) - currentTime;\n    let intervalCount: any;\n    if (diffTime > 0) {\n      let timeLeftToStart = diffTime * 1000\n      const interval = 1000;\n\n      intervalCount = setInterval(() => {\n        timeLeftToStart -= interval;\n        const timeLeftDuration = moment.duration(timeLeftToStart, 'milliseconds');\n        let timeLeftString = '';\n        if (timeLeftToStart >= 86400000) {\n          timeLeftString = 'In ' + timeLeftDuration.days() + \" days\"\n        } else {\n          timeLeftString = 'In ' + timeLeftDuration.hours() + \":\" + timeLeftDuration.minutes() + \":\" + timeLeftDuration.seconds()\n        }\n        setTimeLeft(timeLeftString)\n      }, interval);\n    }\n\n    return () => clearInterval(intervalCount);\n  }, [])\n\n  const poolStatus = () => {\n    switch(pool.status) {\n      case PoolStatus.TBA:\n        return <div className=\"tba\"><span>TBA</span></div>\n      case PoolStatus.Upcoming:\n        return <div className=\"up-comming\"><span>Upcoming</span></div>\n      case PoolStatus.Joining:\n        return <div className=\"joining\"><span>Whitelisting</span></div>\n      case PoolStatus.Progress:\n        return <div className=\"in-progress\"><span>Inprogress</span></div>\n      case PoolStatus.Filled:\n        return <div className=\"filled\"><span>Filled</span></div>\n      case PoolStatus.Closed:\n        return <div className=\"closed\"><span>Ended</span></div>\n      case PoolStatus.Claimable:\n        return <div className=\"claimable\"><span>Claimable</span></div>\n      default:\n        return <div className=\"up-comming\"><span>{pool.status}</span></div>\n    }\n  };\n\n  const { currencyIcon, currencyName } = getIconCurrencyUsdt({ purchasableCurrency: pool?.accept_currency, networkAvailable: pool?.network_available });\n\n  return (\n    <td>\n      <Link to={`/buy-token/${pool.id}`} className={this.styles.link}>\n        <div className={this.styles.row}>\n          <div className={this.styles.name}>\n            <img src={pool.token_images} />\n            <span className={commonStyle.nnb1418d}>{pool.title}</span>\n          </div>\n          <div className={this.styles.ratio + ' ' + commonStyle.nnn1424h}>\n            {pool.accept_currency === ACCEPT_CURRENCY.ETH &&\n              <>\n                {`${numberWithCommas(pool?.price_usdt, 4)} USD`}\n              </>\n            }\n            {pool.accept_currency !== ACCEPT_CURRENCY.ETH &&\n              <>\n                {numberWithCommas(pool?.token_conversion_rate, 4)} {currencyName}\n              </>\n            }\n\n            {/*{pool.accept_currency === ACCEPT_CURRENCY.ETH ?*/}\n            {/*  numberWithCommas(pool.ether_conversion_rate, 4) :*/}\n            {/*  numberWithCommas(pool.token_conversion_rate, 4)} {pool?.accept_currency?.toUpperCase()}*/}\n          </div>\n          <div className={this.styles.poolType + ' ' + commonStyle.nnn1424h}>\n            {getAccessPoolText(pool)}\n          </div>\n          <div className={this.styles.progress}>\n            <span className={commonStyle.nnb1418d}>{`${new BigNumber(progress).toFixed(2)}%`}</span>\n            <div className=\"progress\">\n              <span\n                className={`current-progress ${progress > 0 ? '' : 'inactive'}`}\n                style={{ width: `${new BigNumber(progress).toFixed(2)}%` }}\n              ></span>\n            </div>\n          </div>\n          <div className={this.styles.status}>\n            {poolStatus()}\n          </div>\n        </div>\n      </Link>\n    </td>\n  );\n};\n\nexport default Pool;\n"]},"metadata":{},"sourceType":"module"}