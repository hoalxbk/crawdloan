{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/BuyToken/MyTier/TierTableWithWeightRate.tsx\";\nimport React from 'react';\nimport TableCell from \"@material-ui/core/TableCell\";\nimport { convertTimeToStringFormat } from \"../../../utils/convertDate\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport BigNumber from 'bignumber.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NormalRow = ({\n  row\n}) => {\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      children: row === null || row === void 0 ? void 0 : row.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      children: row === null || row === void 0 ? void 0 : row.allocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      children: [!row.startTime && '--', row.startTime && convertTimeToStringFormat(new Date(row.startTime * 1000))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      children: [!row.endTime && '--', row.endTime && convertTimeToStringFormat(new Date(row.endTime * 1000))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = NormalRow;\n\nconst GroupRow = ({\n  hawk,\n  eagle,\n  phoenix\n}) => {\n  const totalAllowcation = new BigNumber((hawk === null || hawk === void 0 ? void 0 : hawk.allocation) || 0).plus((eagle === null || eagle === void 0 ? void 0 : eagle.allocation) || 0).plus((phoenix === null || phoenix === void 0 ? void 0 : phoenix.allocation) || 0).toFixed(2);\n  console.log('totalAllowcation: Hawk + Eagle + Phoenix = ', totalAllowcation);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: hawk === null || hawk === void 0 ? void 0 : hawk.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        rowSpan: 3,\n        style: {\n          borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n          borderLeft: '1px solid rgba(255, 255, 255, 0.1)'\n        },\n        children: totalAllowcation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: [!hawk.startTime && '--', hawk.startTime && convertTimeToStringFormat(new Date(hawk.startTime * 1000))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: [!hawk.endTime && '--', hawk.endTime && convertTimeToStringFormat(new Date(hawk.endTime * 1000))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: eagle === null || eagle === void 0 ? void 0 : eagle.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: [!eagle.startTime && '--', eagle.startTime && convertTimeToStringFormat(new Date(eagle.startTime * 1000))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: [!eagle.endTime && '--', eagle.endTime && convertTimeToStringFormat(new Date(eagle.endTime * 1000))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: phoenix === null || phoenix === void 0 ? void 0 : phoenix.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: [!phoenix.startTime && '--', phoenix.startTime && convertTimeToStringFormat(new Date(phoenix.startTime * 1000))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: [!phoenix.endTime && '--', phoenix.endTime && convertTimeToStringFormat(new Date(phoenix.endTime * 1000))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = GroupRow;\n\nfunction TierTableWithWeightRate(props) {\n  const {\n    tiers\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NormalRow, {\n      row: tiers[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NormalRow, {\n      row: tiers[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GroupRow, {\n      hawk: tiers[2],\n      eagle: tiers[3],\n      phoenix: tiers[4]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c3 = TierTableWithWeightRate;\nexport default TierTableWithWeightRate;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"NormalRow\");\n$RefreshReg$(_c2, \"GroupRow\");\n$RefreshReg$(_c3, \"TierTableWithWeightRate\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/BuyToken/MyTier/TierTableWithWeightRate.tsx"],"names":["React","TableCell","convertTimeToStringFormat","TableRow","BigNumber","NormalRow","row","name","allocation","startTime","Date","endTime","GroupRow","hawk","eagle","phoenix","totalAllowcation","plus","toFixed","console","log","borderRight","borderLeft","TierTableWithWeightRate","props","tiers"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TableCell from \"@material-ui/core/TableCell\";\nimport {convertTimeToStringFormat} from \"../../../utils/convertDate\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport BigNumber from 'bignumber.js';\n\n\nconst NormalRow = ({row}: any) => {\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        {row?.name}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {row?.allocation}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {!row.startTime && '--'}\n        {row.startTime &&convertTimeToStringFormat(new Date(row.startTime * 1000))}\n      </TableCell>\n      <TableCell component=\"th\" scope=\"row\">\n        {!row.endTime && '--'}\n        {row.endTime && convertTimeToStringFormat(new Date(row.endTime * 1000))}\n      </TableCell>\n    </TableRow>\n  );\n};\n\nconst GroupRow = ({ hawk, eagle, phoenix }: any) => {\n  const totalAllowcation = new BigNumber(hawk?.allocation || 0)\n    .plus(eagle?.allocation || 0)\n    .plus(phoenix?.allocation || 0)\n    .toFixed(2);\n  console.log('totalAllowcation: Hawk + Eagle + Phoenix = ', totalAllowcation);\n\n  return (\n    <>\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\">\n          {hawk?.name}\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\" rowSpan={3} style={{\n          borderRight: '1px solid rgba(255, 255, 255, 0.1)',\n          borderLeft: '1px solid rgba(255, 255, 255, 0.1)',\n        }}>\n          {totalAllowcation}\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {!hawk.startTime && '--'}\n          {hawk.startTime && convertTimeToStringFormat(new Date(hawk.startTime * 1000))}\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {!hawk.endTime && '--'}\n          {hawk.endTime && convertTimeToStringFormat(new Date(hawk.endTime * 1000))}\n        </TableCell>\n      </TableRow>\n\n\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\">\n          {eagle?.name}\n        </TableCell>\n\n        <TableCell component=\"th\" scope=\"row\">\n          {!eagle.startTime && '--'}\n          {eagle.startTime && convertTimeToStringFormat(new Date(eagle.startTime * 1000))}\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {!eagle.endTime && '--'}\n          {eagle.endTime && convertTimeToStringFormat(new Date(eagle.endTime * 1000))}\n        </TableCell>\n      </TableRow>\n\n      <TableRow>\n        <TableCell component=\"th\" scope=\"row\">\n          {phoenix?.name}\n        </TableCell>\n\n        <TableCell component=\"th\" scope=\"row\">\n          {!phoenix.startTime && '--'}\n          {phoenix.startTime && convertTimeToStringFormat(new Date(phoenix.startTime * 1000))}\n        </TableCell>\n        <TableCell component=\"th\" scope=\"row\">\n          {!phoenix.endTime && '--'}\n          {phoenix.endTime && convertTimeToStringFormat(new Date(phoenix.endTime * 1000))}\n        </TableCell>\n      </TableRow>\n\n    </>\n  );\n\n};\n\nfunction TierTableWithWeightRate(props: any) {\n  const { tiers } = props;\n  return (\n    <>\n      <NormalRow row={tiers[0]} />\n      <NormalRow row={tiers[1]} />\n      <GroupRow\n        hawk={tiers[2]}\n        eagle={tiers[3]}\n        phoenix={tiers[4]}\n      />\n    </>\n  );\n}\n\nexport default TierTableWithWeightRate;\n"]},"metadata":{},"sourceType":"module"}