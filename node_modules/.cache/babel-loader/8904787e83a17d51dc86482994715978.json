{"ast":null,"code":"import { ETH_CHAIN_ID } from '../../constants/network';\nimport { appNetworkActions } from '../constants/appNetwork';\nconst initialState = {\n  data: {\n    appChainID: ETH_CHAIN_ID,\n    walletChainID: undefined,\n    currentConnector: undefined\n  },\n  loading: false,\n  error: ''\n};\nconst connectorInitialState = {\n  data: undefined,\n  loading: false,\n  error: ''\n};\nexport const appNetworkReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case appNetworkActions.APP_NETWORKS_SETTING_LOADING:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case appNetworkActions.APP_NETWORKS_SETTING_SUCCESS:\n      {\n        return { ...state,\n          data: action.payload,\n          loading: false\n        };\n      }\n\n    case appNetworkActions.APP_NETWORKS_SETTING_ERROR:\n      {\n        return { ...state,\n          error: action.payload,\n          loading: false\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const connectorReducer = (state = connectorInitialState, action) => {\n  switch (action.type) {\n    case appNetworkActions.CONNECTOR_SETTING_LOADING:\n      {\n        return { ...state,\n          loading: true\n        };\n      }\n\n    case appNetworkActions.CONNECTOR_SETTING_SUCCESS:\n      {\n        return { ...state,\n          data: action.payload,\n          loading: false\n        };\n      }\n\n    case appNetworkActions.CONNECTOR_SETTING_ERROR:\n      {\n        return { ...state,\n          error: action.payload,\n          loading: false\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/store/reducers/appNetwork.ts"],"names":["ETH_CHAIN_ID","appNetworkActions","initialState","data","appChainID","walletChainID","undefined","currentConnector","loading","error","connectorInitialState","appNetworkReducer","state","action","type","APP_NETWORKS_SETTING_LOADING","APP_NETWORKS_SETTING_SUCCESS","payload","APP_NETWORKS_SETTING_ERROR","connectorReducer","CONNECTOR_SETTING_LOADING","CONNECTOR_SETTING_SUCCESS","CONNECTOR_SETTING_ERROR"],"mappings":"AAAA,SAASA,YAAT,QAA6B,yBAA7B;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AAmBA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAEJ,YADR;AAEJK,IAAAA,aAAa,EAAEC,SAFX;AAGJC,IAAAA,gBAAgB,EAAED;AAHd,GADa;AAMnBE,EAAAA,OAAO,EAAE,KANU;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAArB;AAUA,MAAMC,qBAAqB,GAAG;AAC5BP,EAAAA,IAAI,EAAEG,SADsB;AAE5BE,EAAAA,OAAO,EAAE,KAFmB;AAG5BC,EAAAA,KAAK,EAAE;AAHqB,CAA9B;AAMA,OAAO,MAAME,iBAAiB,GAAG,CAACC,KAAsB,GAAGV,YAA1B,EAAwCW,MAAxC,KAA8D;AAC7F,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,iBAAiB,CAACc,4BAAvB;AAAqD;AACnD,eAAO,EACL,GAAGH,KADE;AAELJ,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AAED,SAAKP,iBAAiB,CAACe,4BAAvB;AAAqD;AACnD,eAAO,EACL,GAAGJ,KADE;AAELT,UAAAA,IAAI,EAAEU,MAAM,CAACI,OAFR;AAGLT,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED,SAAKP,iBAAiB,CAACiB,0BAAvB;AAAmD;AACjD,eAAO,EACL,GAAGN,KADE;AAELH,UAAAA,KAAK,EAAEI,MAAM,CAACI,OAFT;AAGLT,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED;AAAS;AACP,eAAOI,KAAP;AACD;AA1BH;AA4BD,CA7BM;AA+BP,OAAO,MAAMO,gBAAgB,GAAG,CAACP,KAAqB,GAAGF,qBAAzB,EAAgDG,MAAhD,KAAsE;AACpG,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,iBAAiB,CAACmB,yBAAvB;AAAkD;AAChD,eAAO,EACL,GAAGR,KADE;AAELJ,UAAAA,OAAO,EAAE;AAFJ,SAAP;AAID;;AAED,SAAKP,iBAAiB,CAACoB,yBAAvB;AAAkD;AAChD,eAAO,EACL,GAAGT,KADE;AAELT,UAAAA,IAAI,EAAEU,MAAM,CAACI,OAFR;AAGLT,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED,SAAKP,iBAAiB,CAACqB,uBAAvB;AAAgD;AAC9C,eAAO,EACL,GAAGV,KADE;AAELH,UAAAA,KAAK,EAAEI,MAAM,CAACI,OAFT;AAGLT,UAAAA,OAAO,EAAE;AAHJ,SAAP;AAKD;;AAED;AAAS;AACP,eAAOI,KAAP;AACD;AA1BH;AA4BD,CA7BM","sourcesContent":["import { ETH_CHAIN_ID } from '../../constants/network';\nimport { appNetworkActions } from '../constants/appNetwork';\nimport { AnyAction } from 'redux';\n\ntype AppNetworkState = {\n  data: {\n    appChainID: string | undefined;\n    walletChainID: string | undefined;\n    currentConnector: string | undefined;\n  };\n  loading: boolean;\n  error: string;\n};\n\ntype ConnectorState = {\n  data: string | undefined;\n  loading: boolean;\n  error: string;\n}\n\nconst initialState = {\n  data: {\n    appChainID: ETH_CHAIN_ID,\n    walletChainID: undefined,\n    currentConnector: undefined\n  },\n  loading: false,\n  error: ''\n};\n\nconst connectorInitialState = {\n  data: undefined,\n  loading: false,\n  error: ''\n}\n\nexport const appNetworkReducer = (state: AppNetworkState = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case appNetworkActions.APP_NETWORKS_SETTING_LOADING: {\n      return {\n        ...state,\n        loading: true\n      }\n    } \n\n    case appNetworkActions.APP_NETWORKS_SETTING_SUCCESS: {\n      return {\n        ...state,\n        data: action.payload,\n        loading: false\n      }\n    }\n\n    case appNetworkActions.APP_NETWORKS_SETTING_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const connectorReducer = (state: ConnectorState = connectorInitialState, action: AnyAction) => {\n  switch (action.type) {\n    case appNetworkActions.CONNECTOR_SETTING_LOADING: {\n      return {\n        ...state,\n        loading: true\n      }\n    } \n\n    case appNetworkActions.CONNECTOR_SETTING_SUCCESS: {\n      return {\n        ...state,\n        data: action.payload,\n        loading: false\n      }\n    }\n\n    case appNetworkActions.CONNECTOR_SETTING_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}