{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/components/Base/HeaderDefaultLayout/AppNetworkSwitch/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport Typography from '@material-ui/core/Typography';\nimport { APP_NETWORKS } from '../../../../constants/network';\nimport { AppContext } from '../../../../AppContext';\nimport ConnectWalletBox from '../ConnectWalletBox';\nimport useStyles from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => createStyles({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    paddingTop: 0,\n    borderRadius: 50,\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: 'black',\n    backgroundColor: '#4B4B4B',\n    padding: 4,\n    \"&:hover\": {\n      backgroundColor: '#D4D4D4'\n    }\n  },\n  svgIcon: {\n    fontSize: 5\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    customClass,\n    onClose,\n    ...other\n  } = props;\n  const customStyles = {\n    color: 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: `${classes.root} ${customClass}`,\n    ...other,\n    style: customStyles,\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    color: '#999999'\n  }\n}))(MuiDialogContent);\n\nconst AppNetworkSwitch = props => {\n  _s();\n\n  const styles = useStyles();\n  const {\n    opened,\n    handleClose\n  } = props;\n  const {\n    appNetworkLoading\n  } = useContext(AppContext);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: opened,\n    onClose: handleClose,\n    className: styles.dialog,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: handleClose,\n      customClass: styles.dialogTitle,\n      children: \"Switch Network\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: styles.dialogContent,\n      children: [Object.keys(APP_NETWORKS).map(key => {\n        const network = APP_NETWORKS[key];\n        return /*#__PURE__*/_jsxDEV(ConnectWalletBox, {\n          appNetwork: network,\n          handleClose: handleClose,\n          isAppNetwork: true,\n          forceEnable: true\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 20\n        }, this);\n      }), appNetworkLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingIcon,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/loading.png\",\n          alt: \"loading image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppNetworkSwitch, \"HLgONmu86J5+ntd4QuAjvJz+jAk=\", false, function () {\n  return [useStyles];\n});\n\n_c = AppNetworkSwitch;\nexport default AppNetworkSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppNetworkSwitch\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/components/Base/HeaderDefaultLayout/AppNetworkSwitch/index.tsx"],"names":["useContext","withStyles","createStyles","Dialog","MuiDialogTitle","MuiDialogContent","Typography","APP_NETWORKS","AppContext","ConnectWalletBox","useStyles","styles","theme","root","margin","padding","spacing","paddingTop","borderRadius","display","justifyContent","closeButton","position","right","top","color","backgroundColor","svgIcon","fontSize","DialogTitle","props","children","classes","customClass","onClose","other","customStyles","DialogContent","AppNetworkSwitch","opened","handleClose","appNetworkLoading","dialog","dialogTitle","dialogContent","Object","keys","map","key","network","loadingIcon"],"mappings":"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","sourcesContent":["import { useContext } from 'react';\nimport { withStyles, Theme, createStyles, WithStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport Typography from '@material-ui/core/Typography';\nimport { APP_NETWORKS, appNetworkType } from '../../../../constants/network';\nimport { AppContext } from '../../../../AppContext';\nimport ConnectWalletBox from '../ConnectWalletBox';\n\nimport useStyles from './style';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n      paddingTop: 0,\n      borderRadius: 50,\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: 'black',\n      backgroundColor: '#4B4B4B',\n      padding: 4,\n\n      \"&:hover\" : {\n        backgroundColor: '#D4D4D4'\n      }\n    },\n    svgIcon: {\n      fontSize: 5\n    }\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n  customClass: string\n}\n\nexport interface ComponentProps {\n  opened: boolean,\n  handleClose: () => void;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, customClass, onClose, ...other } = props;\n\n  const customStyles = {\n    color: 'white',\n  }\n\n  return (\n    <MuiDialogTitle disableTypography className={`${classes.root} ${customClass}`} {...other} style={customStyles}>\n      <Typography variant=\"h6\">{children}</Typography>\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    color: '#999999'\n  },\n}))(MuiDialogContent);\n\nconst AppNetworkSwitch: React.FC<ComponentProps> = (props: ComponentProps) => {\n  const styles = useStyles();\n  const { opened, handleClose } = props;\n  const { appNetworkLoading } = useContext(AppContext);\n\n  return (\n    <Dialog open={opened} onClose={handleClose} className={styles.dialog}>\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} customClass={styles.dialogTitle} >\n        Switch Network\n      </DialogTitle>\n      <DialogContent className={styles.dialogContent}>\n        {\n          Object.keys(APP_NETWORKS).map((key: string) => {\n            const network = APP_NETWORKS[key as appNetworkType];\n            return <ConnectWalletBox \n              key={key} \n              appNetwork={network} \n              handleClose={handleClose}\n              isAppNetwork \n              forceEnable \n            />\n          })\n        }\n        {\n          appNetworkLoading && (\n            <div className={styles.loadingIcon}>\n              <img src=\"/images/loading.png\" alt=\"loading image\" />\n            </div>\n          )\n        }\n      </DialogContent>\n    </Dialog>\n  )\n\n}\n\nexport default AppNetworkSwitch;\n"]},"metadata":{},"sourceType":"module"}