{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/AccountV2/AccountInformation/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport useStyles from './style';\nimport useAuth from '../../../hooks/useAuth';\nimport ModalVerifyEmail from '../ModalVerifyEmail';\nimport { isWidthDown, isWidthUp, withWidth } from '@material-ui/core';\nimport { trimMiddlePartAddress } from '../../../utils/accountAddress';\nimport { USER_STATUS, KYC_STATUS } from '../../../constants';\nimport { TIERS } from '../../../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AccountInformation = props => {\n  _s();\n\n  var _TIERS$userTier;\n\n  const styles = useStyles();\n  const {\n    classNamePrefix = '',\n    balance = {},\n    userInfo = {}\n  } = props;\n  const [openModalVerifyEmail, setOpenModalVerifyEmail] = useState(false);\n  const {\n    isAuth,\n    connectedAccount,\n    wrongChain\n  } = useAuth();\n\n  const handleKYC = () => {\n    window.open('https://verify-with.blockpass.org/?clientId=red_kite_kyc_7a0e6&serviceName=Red%20Kite%20KYC&env=prod', '_blank');\n  };\n\n  const handleRejectKYC = () => {\n    window.open(process.env.REACT_APP_KYC_RESUBMIT_LINK, '_blank');\n  };\n\n  const {\n    email,\n    setEmail,\n    emailVerified,\n    setEmailVeryfied,\n    isKYC,\n    kycStatus,\n    userTier\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classNamePrefix}__component`,\n    style: {\n      marginBottom: '65px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: this.styles.title,\n      children: \"Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.styles.mainInfomation,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), email && emailVerified != USER_STATUS.UNVERIFIED && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 64\n        }, this), emailVerified == USER_STATUS.UNVERIFIED && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Not Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 55\n        }, this), (emailVerified == USER_STATUS.UNVERIFIED || !email) && connectedAccount && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"verify-email\",\n          onClick: () => setOpenModalVerifyEmail(true),\n          children: \"Verify Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Your Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [isWidthUp('sm', props.width) && connectedAccount, isWidthDown('xs', props.width) && connectedAccount && trimMiddlePartAddress(connectedAccount || '')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Your Tier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: userTier > 0 && connectedAccount ? (_TIERS$userTier = TIERS[userTier]) === null || _TIERS$userTier === void 0 ? void 0 : _TIERS$userTier.name : TIERS[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.styles.inputGroup,\n        style: {\n          marginBottom: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: \"KYC for Red Kite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), connectedAccount && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [kycStatus == KYC_STATUS.INCOMPLETE && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Unverified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 52\n          }, this), kycStatus == KYC_STATUS.INCOMPLETE && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"verify-email\",\n            onClick: handleKYC,\n            children: \"KYC NOW\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 52\n          }, this), kycStatus == KYC_STATUS.APPROVED && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Verified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 50\n          }, this), kycStatus == KYC_STATUS.RESUBMIT && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red',\n              overflow: 'unset'\n            },\n            children: \"Rejected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.styles.inputGroup,\n        style: {\n          marginBottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), connectedAccount && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red',\n              display: 'inline-block'\n            },\n            children: kycStatus == KYC_STATUS.RESUBMIT && 'Please send information to support@polkafoundry.com to resubmit KYC.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.styles.redKiteInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalVerifyEmail, {\n      setOpenModalVerifyEmail: setOpenModalVerifyEmail,\n      email: email,\n      setEmail: setEmail,\n      open: openModalVerifyEmail,\n      setEmailVeryfied: setEmailVeryfied\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountInformation, \"iH25puwCdgCil81yPYc/klk4omA=\", false, function () {\n  return [useStyles, useAuth];\n});\n\n_c = AccountInformation;\nexport default withWidth()(AccountInformation);\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountInformation\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/AccountV2/AccountInformation/index.tsx"],"names":["useState","useStyles","useAuth","ModalVerifyEmail","isWidthDown","isWidthUp","withWidth","trimMiddlePartAddress","USER_STATUS","KYC_STATUS","TIERS","AccountInformation","props","styles","classNamePrefix","balance","userInfo","openModalVerifyEmail","setOpenModalVerifyEmail","isAuth","connectedAccount","wrongChain","handleKYC","window","open","handleRejectKYC","process","env","REACT_APP_KYC_RESUBMIT_LINK","email","setEmail","emailVerified","setEmailVeryfied","isKYC","kycStatus","userTier","marginBottom","title","mainInfomation","inputGroup","UNVERIFIED","width","name","display","INCOMPLETE","APPROVED","RESUBMIT","color","overflow","redKiteInfo"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport _ from 'lodash';\nimport useStyles from './style';\nimport useAuth from '../../../hooks/useAuth';\nimport ModalVerifyEmail from '../ModalVerifyEmail';\nimport {isWidthDown, isWidthUp, withWidth} from '@material-ui/core';\nimport { trimMiddlePartAddress } from '../../../utils/accountAddress';\nimport { USER_STATUS, KYC_STATUS } from '../../../constants';\nimport { TIERS } from '../../../constants';\n\nconst AccountInformation = (props: any) => {\n  const styles = useStyles();\n  const { classNamePrefix = '', balance = {}, userInfo = {} } = props;\n  const [openModalVerifyEmail, setOpenModalVerifyEmail] = useState(false);\n  const { isAuth, connectedAccount, wrongChain } = useAuth();\n\n  const handleKYC = () => {\n    window.open('https://verify-with.blockpass.org/?clientId=red_kite_kyc_7a0e6&serviceName=Red%20Kite%20KYC&env=prod', '_blank');\n  }\n  const handleRejectKYC = () => {\n    window.open(process.env.REACT_APP_KYC_RESUBMIT_LINK, '_blank');\n  }\n\n  const {\n    email,\n    setEmail,\n    emailVerified,\n    setEmailVeryfied,\n    isKYC,\n    kycStatus,\n    userTier\n  } = props;\n\n  return (\n    <div className={`${classNamePrefix}__component`} style={{marginBottom: '65px'}}>\n      <h2 className={this.styles.title}>Account</h2>\n      <div className={this.styles.mainInfomation}>\n        <div className={this.styles.inputGroup}>\n          <span>Email</span>\n          {email && emailVerified != USER_STATUS.UNVERIFIED && <span>{email}</span>}\n          {emailVerified == USER_STATUS.UNVERIFIED && <span>Not Available</span>}\n          {(emailVerified == USER_STATUS.UNVERIFIED || !email) && connectedAccount &&\n            <button className=\"verify-email\" onClick={() => setOpenModalVerifyEmail(true)}>\n              Verify Email\n            </button>}\n        </div>\n        <div className={this.styles.inputGroup}>\n          <span>Your Wallet</span>\n          <span>\n            {isWidthUp('sm', props.width) && connectedAccount}\n            {isWidthDown('xs', props.width) && connectedAccount && trimMiddlePartAddress(connectedAccount || '')}\n          </span>\n        </div>\n        <div className={this.styles.inputGroup}>\n          <span>Your Tier</span>\n          <span>\n            {(userTier > 0 && connectedAccount) ? TIERS[userTier]?.name : TIERS[0].name}\n          </span>\n        </div>\n        <div className={this.styles.inputGroup} style={{ marginBottom: 3 }}>\n          <span style={{ display: 'inline-block' }}>KYC for Red Kite</span>\n          {connectedAccount && <>\n            {kycStatus == KYC_STATUS.INCOMPLETE && <span>Unverified</span>}\n            {kycStatus == KYC_STATUS.INCOMPLETE && <button className=\"verify-email\" onClick={handleKYC}>KYC NOW</button>}\n\n            {kycStatus == KYC_STATUS.APPROVED && <span>Verified</span>}\n\n            {kycStatus == KYC_STATUS.RESUBMIT && <span style={{ color: 'red', overflow: 'unset' }}>Rejected</span>}\n            {/*{kycStatus == KYC_STATUS.VERIFY_FAIL && <button style={{color: 'red', borderColor: 'red'}} className=\"verify-email\" onClick={handleRejectKYC}>Re-submit KYC</button>}*/}\n\n            {/*<span>{isKYC ? 'Verified' : 'Unverified'}</span>*/}\n            {/*{!isKYC && <button className=\"verify-email\" onClick={handleKYC}>*/}\n            {/*  KYC NOW*/}\n            {/*</button>}*/}\n          </>}\n        </div>\n        <div className={this.styles.inputGroup} style={{ marginBottom: 5 }}>\n          <span></span>\n          {connectedAccount && <>\n            <span style={{ color: 'red', display: 'inline-block' }}>\n            {kycStatus == KYC_STATUS.RESUBMIT && 'Please send information to support@polkafoundry.com to resubmit KYC.'}\n            </span>\n          </>}\n\n        </div>\n\n        <div className={this.styles.redKiteInfo}>\n          {/* <div className={this.styles.walletInfo}>\n            <p>Wallet balance</p>\n            {!_.isEmpty(balance) && !_.isEmpty(userInfo) && <span>\n              <AnimatedNumber\n                value={(wrongChain || !isAuth) ? 0 : balance.token}\n                formatValue={numberWithCommas}\n              />&nbsp;{tokenDetails?.symbol}\n            </span>}\n            {(_.isEmpty(balance) || _.isEmpty(userInfo)) && <span>\n              0&nbsp;{tokenDetails?.symbol}\n            </span>}\n            <p>Locked-in </p>\n            {!_.isEmpty(balance) && !_.isEmpty(userInfo) && <span>\n              <AnimatedNumber\n                value={(wrongChain || !isAuth) ? 0 : userInfo.staked}\n                formatValue={numberWithCommas}\n              />&nbsp;{tokenDetails?.symbol}\n            </span>}\n            {(_.isEmpty(balance) || _.isEmpty(userInfo)) && <span>\n              0&nbsp;{tokenDetails?.symbol}\n            </span>}\n          </div> */}\n        </div>\n      </div>\n      <ModalVerifyEmail\n        setOpenModalVerifyEmail={setOpenModalVerifyEmail}\n        email={email}\n        setEmail={setEmail}\n        open={openModalVerifyEmail}\n        setEmailVeryfied={setEmailVeryfied}\n      />\n    </div>\n  );\n};\n\nexport default withWidth()(AccountInformation);\n"]},"metadata":{},"sourceType":"module"}