{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/BuyToken/Button/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useStyles from './style';\nimport { BeatLoader } from \"react-spinners\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  _s();\n\n  const styles = useStyles();\n  const {\n    style,\n    backgroundColor = 'transparent',\n    text = '',\n    disabled = false,\n    onClick,\n    loading = false\n  } = props;\n  const customStyle = { ...style,\n    backgroundColor\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    style: customStyle,\n    className: this.styles.button,\n    disabled: disabled || loading,\n    onClick: onClick,\n    children: loading ? /*#__PURE__*/_jsxDEV(BeatLoader, {\n      color: 'white',\n      size: 8\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this) : `${text}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Button, \"3bjLmUB54uhXRX+frDMowQzU8P8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/BuyToken/Button/index.tsx"],"names":["React","useStyles","BeatLoader","Button","props","styles","style","backgroundColor","text","disabled","onClick","loading","customStyle","button"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,SAASC,UAAT,QAA2B,gBAA3B;;;AAYA,MAAMC,MAAiC,GAAIC,KAAD,IAA4B;AAAA;;AACpE,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA,eAAe,GAAG,aAA3B;AAA0CC,IAAAA,IAAI,GAAG,EAAjD;AAAqDC,IAAAA,QAAQ,GAAG,KAAhE;AAAuEC,IAAAA,OAAvE;AAAgFC,IAAAA,OAAO,GAAG;AAA1F,MAAoGP,KAA1G;AACA,QAAMQ,WAAW,GAAG,EAClB,GAAGN,KADe;AAElBC,IAAAA;AAFkB,GAApB;AAKA,sBACE;AAAQ,IAAA,KAAK,EAAEK,WAAf;AAA4B,IAAA,SAAS,EAAE,KAAKP,MAAL,CAAYQ,MAAnD;AAA2D,IAAA,QAAQ,EAAEJ,QAAQ,IAAIE,OAAjF;AAA0F,IAAA,OAAO,EAAED,OAAnG;AAAA,cAEIC,OAAO,gBAAG,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE,OAAnB;AAA4B,MAAA,IAAI,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA,YAAH,GAA8C,GAAEH,IAAK;AAFhE;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAfD;;GAAML,M;UACWF,S;;;KADXE,M;AAiBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport useStyles from './style';\nimport { BeatLoader } from \"react-spinners\";\n\ntype ButtonPropsType = {\n  backgroundColor?: string;\n  text: string;\n  href?: string;\n  disabled?: boolean;\n  onClick?: () => void;\n  loading?: boolean,\n  style?: {},\n}\n\nconst Button: React.FC<ButtonPropsType> = (props: ButtonPropsType) => {\n  const styles = useStyles();\n  const { style, backgroundColor = 'transparent', text = '', disabled = false, onClick, loading = false } = props;\n  const customStyle = {\n    ...style,\n    backgroundColor,\n  };\n\n  return (\n    <button style={customStyle} className={this.styles.button} disabled={disabled || loading} onClick={onClick}>\n      {\n        loading ? <BeatLoader color={'white'} size={8} /> : `${text}`\n      }\n    </button>\n  )\n}\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}