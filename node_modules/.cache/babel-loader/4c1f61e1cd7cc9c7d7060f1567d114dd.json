{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/AccountV2/TierInfomation/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport useStyles from './style';\nimport withWidth from '@material-ui/core/withWidth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst swapIcon = '/images/icons/swap.svg';\n\nconst Tiers = props => {\n  _s();\n\n  const styles = useStyles();\n  const {\n    data: rates\n  } = useSelector(state => state.rates);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: this.styles.tierInfomation,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.styles.conversionRate,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Conversion Rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), rates.data && rates.data.map(rate => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"1 \", rate.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: swapIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [rate.rate, \" PKF\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, rate.symbol, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tiers, \"SvIxoop8AFtJhQFxkkEBP02UpYI=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = Tiers;\nexport default withWidth()(Tiers);\n\nvar _c;\n\n$RefreshReg$(_c, \"Tiers\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/AccountV2/TierInfomation/index.tsx"],"names":["useSelector","useStyles","withWidth","swapIcon","Tiers","props","styles","data","rates","state","tierInfomation","conversionRate","map","rate","name","symbol"],"mappings":";;;AACA,SAASA,WAAT,QAAyC,aAAzC;AAGA,OAAOC,SAAP,MAAsB,SAAtB;AACA,OAAOC,SAAP,MAAgD,6BAAhD;;AAEA,MAAMC,QAAQ,GAAG,wBAAjB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAgB;AAAA;;AAC5B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,QAAM;AAACM,IAAAA,IAAI,EAAEC;AAAP,MAAgBR,WAAW,CAAES,KAAD,IAAgBA,KAAK,CAACD,KAAvB,CAAjC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAE,KAAKF,MAAL,CAAYI,cAA5B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE,KAAKJ,MAAL,CAAYK,cAA5B;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGH,KAAK,CAACD,IAAN,IAAcC,KAAK,CAACD,IAAN,CAAWK,GAAX,CAAgBC,IAAD,IAAe;AAC3C,4BAAO;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACL;AAAA,6BAASA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA,kBADK,eAEL;AAAK,YAAA,GAAG,EAAEX;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFK,eAGL;AAAA,uBAAOU,IAAI,CAACA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHK;AAAA,WAA4BA,IAAI,CAACE,MAAjC;AAAA;AAAA;AAAA;AAAA,gBAAP;AAKD,OANc,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAnBD;;GAAMX,K;UACWH,S,EAEOD,W;;;KAHlBI,K;AAqBN,eAAeF,SAAS,GAAGE,KAAH,CAAxB","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport { TIERS, CONVERSION_RATE } from '../../../constants';\nimport useStyles from './style';\nimport withWidth, {isWidthDown, isWidthUp} from '@material-ui/core/withWidth';\n\nconst swapIcon = '/images/icons/swap.svg';\n\nconst Tiers = (props: any) => {\n  const styles = useStyles();\n\n  const {data: rates} = useSelector((state: any) => state.rates);\n\n  return (\n    <div className={this.styles.tierInfomation}>\n      <div className={this.styles.conversionRate}>\n        <h3 className=\"title\">Conversion Rate</h3>\n        {rates.data && rates.data.map((rate: any) => {\n          return <div className=\"group\" key={rate.symbol}>\n            <span>1 {rate.name}</span>\n            <img src={swapIcon}/>\n            <span>{rate.rate} PKF</span>\n          </div>\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default withWidth()(Tiers);\n"]},"metadata":{},"sourceType":"module"}