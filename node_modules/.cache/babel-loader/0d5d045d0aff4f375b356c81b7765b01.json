{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/AccountV2/ModalVerifyEmail/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './style';\nimport useCommonStyle from '../../../styles/CommonStyle';\nimport { useWeb3React } from '@web3-react/core';\nimport useWalletSignature from '../../../hooks/useWalletSignature';\nimport axios from 'axios';\nimport { alertFailure, alertSuccess } from '../../../store/actions/alert';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst closeIcon = '/images/icons/close.svg';\nconst REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst ModalVerifyEmail = props => {\n  _s();\n\n  const styles = useStyles();\n  const commonStyles = useCommonStyle();\n  const dispatch = useDispatch();\n  const {\n    account: connectedAccount\n  } = useWeb3React();\n  const {\n    signature,\n    signMessage,\n    setSignature,\n    error\n  } = useWalletSignature();\n  const [inputEmail, setInputEmail] = useState('');\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const [disableVerify, setDisableVerify] = useState(true);\n  const {\n    setOpenModalVerifyEmail,\n    email,\n    setEmail,\n    setEmailVeryfied,\n    open\n  } = props;\n  useEffect(() => {\n    setInputEmail(email);\n  }, [email]);\n  useEffect(() => {\n    console.log('signature', signature);\n\n    if (signature != '') {\n      const data = {\n        email: inputEmail,\n        signature: signature,\n        wallet_address: connectedAccount || ''\n      };\n      console.log(data);\n      const options = {\n        headers: {\n          msgSignature: process.env.REACT_APP_MESSAGE_INVESTOR_SIGNATURE\n        }\n      };\n      axios.post(`${process.env.REACT_APP_API_BASE_URL}/user/register-email`, data, options).then(res => {\n        if (res.data.status == 200) {\n          dispatch(alertSuccess(res.data.message));\n          window.location.reload();\n          setEmail(inputEmail);\n          setOpenModalVerifyEmail(false);\n          setEmailVeryfied(1);\n        } else if (res.data.status == 400) {\n          dispatch(alertFailure(res.data.message));\n        }\n      }).catch(() => {\n        dispatch(alertFailure('Email register failure, please try again later'));\n      });\n      setSignature('');\n    }\n  }, [signature]);\n  useEffect(() => {\n    console.log(REGEX.test(inputEmail));\n    if (!REGEX.test(inputEmail) || inputEmail == '') setDisableVerify(true);else setDisableVerify(false);\n  }, [inputEmail]);\n\n  const handleVerifyEmail = async () => {\n    if (inputEmail != '' && REGEX.test(inputEmail) == false || inputEmail == '') {\n      setInvalidEmail(true);\n      return;\n    }\n\n    setInvalidEmail(false);\n    await signMessage();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    keepMounted: true,\n    onClose: () => setOpenModalVerifyEmail(false),\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    className: commonStyles.modal + ' ' + styles.modalVerifyEmail,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        className: \"modal-content__head\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: closeIcon,\n          className: \"btn-close\",\n          onClick: () => setOpenModalVerifyEmail(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: \"Verify Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: \"modal-content__body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtitle\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputEmail,\n            onChange: e => setInputEmail(e.target.value),\n            placeholder: \"Please enter email\",\n            maxLength: 190\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), invalidEmail && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#D01F36'\n          },\n          children: \"Invalid Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: \"modal-content__foot\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-approve\" + (disableVerify ? ' disabled' : ''),\n          onClick: () => handleVerifyEmail(),\n          disabled: disableVerify,\n          children: \"Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-cancel\",\n          onClick: () => setOpenModalVerifyEmail(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalVerifyEmail, \"xxhSJcE7MCzPlBctkNspXEDhI6A=\", false, function () {\n  return [useStyles, useCommonStyle, useDispatch, useWeb3React, useWalletSignature];\n});\n\n_c = ModalVerifyEmail;\nexport default ModalVerifyEmail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalVerifyEmail\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/AccountV2/ModalVerifyEmail/index.tsx"],"names":["useState","useEffect","useDispatch","useStyles","useCommonStyle","useWeb3React","useWalletSignature","axios","alertFailure","alertSuccess","Dialog","DialogTitle","DialogContent","DialogActions","closeIcon","REGEX","ModalVerifyEmail","props","styles","commonStyles","dispatch","account","connectedAccount","signature","signMessage","setSignature","error","inputEmail","setInputEmail","invalidEmail","setInvalidEmail","disableVerify","setDisableVerify","setOpenModalVerifyEmail","email","setEmail","setEmailVeryfied","open","console","log","data","wallet_address","options","headers","msgSignature","process","env","REACT_APP_MESSAGE_INVESTOR_SIGNATURE","post","REACT_APP_API_BASE_URL","then","res","status","message","window","location","reload","catch","test","handleVerifyEmail","modal","modalVerifyEmail","e","target","value","color"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport useStyles from './style';\nimport useCommonStyle from '../../../styles/CommonStyle';\nimport { useWeb3React } from '@web3-react/core';\nimport useWalletSignature from '../../../hooks/useWalletSignature';\nimport axios from 'axios';\nimport { alertFailure, alertSuccess } from '../../../store/actions/alert';\nimport {Dialog, DialogTitle, DialogContent, DialogActions} from '@material-ui/core';\n\nconst closeIcon = '/images/icons/close.svg';\nconst REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst ModalVerifyEmail = (props: any) => {\n  const styles = useStyles();\n  const commonStyles = useCommonStyle();\n  const dispatch = useDispatch();\n\n  const { account: connectedAccount } = useWeb3React();\n  const { signature, signMessage, setSignature, error } = useWalletSignature();\n  const [inputEmail, setInputEmail] = useState('');\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const [disableVerify, setDisableVerify] = useState(true);\n\n  const {\n    setOpenModalVerifyEmail,\n    email,\n    setEmail,\n    setEmailVeryfied,\n    open\n  } = props;\n\n  useEffect(() => {\n    setInputEmail(email);\n  }, [email])\n\n  useEffect(() => {\n    console.log('signature', signature)\n    if(signature != '') {\n      const data = {\n        email: inputEmail,\n        signature: signature,\n        wallet_address: connectedAccount || ''\n      }\n      console.log(data)\n      const options = {\n        headers: {\n          msgSignature: process.env.REACT_APP_MESSAGE_INVESTOR_SIGNATURE\n        }\n      }\n      axios.post(`${process.env.REACT_APP_API_BASE_URL}/user/register-email`, data, options)\n      .then(res => {\n        if(res.data.status == 200) {\n          dispatch(alertSuccess(res.data.message));\n          window.location.reload();\n          setEmail(inputEmail)\n          setOpenModalVerifyEmail(false);\n          setEmailVeryfied(1);\n        } else if(res.data.status == 400) {\n          dispatch(alertFailure(res.data.message));\n        }\n      }).catch(() => {\n        dispatch(alertFailure('Email register failure, please try again later'));\n      })\n      setSignature('');\n    }\n  }, [signature])\n\n  useEffect(() => {\n    console.log(REGEX.test(inputEmail) )\n    if(!REGEX.test(inputEmail) || inputEmail == '') setDisableVerify(true);\n    else setDisableVerify(false);\n  }, [inputEmail])\n\n  const handleVerifyEmail = async () => {\n    if(inputEmail != '' && REGEX.test(inputEmail) == false || inputEmail == '') {\n      setInvalidEmail(true);\n      return;\n    }\n    setInvalidEmail(false);\n    await signMessage();\n  }\n\n  return (\n    <Dialog\n      open={open}\n      keepMounted\n      onClose={() => setOpenModalVerifyEmail(false)}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n      className={commonStyles.modal + ' ' + styles.modalVerifyEmail}\n    >\n      <div className=\"modal-content\">\n        <DialogTitle id=\"alert-dialog-slide-title\" className=\"modal-content__head\">\n          <img src={closeIcon} className=\"btn-close\" onClick={() => setOpenModalVerifyEmail(false)}/>\n          <h2 className=\"title\">Verify Email</h2>\n        </DialogTitle>\n        <DialogContent className=\"modal-content__body\">\n          <div className=\"subtitle\">\n            <span>Email</span>\n          </div>\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              value={inputEmail}\n              onChange={e => setInputEmail(e.target.value)}\n              placeholder=\"Please enter email\"\n              maxLength={190}\n            />\n          </div>\n          {invalidEmail && <span style={{color: '#D01F36'}}>Invalid Email</span>}\n        </DialogContent>\n        <DialogActions className=\"modal-content__foot\">\n          <button\n            className={\"btn-approve\" + ((disableVerify) ? ' disabled': '')}\n            onClick={() => handleVerifyEmail()}\n            disabled={disableVerify}\n          >Verify</button>\n          <button\n            className=\"btn-cancel\"\n            onClick={() => setOpenModalVerifyEmail(false)}\n          >Cancel</button>\n        </DialogActions>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default ModalVerifyEmail;\n"]},"metadata":{},"sourceType":"module"}