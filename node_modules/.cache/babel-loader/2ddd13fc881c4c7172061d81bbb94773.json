{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/AccountV2/ModalWithdraw/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash';\nimport useStyles from './style';\nimport useCommonStyle from '../../../styles/CommonStyle';\nimport { withdraw, getWithdrawFee } from '../../../store/actions/sota-tiers';\nimport { useWeb3React } from '@web3-react/core';\nimport BigNumber from 'bignumber.js';\nimport { CONVERSION_RATE } from '../../../constants';\nimport { numberWithCommas } from '../../../utils/formatNumber';\nimport NumberFormat from 'react-number-format';\nimport { Dialog, DialogTitle, DialogContent, DialogActions } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst closeIcon = '/images/icons/close.svg';\nconst REGEX_NUMBER = /^-?[0-9]{0,}[.]{0,1}[0-9]{0,6}$/;\n\nconst ModalWithdraw = props => {\n  _s();\n\n  var _listTokenDetails$4, _CONVERSION_RATE$, _CONVERSION_RATE$2, _listTokenDetails$5;\n\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  const commonStyles = useCommonStyle();\n  const [withdrawAmount, setWithdrawAmount] = useState('');\n  const [disableWithdraw, setDisableWithdraw] = useState(true);\n  const {\n    data: userInfo = {}\n  } = useSelector(state => state.userInfo);\n  const {\n    data: withdrawFee = {}\n  } = useSelector(state => state.withdrawFee);\n  const {\n    account: connectedAccount,\n    library\n  } = useWeb3React();\n  const {\n    data: appChainID\n  } = useSelector(state => state.appNetwork);\n  const {\n    data: rates\n  } = useSelector(state => state.rates);\n  const {\n    setOpenModalWithdraw,\n    setOpenModalTransactionSubmitting,\n    listTokenDetails,\n    open,\n    totalStaked\n  } = props;\n  const [currentToken, setCurrentToken] = useState(undefined);\n  const [currentStaked, setCurrentStaked] = useState('0');\n  const [currentRate, setCurrentRate] = useState(0);\n\n  const setDefaultToken = () => {\n    setCurrentToken(listTokenDetails[0]);\n    setCurrentStaked(userInfo.pkfStaked);\n    setCurrentRate(1);\n  };\n\n  useEffect(() => {\n    setDefaultToken();\n  }, [userInfo, listTokenDetails]);\n\n  const onWithDraw = () => {\n    if (disableWithdraw) return;\n    dispatch(withdraw(connectedAccount, withdrawAmount, library, currentToken.address));\n    setOpenModalTransactionSubmitting(true);\n    setOpenModalWithdraw(false);\n    setWithdrawAmount('');\n    setDefaultToken();\n  };\n\n  const handleClose = () => {\n    setOpenModalWithdraw(false);\n    setWithdrawAmount('');\n    setDefaultToken();\n  };\n\n  useEffect(() => {\n    if (withdrawAmount === '' || withdrawAmount === '0') {\n      setDisableWithdraw(true);\n      return;\n    }\n\n    if (!connectedAccount) return;\n\n    if (!isNaN(parseFloat(currentStaked)) && !isNaN(parseFloat(withdrawAmount))) {\n      const staked = new BigNumber(currentStaked).multipliedBy(new BigNumber(10).pow(18));\n      const amount = new BigNumber(withdrawAmount).multipliedBy(new BigNumber(10).pow(18));\n      const zero = new BigNumber('0');\n      setDisableWithdraw(staked.lt(amount) || amount.lte(zero));\n    }\n  }, [connectedAccount, userInfo, withdrawAmount, currentToken]);\n  useEffect(() => {\n    dispatch(getWithdrawFee(connectedAccount, withdrawAmount === '' ? '0' : withdrawAmount));\n  }, [withdrawAmount]);\n  useEffect(() => {\n    var _listTokenDetails$, _listTokenDetails$2, _listTokenDetails$3;\n\n    if (listTokenDetails.length == 0 || rates.length == 0 || !currentToken) return;\n\n    if ((currentToken === null || currentToken === void 0 ? void 0 : currentToken.symbol) == ((_listTokenDetails$ = listTokenDetails[0]) === null || _listTokenDetails$ === void 0 ? void 0 : _listTokenDetails$.symbol)) {\n      setCurrentRate(1);\n    } else if ((currentToken === null || currentToken === void 0 ? void 0 : currentToken.symbol) == ((_listTokenDetails$2 = listTokenDetails[1]) === null || _listTokenDetails$2 === void 0 ? void 0 : _listTokenDetails$2.symbol)) {\n      var _rates$data$;\n\n      setCurrentRate(parseFloat(rates === null || rates === void 0 ? void 0 : (_rates$data$ = rates.data[0]) === null || _rates$data$ === void 0 ? void 0 : _rates$data$.rate));\n    } else if ((currentToken === null || currentToken === void 0 ? void 0 : currentToken.symbol) == ((_listTokenDetails$3 = listTokenDetails[2]) === null || _listTokenDetails$3 === void 0 ? void 0 : _listTokenDetails$3.symbol)) {\n      var _rates$data$2;\n\n      setCurrentRate(parseFloat(rates === null || rates === void 0 ? void 0 : (_rates$data$2 = rates.data[1]) === null || _rates$data$2 === void 0 ? void 0 : _rates$data$2.rate));\n    }\n  }, [rates, currentToken, listTokenDetails]);\n\n  const handleSelectToken = e => {\n    const tokens = listTokenDetails.filter(tokenDetails => {\n      return tokenDetails.symbol == e.target.value;\n    });\n    setCurrentToken(tokens[0]);\n\n    if (e.target.value == 'PKF') {\n      setCurrentStaked(userInfo.pkfStaked);\n    } else if (e.target.value == CONVERSION_RATE[0].key && appChainID.appChainID == '5' || e.target.value == CONVERSION_RATE[0].keyMainnet && appChainID.appChainID == '1') {\n      setCurrentStaked(userInfo.uniStaked);\n    } else if (e.target.value == CONVERSION_RATE[1].key && appChainID.appChainID == '5' || e.target.value == CONVERSION_RATE[1].keyMainnet && appChainID.appChainID == '1') {\n      setCurrentStaked(userInfo.mantraStaked);\n    }\n  };\n\n  const handleChange = e => {\n    const value = e.target.value.replaceAll(\",\", \"\");\n\n    if (value === '' || REGEX_NUMBER.test(value)) {\n      setWithdrawAmount(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\",\n    className: commonStyles.modal + ' ' + styles.modalWithdraw,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-slide-title\",\n        className: \"modal-content__head\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: closeIcon,\n          className: \"btn-close\",\n          onClick: handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: [\"You have \", numberWithCommas(totalStaked), \" \", (_listTokenDetails$4 = listTokenDetails[0]) === null || _listTokenDetails$4 === void 0 ? void 0 : _listTokenDetails$4.symbol, \" staked\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        className: \"modal-content__body\",\n        children: [open && /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"select_token\",\n          id: \"select-token\",\n          onChange: e => handleSelectToken(e),\n          children: listTokenDetails && listTokenDetails.map((tokenDetails, index) => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.symbol,\n              children: index === 0 ? 'Polkafoundry (PKF)' : `${CONVERSION_RATE[index - 1].name} (${CONVERSION_RATE[index - 1].symbol})`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.group,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"balance\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Your wallet staked\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [_.isEmpty(currentStaked) ? 0 : numberWithCommas(currentStaked), \" \", (currentToken === null || currentToken === void 0 ? void 0 : currentToken.symbol) == 'PKF' ? 'PKF' : (currentToken === null || currentToken === void 0 ? void 0 : currentToken.symbol) == CONVERSION_RATE[0].keyMainnet && appChainID.appChainID == '1' || (currentToken === null || currentToken === void 0 ? void 0 : currentToken.symbol) == CONVERSION_RATE[0].key && appChainID.appChainID == '5' ? (_CONVERSION_RATE$ = CONVERSION_RATE[0]) === null || _CONVERSION_RATE$ === void 0 ? void 0 : _CONVERSION_RATE$.symbol : (_CONVERSION_RATE$2 = CONVERSION_RATE[1]) === null || _CONVERSION_RATE$2 === void 0 ? void 0 : _CONVERSION_RATE$2.symbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subtitle\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(NumberFormat, {\n              type: \"text\",\n              placeholder: '0',\n              thousandSeparator: true,\n              onChange: e => handleChange(e),\n              decimalScale: 6,\n              value: withdrawAmount,\n              min: 0,\n              maxLength: 255\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-max\",\n                id: \"btn-max-withdraw\",\n                onClick: () => setWithdrawAmount(currentStaked),\n                children: \"MAX\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"balance\",\n            style: {\n              marginTop: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Equivalent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [numberWithCommas((parseFloat(withdrawAmount) * currentRate || 0).toString()), \" \", (_listTokenDetails$5 = listTokenDetails[0]) === null || _listTokenDetails$5 === void 0 ? void 0 : _listTokenDetails$5.symbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: \"modal-content__foot\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-staking \" + (disableWithdraw ? 'disabled' : ''),\n          onClick: onWithDraw,\n          children: \"Unstake\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-cancel\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalWithdraw, \"og5rVVq/t9uasyajTAL0fvdkS7g=\", false, function () {\n  return [useStyles, useDispatch, useCommonStyle, useSelector, useSelector, useWeb3React, useSelector, useSelector];\n});\n\n_c = ModalWithdraw;\nexport default ModalWithdraw;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalWithdraw\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/AccountV2/ModalWithdraw/index.tsx"],"names":["useEffect","useState","useSelector","useDispatch","_","useStyles","useCommonStyle","withdraw","getWithdrawFee","useWeb3React","BigNumber","CONVERSION_RATE","numberWithCommas","NumberFormat","Dialog","DialogTitle","DialogContent","DialogActions","closeIcon","REGEX_NUMBER","ModalWithdraw","props","styles","dispatch","commonStyles","withdrawAmount","setWithdrawAmount","disableWithdraw","setDisableWithdraw","data","userInfo","state","withdrawFee","account","connectedAccount","library","appChainID","appNetwork","rates","setOpenModalWithdraw","setOpenModalTransactionSubmitting","listTokenDetails","open","totalStaked","currentToken","setCurrentToken","undefined","currentStaked","setCurrentStaked","currentRate","setCurrentRate","setDefaultToken","pkfStaked","onWithDraw","address","handleClose","isNaN","parseFloat","staked","multipliedBy","pow","amount","zero","lt","lte","length","symbol","rate","handleSelectToken","e","tokens","filter","tokenDetails","target","value","key","keyMainnet","uniStaked","mantraStaked","handleChange","replaceAll","test","modal","modalWithdraw","map","index","name","group","isEmpty","marginTop","toString"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,CAAP,MAAsB,QAAtB;AACA,OAAOC,SAAP,MAAsB,SAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,mCAAzC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAAQC,MAAR,EAAgBC,WAAhB,EAA6BC,aAA7B,EAA4CC,aAA5C,QAAgE,mBAAhE;;AAEA,MAAMC,SAAS,GAAG,yBAAlB;AACA,MAAMC,YAAY,GAAG,iCAArB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAgB;AAAA;;AAAA;;AACpC,QAAMC,MAAM,GAAGjB,SAAS,EAAxB;AACA,QAAMkB,QAAQ,GAAGpB,WAAW,EAA5B;AACA,QAAMqB,YAAY,GAAGlB,cAAc,EAAnC;AAEA,QAAM,CAACmB,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAAC0B,eAAD,EAAkBC,kBAAlB,IAAwC3B,QAAQ,CAAC,IAAD,CAAtD;AAEA,QAAM;AAAE4B,IAAAA,IAAI,EAAEC,QAAQ,GAAG;AAAnB,MAA0B5B,WAAW,CAAE6B,KAAD,IAAgBA,KAAK,CAACD,QAAvB,CAA3C;AACA,QAAM;AAAED,IAAAA,IAAI,EAAEG,WAAW,GAAG;AAAtB,MAA6B9B,WAAW,CAAE6B,KAAD,IAAgBA,KAAK,CAACC,WAAvB,CAA9C;AACA,QAAM;AAAEC,IAAAA,OAAO,EAAEC,gBAAX;AAA6BC,IAAAA;AAA7B,MAAyC1B,YAAY,EAA3D;AACA,QAAM;AAAEoB,IAAAA,IAAI,EAAEO;AAAR,MAAuBlC,WAAW,CAAE6B,KAAD,IAAgBA,KAAK,CAACM,UAAvB,CAAxC;AACA,QAAM;AAAER,IAAAA,IAAI,EAAES;AAAR,MAAkBpC,WAAW,CAAE6B,KAAD,IAAgBA,KAAK,CAACO,KAAvB,CAAnC;AAEA,QAAM;AACJC,IAAAA,oBADI;AAEJC,IAAAA,iCAFI;AAGJC,IAAAA,gBAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA;AALI,MAMFtB,KANJ;AAOA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkC5C,QAAQ,CAAC6C,SAAD,CAAhD;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC/C,QAAQ,CAAC,GAAD,CAAlD;AACA,QAAM,CAACgD,WAAD,EAAcC,cAAd,IAAgCjD,QAAQ,CAAC,CAAD,CAA9C;;AAEA,QAAMkD,eAAe,GAAG,MAAM;AAC5BN,IAAAA,eAAe,CAACJ,gBAAgB,CAAC,CAAD,CAAjB,CAAf;AACAO,IAAAA,gBAAgB,CAAClB,QAAQ,CAACsB,SAAV,CAAhB;AACAF,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD,GAJD;;AAMAlD,EAAAA,SAAS,CAAC,MAAM;AACdmD,IAAAA,eAAe;AAChB,GAFQ,EAEN,CAACrB,QAAD,EAAWW,gBAAX,CAFM,CAAT;;AAIA,QAAMY,UAAU,GAAG,MAAM;AACvB,QAAG1B,eAAH,EAAoB;AACpBJ,IAAAA,QAAQ,CAAChB,QAAQ,CAAC2B,gBAAD,EAAmBT,cAAnB,EAAmCU,OAAnC,EAA4CS,YAAY,CAACU,OAAzD,CAAT,CAAR;AACAd,IAAAA,iCAAiC,CAAC,IAAD,CAAjC;AACAD,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAb,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAyB,IAAAA,eAAe;AAChB,GAPD;;AASA,QAAMI,WAAW,GAAG,MAAM;AACxBhB,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAb,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAyB,IAAAA,eAAe;AAChB,GAJD;;AAMAnD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGyB,cAAc,KAAK,EAAnB,IAAyBA,cAAc,KAAK,GAA/C,EAAoD;AAClDG,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACA;AACD;;AACD,QAAG,CAACM,gBAAJ,EAAsB;;AACtB,QAAG,CAACsB,KAAK,CAACC,UAAU,CAACV,aAAD,CAAX,CAAN,IACE,CAACS,KAAK,CAACC,UAAU,CAAChC,cAAD,CAAX,CADX,EAEA;AACE,YAAMiC,MAAM,GAAG,IAAIhD,SAAJ,CAAcqC,aAAd,EAA6BY,YAA7B,CAA0C,IAAIjD,SAAJ,CAAc,EAAd,EAAkBkD,GAAlB,CAAsB,EAAtB,CAA1C,CAAf;AACA,YAAMC,MAAM,GAAG,IAAInD,SAAJ,CAAce,cAAd,EAA8BkC,YAA9B,CAA2C,IAAIjD,SAAJ,CAAc,EAAd,EAAkBkD,GAAlB,CAAsB,EAAtB,CAA3C,CAAf;AACA,YAAME,IAAI,GAAG,IAAIpD,SAAJ,CAAc,GAAd,CAAb;AACAkB,MAAAA,kBAAkB,CAAC8B,MAAM,CAACK,EAAP,CAAUF,MAAV,KAAqBA,MAAM,CAACG,GAAP,CAAWF,IAAX,CAAtB,CAAlB;AACD;AACF,GAdQ,EAcN,CAAC5B,gBAAD,EAAmBJ,QAAnB,EAA6BL,cAA7B,EAA6CmB,YAA7C,CAdM,CAAT;AAgBA5C,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,QAAQ,CAACf,cAAc,CAAC0B,gBAAD,EAAmBT,cAAc,KAAK,EAAnB,GAAwB,GAAxB,GAA8BA,cAAjD,CAAf,CAAR;AACD,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIAzB,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACd,QAAGyC,gBAAgB,CAACwB,MAAjB,IAA2B,CAA3B,IAAgC3B,KAAK,CAAC2B,MAAN,IAAgB,CAAhD,IAAqD,CAACrB,YAAzD,EAAuE;;AACvE,QAAG,CAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEsB,MAAd,4BAAwBzB,gBAAgB,CAAC,CAAD,CAAxC,uDAAwB,mBAAqByB,MAA7C,CAAH,EAAwD;AACtDhB,MAAAA,cAAc,CAAC,CAAD,CAAd;AACD,KAFD,MAEO,IAAG,CAAAN,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEsB,MAAd,6BAAwBzB,gBAAgB,CAAC,CAAD,CAAxC,wDAAwB,oBAAqByB,MAA7C,CAAH,EACP;AAAA;;AACEhB,MAAAA,cAAc,CAACO,UAAU,CAACnB,KAAD,aAACA,KAAD,uCAACA,KAAK,CAAET,IAAP,CAAY,CAAZ,CAAD,iDAAC,aAAgBsC,IAAjB,CAAX,CAAd;AACD,KAHM,MAGA,IAAG,CAAAvB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEsB,MAAd,6BAAwBzB,gBAAgB,CAAC,CAAD,CAAxC,wDAAwB,oBAAqByB,MAA7C,CAAH,EACP;AAAA;;AACEhB,MAAAA,cAAc,CAACO,UAAU,CAACnB,KAAD,aAACA,KAAD,wCAACA,KAAK,CAAET,IAAP,CAAY,CAAZ,CAAD,kDAAC,cAAgBsC,IAAjB,CAAX,CAAd;AACD;AACF,GAXQ,EAWN,CAAC7B,KAAD,EAAQM,YAAR,EAAsBH,gBAAtB,CAXM,CAAT;;AAaA,QAAM2B,iBAAiB,GAAIC,CAAD,IAAY;AACpC,UAAMC,MAAM,GAAG7B,gBAAgB,CAAC8B,MAAjB,CAAyBC,YAAD,IAAuB;AAC5D,aAAOA,YAAY,CAACN,MAAb,IAAuBG,CAAC,CAACI,MAAF,CAASC,KAAvC;AACD,KAFc,CAAf;AAGA7B,IAAAA,eAAe,CAACyB,MAAM,CAAC,CAAD,CAAP,CAAf;;AACA,QAAGD,CAAC,CAACI,MAAF,CAASC,KAAT,IAAkB,KAArB,EAA4B;AAC1B1B,MAAAA,gBAAgB,CAAClB,QAAQ,CAACsB,SAAV,CAAhB;AACD,KAFD,MAEO,IAAGiB,CAAC,CAACI,MAAF,CAASC,KAAT,IAAkB/D,eAAe,CAAC,CAAD,CAAf,CAAmBgE,GAArC,IAA4CvC,UAAU,CAACA,UAAX,IAAyB,GAArE,IACLiC,CAAC,CAACI,MAAF,CAASC,KAAT,IAAkB/D,eAAe,CAAC,CAAD,CAAf,CAAmBiE,UAArC,IAAmDxC,UAAU,CAACA,UAAX,IAAyB,GAD1E,EAEP;AACEY,MAAAA,gBAAgB,CAAClB,QAAQ,CAAC+C,SAAV,CAAhB;AACD,KAJM,MAIA,IAAGR,CAAC,CAACI,MAAF,CAASC,KAAT,IAAkB/D,eAAe,CAAC,CAAD,CAAf,CAAmBgE,GAArC,IAA4CvC,UAAU,CAACA,UAAX,IAAyB,GAArE,IACLiC,CAAC,CAACI,MAAF,CAASC,KAAT,IAAkB/D,eAAe,CAAC,CAAD,CAAf,CAAmBiE,UAArC,IAAmDxC,UAAU,CAACA,UAAX,IAAyB,GAD1E,EAEP;AACEY,MAAAA,gBAAgB,CAAClB,QAAQ,CAACgD,YAAV,CAAhB;AACD;AACF,GAhBD;;AAiBA,QAAMC,YAAY,GAAIV,CAAD,IAAY;AAC/B,UAAMK,KAAK,GAAGL,CAAC,CAACI,MAAF,CAASC,KAAT,CAAeM,UAAf,CAA0B,GAA1B,EAA+B,EAA/B,CAAd;;AACA,QAAIN,KAAK,KAAK,EAAV,IAAgBvD,YAAY,CAAC8D,IAAb,CAAkBP,KAAlB,CAApB,EAA8C;AAC5ChD,MAAAA,iBAAiB,CAACgD,KAAD,CAAjB;AACD;AACF,GALD;;AAOA,sBACE,QAAC,MAAD;AACE,IAAA,IAAI,EAAEhC,IADR;AAEE,IAAA,WAAW,MAFb;AAGE,IAAA,OAAO,EAAEa,WAHX;AAIE,uBAAgB,0BAJlB;AAKE,wBAAiB,gCALnB;AAME,IAAA,SAAS,EAAE/B,YAAY,CAAC0D,KAAb,GAAqB,GAArB,GAA2B5D,MAAM,CAAC6D,aAN/C;AAAA,2BAQE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,0BAAhB;AAA2C,QAAA,SAAS,EAAC,qBAArD;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEjE,SAAV;AAAqB,UAAA,SAAS,EAAC,WAA/B;AAA2C,UAAA,OAAO,EAAEqC;AAApD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,kCAAgC3C,gBAAgB,CAAC+B,WAAD,CAAhD,8BAAgEF,gBAAgB,CAAC,CAAD,CAAhF,wDAAgE,oBAAqByB,MAArF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,aAAD;AAAe,QAAA,SAAS,EAAC,qBAAzB;AAAA,mBACGxB,IAAI,iBAAI;AAAQ,UAAA,IAAI,EAAC,cAAb;AAA4B,UAAA,EAAE,EAAC,cAA/B;AAA8C,UAAA,QAAQ,EAAG2B,CAAD,IAAOD,iBAAiB,CAACC,CAAD,CAAhF;AAAA,oBACN5B,gBAAgB,IAAIA,gBAAgB,CAAC2C,GAAjB,CAAqB,CAACZ,YAAD,EAAoBa,KAApB,KAAsC;AAC9E,gCAAO;AAAQ,cAAA,KAAK,EAAEb,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEN,MAA7B;AAAA,wBACLmB,KAAK,KAAK,CAAV,GAAc,oBAAd,GAAsC,GAAE1E,eAAe,CAAC0E,KAAK,GAAG,CAAT,CAAf,CAA2BC,IAAK,KAAI3E,eAAe,CAAC0E,KAAK,GAAG,CAAT,CAAf,CAA2BnB,MAAO;AADzG,eAA0CmB,KAA1C;AAAA;AAAA;AAAA;AAAA,oBAAP;AAGD,WAJoB;AADd;AAAA;AAAA;AAAA;AAAA,gBADX,eAQE;AAAK,UAAA,SAAS,EAAE/D,MAAM,CAACiE,KAAvB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA,mCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,2BAAQnF,CAAC,CAACoF,OAAF,CAAUzC,aAAV,IAA2B,CAA3B,GAA+BnC,gBAAgB,CAACmC,aAAD,CAAvD,OACE,CAAAH,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEsB,MAAd,KAAwB,KAAxB,GAAgC,KAAhC,GACG,CAAAtB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEsB,MAAd,KAAwBvD,eAAe,CAAC,CAAD,CAAf,CAAmBiE,UAA3C,IAAyDxC,UAAU,CAACA,UAAX,IAAyB,GAAlF,IACD,CAAAQ,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEsB,MAAd,KAAwBvD,eAAe,CAAC,CAAD,CAAf,CAAmBgE,GAA3C,IAAkDvC,UAAU,CAACA,UAAX,IAAyB,GAD3E,wBACkFzB,eAAe,CAAC,CAAD,CADjG,sDACkF,kBAAoBuD,MADtG,yBAC+GvD,eAAe,CAAC,CAAD,CAD9H,uDAC+G,mBAAoBuD,MAHvI;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAXF,eAcE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACE,QAAC,YAAD;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAE,GAFf;AAGE,cAAA,iBAAiB,EAAE,IAHrB;AAIE,cAAA,QAAQ,EAAEG,CAAC,IAAIU,YAAY,CAACV,CAAD,CAJ7B;AAKE,cAAA,YAAY,EAAE,CALhB;AAME,cAAA,KAAK,EAAE5C,cANT;AAOE,cAAA,GAAG,EAAE,CAPP;AAQE,cAAA,SAAS,EAAE;AARb;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE;AAAA,qCACE;AAAQ,gBAAA,SAAS,EAAC,SAAlB;AAA4B,gBAAA,EAAE,EAAC,kBAA/B;AAAkD,gBAAA,OAAO,EAAE,MAAMC,iBAAiB,CAACqB,aAAD,CAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,eA6BE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAyB,YAAA,KAAK,EAAE;AAAC0C,cAAAA,SAAS,EAAE;AAAZ,aAAhC;AAAA,mCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,2BAAO7E,gBAAgB,CAAC,CAAC6C,UAAU,CAAChC,cAAD,CAAV,GAA6BwB,WAA7B,IAA4C,CAA7C,EAAgDyC,QAAhD,EAAD,CAAvB,8BAAsFjD,gBAAgB,CAAC,CAAD,CAAtG,wDAAsF,oBAAqByB,MAA3G;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAkDE,QAAC,aAAD;AAAe,QAAA,SAAS,EAAC,qBAAzB;AAAA,gCACE;AACE,UAAA,SAAS,EAAE,kBAAkBvC,eAAe,GAAG,UAAH,GAAgB,EAAjD,CADb;AAEE,UAAA,OAAO,EAAE0B,UAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AACE,UAAA,SAAS,EAAC,YADZ;AAEE,UAAA,OAAO,EAAEE,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlDF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AAwED,CAnLD;;GAAMnC,a;UACWf,S,EACEF,W,EACIG,c,EAKWJ,W,EACGA,W,EACYO,Y,EAClBP,W,EACLA,W;;;KAZpBkB,a;AAqLN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _, { gt } from 'lodash';\nimport useStyles from './style';\nimport useCommonStyle from '../../../styles/CommonStyle';\nimport { withdraw, getWithdrawFee } from '../../../store/actions/sota-tiers';\nimport { useWeb3React } from '@web3-react/core';\nimport BigNumber from 'bignumber.js';\nimport { CONVERSION_RATE } from '../../../constants';\nimport { numberWithCommas } from '../../../utils/formatNumber';\nimport NumberFormat from 'react-number-format';\nimport {Dialog, DialogTitle, DialogContent, DialogActions} from '@material-ui/core';\n\nconst closeIcon = '/images/icons/close.svg';\nconst REGEX_NUMBER = /^-?[0-9]{0,}[.]{0,1}[0-9]{0,6}$/;\n\nconst ModalWithdraw = (props: any) => {\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  const commonStyles = useCommonStyle();\n\n  const [withdrawAmount, setWithdrawAmount] = useState('');\n  const [disableWithdraw, setDisableWithdraw] = useState(true);\n\n  const { data: userInfo = {} } = useSelector((state: any) => state.userInfo);\n  const { data: withdrawFee = {} } = useSelector((state: any) => state.withdrawFee);\n  const { account: connectedAccount, library } = useWeb3React();\n  const { data: appChainID } = useSelector((state: any) => state.appNetwork);\n  const { data: rates } = useSelector((state: any) => state.rates);\n\n  const {\n    setOpenModalWithdraw,\n    setOpenModalTransactionSubmitting,\n    listTokenDetails,\n    open,\n    totalStaked\n  } = props;\n  const [currentToken, setCurrentToken] = useState(undefined) as any;\n  const [currentStaked, setCurrentStaked] = useState('0');\n  const [currentRate, setCurrentRate] = useState(0);\n\n  const setDefaultToken = () => {\n    setCurrentToken(listTokenDetails[0])\n    setCurrentStaked(userInfo.pkfStaked)\n    setCurrentRate(1)\n  }\n\n  useEffect(() => {\n    setDefaultToken()\n  }, [userInfo, listTokenDetails])\n\n  const onWithDraw = () => {\n    if(disableWithdraw) return\n    dispatch(withdraw(connectedAccount, withdrawAmount, library, currentToken.address));\n    setOpenModalTransactionSubmitting(true);\n    setOpenModalWithdraw(false);\n    setWithdrawAmount('');\n    setDefaultToken();\n  }\n\n  const handleClose = () => {\n    setOpenModalWithdraw(false);\n    setWithdrawAmount('');\n    setDefaultToken();\n  }\n\n  useEffect(() => {\n    if(withdrawAmount === '' || withdrawAmount === '0') {\n      setDisableWithdraw(true)\n      return\n    }\n    if(!connectedAccount) return\n    if(!isNaN(parseFloat(currentStaked))\n      && !isNaN(parseFloat(withdrawAmount)))\n    {\n      const staked = new BigNumber(currentStaked).multipliedBy(new BigNumber(10).pow(18))\n      const amount = new BigNumber(withdrawAmount).multipliedBy(new BigNumber(10).pow(18))\n      const zero = new BigNumber('0')\n      setDisableWithdraw(staked.lt(amount) || amount.lte(zero));\n    }\n  }, [connectedAccount, userInfo, withdrawAmount, currentToken]);\n\n  useEffect(() => {\n    dispatch(getWithdrawFee(connectedAccount, withdrawAmount === '' ? '0' : withdrawAmount))\n  }, [withdrawAmount])\n\n  useEffect(() => {\n    if(listTokenDetails.length == 0 || rates.length == 0 || !currentToken) return\n    if(currentToken?.symbol == listTokenDetails[0]?.symbol) {\n      setCurrentRate(1)\n    } else if(currentToken?.symbol == listTokenDetails[1]?.symbol) \n    {\n      setCurrentRate(parseFloat(rates?.data[0]?.rate))\n    } else if(currentToken?.symbol == listTokenDetails[2]?.symbol)\n    {\n      setCurrentRate(parseFloat(rates?.data[1]?.rate))\n    }\n  }, [rates, currentToken, listTokenDetails])\n\n  const handleSelectToken = (e: any) => {\n    const tokens = listTokenDetails.filter((tokenDetails: any) => {\n      return tokenDetails.symbol == e.target.value\n    })\n    setCurrentToken(tokens[0])\n    if(e.target.value == 'PKF') {\n      setCurrentStaked(userInfo.pkfStaked)\n    } else if(e.target.value == CONVERSION_RATE[0].key && appChainID.appChainID == '5'\n      || e.target.value == CONVERSION_RATE[0].keyMainnet && appChainID.appChainID == '1')\n    {\n      setCurrentStaked(userInfo.uniStaked)\n    } else if(e.target.value == CONVERSION_RATE[1].key && appChainID.appChainID == '5'\n      || e.target.value == CONVERSION_RATE[1].keyMainnet && appChainID.appChainID == '1')\n    {\n      setCurrentStaked(userInfo.mantraStaked)\n    }\n  }\n  const handleChange = (e: any) => {\n    const value = e.target.value.replaceAll(\",\", \"\")\n    if (value === '' || REGEX_NUMBER.test(value)) {\n      setWithdrawAmount(value);\n    }\n  }\n\n  return (\n    <Dialog\n      open={open}\n      keepMounted\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-slide-title\"\n      aria-describedby=\"alert-dialog-slide-description\"\n      className={commonStyles.modal + ' ' + styles.modalWithdraw}\n    >\n      <div className=\"modal-content\">\n        <DialogTitle id=\"alert-dialog-slide-title\" className=\"modal-content__head\">\n          <img src={closeIcon} className=\"btn-close\" onClick={handleClose}/>\n          <h2 className=\"title\">You have {numberWithCommas(totalStaked)} {listTokenDetails[0]?.symbol} staked</h2>\n        </DialogTitle>\n        <DialogContent className=\"modal-content__body\">\n          {open && <select name=\"select_token\" id=\"select-token\" onChange={(e) => handleSelectToken(e)}>\n            {listTokenDetails && listTokenDetails.map((tokenDetails: any, index: number) => {\n              return <option value={tokenDetails?.symbol} key={index}>{\n                index === 0 ? 'Polkafoundry (PKF)' : `${CONVERSION_RATE[index - 1].name} (${CONVERSION_RATE[index - 1].symbol})`\n              }</option>\n            })}\n          </select>}\n          <div className={styles.group}>\n            <div className=\"balance\">\n              <div>\n                <span>Your wallet staked</span>\n                <span>{ _.isEmpty(currentStaked) ? 0 : numberWithCommas(currentStaked) } {\n                  currentToken?.symbol == 'PKF' ? 'PKF'\n                  : (currentToken?.symbol == CONVERSION_RATE[0].keyMainnet && appChainID.appChainID == '1' ||\n                    currentToken?.symbol == CONVERSION_RATE[0].key && appChainID.appChainID == '5') ? CONVERSION_RATE[0]?.symbol : CONVERSION_RATE[1]?.symbol\n                }</span>\n              </div>\n            </div>\n            <div className=\"subtitle\">\n              <span>Input</span>\n            </div>\n            <div className=\"input-group\">\n              <NumberFormat \n                type=\"text\"\n                placeholder={'0'} \n                thousandSeparator={true}  \n                onChange={e => handleChange(e)} \n                decimalScale={6}\n                value={withdrawAmount}\n                min={0}\n                maxLength={255}\n              />\n              <div>\n                <button className=\"btn-max\" id=\"btn-max-withdraw\" onClick={() => setWithdrawAmount(currentStaked)}>MAX</button>\n              </div>\n            </div>\n            <div className=\"balance\" style={{marginTop: '10px'}}>\n              <div>\n                <span>Equivalent</span>\n                <span>{numberWithCommas((parseFloat(withdrawAmount) * currentRate || 0).toString())} {listTokenDetails[0]?.symbol}</span>\n              </div>\n            </div>\n          </div>\n        </DialogContent>\n        <DialogActions className=\"modal-content__foot\">\n          <button\n            className={\"btn-staking \" + (disableWithdraw ? 'disabled' : '')}\n            onClick={onWithDraw}\n          >Unstake</button>\n          <button\n            className=\"btn-cancel\"\n            onClick={handleClose}\n          >Cancel</button>\n        </DialogActions>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default ModalWithdraw;\n"]},"metadata":{},"sourceType":"module"}