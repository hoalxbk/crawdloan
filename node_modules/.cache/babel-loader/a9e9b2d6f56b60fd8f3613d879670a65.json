{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/BuyToken/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { HashLoader } from \"react-spinners\";\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; //@ts-ignore\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport BigNumber from 'bignumber.js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport withWidth, { isWidthDown, isWidthUp } from '@material-ui/core/withWidth';\nimport { useTypedSelector } from '../../hooks/useTypedSelector';\nimport usePoolDetailsMapping, { PoolDetailKey } from './hooks/usePoolDetailsMapping';\nimport useAuth from '../../hooks/useAuth';\nimport usePoolDetails from '../../hooks/usePoolDetails';\nimport useTokenSoldProgress from './hooks/useTokenSoldProgress';\nimport usePoolJoinAction from './hooks/usePoolJoinAction';\nimport useFetch from '../../hooks/useFetch';\nimport Tiers from '../AccountV2/Tiers';\nimport LotteryWinners from './LotteryWinners';\nimport PoolAbout from './PoolAbout';\nimport ClaimToken from './ClaimToken';\nimport MyTier from './MyTier';\nimport BuyTokenForm from './BuyTokenForm';\nimport Button from './Button';\nimport StatusBar from './StatusBar';\nimport Countdown from '../../components/Base/Countdown';\nimport DefaultLayout from '../../components/Layout/DefaultLayout';\nimport { ETH_CHAIN_ID, NETWORK_BSC_NAME, NETWORK_ETH_NAME } from '../../constants/network';\nimport { getPoolCountDown } from '../../utils/getPoolCountDown';\nimport { getPoolStatus } from '../../utils/getPoolStatus';\nimport { numberWithCommas } from '../../utils/formatNumber';\nimport { sotaTiersActions } from '../../store/constants/sota-tiers';\nimport useStyles from './style';\nimport { pushMessage } from '../../store/actions/message';\nimport { getIconCurrencyUsdt } from \"../../utils/usdt\";\nimport { POOL_TYPE, TIER_LEVELS } from \"../../constants\";\nimport PoolInfoTable from \"./PoolInfoTable/PoolInfoTable\";\nimport WhiteListUserGuideBanner from \"./WhiteListUserGuideBanner/WhiteListUserGuideBanner\";\nimport { getEtherscanName, getEtherscanTransactionAddress } from \"../../utils/network\";\nimport PoolIsEndMessage from \"./PoolIsEndMessage/PoolIsEndMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst copyImage = \"/images/copy.svg\";\nconst poolImage = \"/images/pool_circle.svg\";\nconst iconClose = \"/images/icons/close.svg\";\nvar HeaderType;\n\n(function (HeaderType) {\n  HeaderType[\"Main\"] = \"Main\";\n  HeaderType[\"About\"] = \"About the project\";\n  HeaderType[\"Participants\"] = \"Winner\";\n  HeaderType[\"MyTier\"] = \"My Tier\";\n})(HeaderType || (HeaderType = {}));\n\nconst headers = [HeaderType.Main, HeaderType.MyTier, HeaderType.About, HeaderType.Participants];\nconst ETHERSCAN_BASE_URL = process.env.REACT_APP_ETHERSCAN_BASE_URL;\n\nconst BuyToken = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const styles = useStyles();\n  const [buyTokenSuccess, setBuyTokenSuccess] = useState(false);\n  const [copiedAddress, setCopiedAddress] = useState(false);\n  const [activeNav, setActiveNav] = useState(HeaderType.About);\n  const [disableAllButton, setDisableAllButton] = useState(false);\n  const {\n    pathname\n  } = useLocation();\n  const {\n    id\n  } = useParams();\n  /* const userTier = useTypedSelector(state => state.userTier).data; */\n\n  const {\n    appChainID\n  } = useTypedSelector(state => state.appNetwork).data;\n  const {\n    poolDetails,\n    loading: loadingPoolDetail\n  } = usePoolDetails(id);\n  const {\n    isAuth,\n    connectedAccount,\n    wrongChain\n  } = useAuth(); // Fetch token sold, total tokens sold\n\n  const {\n    tokenSold,\n    soldProgress\n  } = useTokenSoldProgress(poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.poolAddress, poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.amount, poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.networkAvailable, poolDetails);\n  const {\n    joinPool,\n    poolJoinLoading,\n    joinPoolSuccess\n  } = usePoolJoinAction({\n    poolId: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.id\n  });\n  const {\n    data: existedWinner\n  } = useFetch(poolDetails ? `/pool/${poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.id}/check-exist-winner?wallet_address=${connectedAccount}` : undefined, (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.method) !== \"whitelist\");\n  const {\n    data: pickedWinner\n  } = useFetch(poolDetails ? `/pool/${poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.id}/check-picked-winner` : undefined, (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.method) !== \"whitelist\");\n  const {\n    data: alreadyJoinPool\n  } = useFetch(poolDetails && connectedAccount ? `/user/check-join-campaign/${poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.id}?wallet_address=${connectedAccount}` : undefined);\n  const {\n    data: verifiedEmail = true\n  } = useFetch(poolDetails && connectedAccount && isAuth ? `/user/check-wallet-address?wallet_address=${connectedAccount}` : undefined);\n  const {\n    data: currentUserTier\n  } = useFetch(id && connectedAccount ? `pool/${id}/user/${connectedAccount}/current-tier` : undefined);\n  const {\n    data: winnersList\n  } = useFetch(`/user/winner-list/${id}?page=1&limit=10&`);\n  const poolDetailsMapping = usePoolDetailsMapping(poolDetails); // Use for check whether pool exist in selected network or not\n\n  const networkAvailable = (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.networkAvailable) === 'eth' ? NETWORK_ETH_NAME : NETWORK_BSC_NAME;\n  const appNetwork = appChainID === ETH_CHAIN_ID ? 'eth' : 'bsc';\n  const ableToFetchFromBlockchain = appNetwork === (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.networkAvailable) && !wrongChain;\n  const userBuyLimit = (currentUserTier === null || currentUserTier === void 0 ? void 0 : currentUserTier.max_buy) || 0;\n  const userBuyMinimum = (currentUserTier === null || currentUserTier === void 0 ? void 0 : currentUserTier.min_buy) || 0; // With Whitelist situation, Enable when join time < current < end join time\n  // With FCFS, always disable join button\n\n  const joinTimeInDate = (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.joinTime) ? new Date(Number(poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.joinTime) * 1000) : undefined;\n  const endJoinTimeInDate = (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.endJoinTime) ? new Date(Number(poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.endJoinTime) * 1000) : undefined;\n  const startBuyTimeInDate = (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.startBuyTime) ? new Date(Number(poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.startBuyTime) * 1000) : undefined;\n  const endBuyTimeInDate = (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.endBuyTime) ? new Date(Number(poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.endBuyTime) * 1000) : undefined;\n  /* const tierStartBuyInDate = new Date(Number(currentUserTier?.start_time) * 1000); */\n\n  /* const tierEndBuyInDate = new Date(Number(currentUserTier?.end_time) * 1000); */\n\n  const releaseTimeInDate = (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.releaseTime) ? new Date(Number(poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.releaseTime) * 1000) : undefined; // Get Currency Info\n\n  const {\n    currencyIcon,\n    currencyName\n  } = getIconCurrencyUsdt({\n    purchasableCurrency: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.purchasableCurrency,\n    networkAvailable: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.networkAvailable\n  });\n  const today = new Date();\n  const availableJoin = (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.method) === 'whitelist' && joinTimeInDate && endJoinTimeInDate ? today >= joinTimeInDate && today <= endJoinTimeInDate && currentUserTier &&\n  /* today <= tierEndBuyInDate && */\n  connectedAccount && !wrongChain && new BigNumber((currentUserTier === null || currentUserTier === void 0 ? void 0 : currentUserTier.level) || 0).gte(poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.minTier) && verifiedEmail : false;\n  const availablePurchase = startBuyTimeInDate && endBuyTimeInDate && today >= startBuyTimeInDate && today <= endBuyTimeInDate && (\n  /* today >= tierStartBuyInDate && */\n\n  /* today <= tierEndBuyInDate && */\n  poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.isDeployed) && verifiedEmail;\n  /* (poolDetails?.method === 'whitelist' ? alreadyJoinPool: true); */\n  // Get Pool Status\n\n  const poolStatus = getPoolStatus(joinTimeInDate, endJoinTimeInDate, startBuyTimeInDate, endBuyTimeInDate, releaseTimeInDate, new BigNumber(tokenSold).div((poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.amount) || 1).toFixed(), (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.type) !== 'swap', poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.method);\n  const displayCountDownTime = useCallback((method, startJoinTime, endJoinTime, startBuyTime, endBuyTime) => {\n    return getPoolCountDown(startJoinTime, endJoinTime, startBuyTime, endBuyTime, method);\n  }, [poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.method, joinTimeInDate, endJoinTimeInDate, startBuyTimeInDate, endBuyTimeInDate]);\n  const {\n    date: countDownDate,\n    display\n  } = displayCountDownTime(poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.method, joinTimeInDate, endJoinTimeInDate, startBuyTimeInDate, endBuyTimeInDate);\n\n  const shortenAddress = (address, digits = 4) => {\n    return `${address.substring(0, digits + 2)}...${address.substring(42 - digits)}`;\n  };\n\n  const userTiersAnnotationText = useMemo(() => {\n    if (!verifiedEmail) {\n      return 'Determined at whitelist closing';\n    }\n\n    if (pickedWinner && poolDetails) {\n      var _poolDetails$tokenDet;\n\n      const approximateValue = new BigNumber(userBuyLimit).dividedBy((poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.ethRate) || 0);\n      return `\n        *Individual caps: ${numberWithCommas(userBuyLimit.toString())} ${currencyName} - ${' '} \n        Estimated equivalent of ${numberWithCommas(approximateValue.toFixed())} ${poolDetails === null || poolDetails === void 0 ? void 0 : (_poolDetails$tokenDet = poolDetails.tokenDetails) === null || _poolDetails$tokenDet === void 0 ? void 0 : _poolDetails$tokenDet.symbol}\n      `;\n    }\n\n    return 'Determined at whitelist closing';\n  }, [existedWinner, userBuyLimit, poolDetails, verifiedEmail]);\n  useEffect(() => {\n    setActiveNav(HeaderType.Main);\n    if (!(poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.isDeployed)) setActiveNav(HeaderType.About);\n    if (availablePurchase) setActiveNav(HeaderType.Main);\n  }, [availablePurchase, poolDetails]); // Auto Scroll To Top When redirect from other pages\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]); // Hide main tab after end buy time\n\n  useEffect(() => {\n    if (endBuyTimeInDate && endBuyTimeInDate < new Date() && activeNav === HeaderType.Main) setActiveNav(HeaderType.About);\n  }, [endBuyTimeInDate]);\n  useEffect(() => {\n    currentUserTier && dispatch({\n      type: sotaTiersActions.USER_TIER_SUCCESS,\n      payload: currentUserTier.level\n    });\n  }, [currentUserTier]);\n  useEffect(() => {\n    const appNetwork = appChainID === ETH_CHAIN_ID ? 'eth' : 'bsc';\n    setDisableAllButton(appNetwork !== (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.networkAvailable));\n\n    if (appNetwork !== (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.networkAvailable) && poolDetails) {\n      dispatch(pushMessage(`Please switch to ${poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.networkAvailable.toLocaleUpperCase()} network to do Join pool, Approve/Buy tokens.`));\n    } else {\n      dispatch(pushMessage(''));\n    }\n  }, [appChainID, poolDetails]);\n\n  const render = () => {\n    if (loadingPoolDetail) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loader,\n        style: {\n          marginTop: 70\n        },\n        children: [/*#__PURE__*/_jsxDEV(HashLoader, {\n          loading: true,\n          color: '#3232DC'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.loaderText,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginRight: 10\n            },\n            children: \"Loading Pool Details ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this);\n    }\n\n    if ((!poolDetails || !(poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.isDisplay)) && !loadingPoolDetail) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'white',\n          textAlign: 'center',\n          fontSize: 16,\n          fontWeight: 700,\n          marginTop: 20\n        },\n        children: \"This pool does not exist. Try later! \\uD83D\\uDE42\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 14\n      }, this);\n    } else {\n      var _poolDetails$tokenDet2, _poolDetails$tokenDet3, _poolDetails$tokenDet4, _poolDetails$tokenDet6, _poolDetails$purchasa, _poolDetails$purchasa2;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: styles.poolDetailHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.poolHeaderWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.poolHeaderImage,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.banner) || poolImage,\n                alt: \"pool-image\",\n                className: styles.poolImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.poolHeaderInfo,\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: styles.poolHeaderTitle,\n                children: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: 15,\n                    textAlign: 'left'\n                  },\n                  children: \"Token ICO Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 33\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: styles.poolHeaderAddress,\n                  children: [isWidthUp('sm', props.width) && (poolDetails === null || poolDetails === void 0 ? void 0 : (_poolDetails$tokenDet2 = poolDetails.tokenDetails) === null || _poolDetails$tokenDet2 === void 0 ? void 0 : _poolDetails$tokenDet2.address), isWidthDown('xs', props.width) && shortenAddress((poolDetails === null || poolDetails === void 0 ? void 0 : (_poolDetails$tokenDet3 = poolDetails.tokenDetails) === null || _poolDetails$tokenDet3 === void 0 ? void 0 : _poolDetails$tokenDet3.address) || '', 8), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                    text: poolDetails === null || poolDetails === void 0 ? void 0 : (_poolDetails$tokenDet4 = poolDetails.tokenDetails) === null || _poolDetails$tokenDet4 === void 0 ? void 0 : _poolDetails$tokenDet4.address,\n                    onCopy: () => {\n                      setCopiedAddress(true);\n                      setTimeout(() => {\n                        setCopiedAddress(false);\n                      }, 2000);\n                    },\n                    children: !copiedAddress ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: copyImage,\n                      alt: \"copy-icon\",\n                      className: styles.poolHeaderCopy\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 42\n                    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        color: '#6398FF',\n                        marginLeft: 10\n                      },\n                      children: \"Copied\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), isWidthUp('md', props.width) && /*#__PURE__*/_jsxDEV(StatusBar, {\n                currentStatus: poolStatus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.poolType,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.poolHeaderType,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.poolHeaderTypeInner,\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.networkIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: styles.poolHeaderNetworkAvailable,\n                  children: networkAvailable\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `${styles.poolStatus} ${styles.poolStatus}--${poolStatus}`,\n              children: poolStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), ableToFetchFromBlockchain && winnersList && winnersList.total > 0 && verifiedEmail && currentUserTier && currentUserTier.level == TIER_LEVELS.DOVE && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.poolTicketWinner,\n            children: [existedWinner && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [...Array(3)].map((num, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/fire-cracker.svg\",\n                alt: \"file-cracker\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), !existedWinner && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [...Array(3)].map((num, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n                style: {\n                  paddingLeft: 5\n                },\n                src: \"/images/icons/warning.svg\",\n                alt: \"file-cracker\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 14\n              },\n              children: [existedWinner && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.LotteryWinnersMessage,\n                children: [\"Congratulations! You have won the lottery. You can buy up to \", numberWithCommas(`${userBuyLimit}`), \" \", currencyName, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this), !existedWinner && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.LotteryWinnersMessage,\n                children: \"Unfortunately, you did not win a ticket to buy this time! See you next time.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), endBuyTimeInDate && new Date() > endBuyTimeInDate && ableToFetchFromBlockchain && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.poolTicketWinner,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [...Array(3)].map((num, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/fire-cracker.svg\",\n                alt: \"file-cracker\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 14\n              },\n              children: /*#__PURE__*/_jsxDEV(PoolIsEndMessage, {\n                poolDetails: poolDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), !verifiedEmail && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.poolTicketWinner,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/images/red-warning.svg\",\n                alt: \"warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: 14\n              },\n              children: [\"Your account has not been verified. To verify your account, please click\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/account\",\n                style: {\n                  color: 'white',\n                  textDecoration: 'underline'\n                },\n                children: \"here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 17\n          }, this), // (joinTimeInDate || 0) <= today && today <= (endJoinTimeInDate || 0) &&\n          ((poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.joinTime) || 0) <= today.getTime() / 1000 && today.getTime() / 1000 <= ((poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.endJoinTime) || 0) && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [!(alreadyJoinPool || joinPoolSuccess) && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: styles.poolTicketWinner,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/images/tick.svg\",\n                  alt: \"warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: 14\n                },\n                children: \"You must click the Apply Whitelist button to join the pool whitelist.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 21\n            }, this), (alreadyJoinPool || joinPoolSuccess) && /*#__PURE__*/_jsxDEV(WhiteListUserGuideBanner, {\n              poolDetails: poolDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: styles.poolDetailInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.poolDetailTierWrapper,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.poolDetailIntro,\n              children: loadingPoolDetail ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.loader,\n                children: [/*#__PURE__*/_jsxDEV(HashLoader, {\n                  loading: true,\n                  color: '#3232DC'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: styles.loaderText,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginRight: 10\n                    },\n                    children: \"Loading Pool Details ...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 19\n              }, this) : poolDetailsMapping && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(PoolInfoTable, {\n                  poolDetailsMapping: poolDetailsMapping,\n                  poolDetails: poolDetails\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.btnGroup,\n                  children: [availableJoin && !alreadyJoinPool && !joinPoolSuccess && !disableAllButton && /*#__PURE__*/_jsxDEV(Button, {\n                    text: !alreadyJoinPool && !joinPoolSuccess ? 'Apply Whitelist' : 'Applied Whitelist ' // text={(!joinPoolSuccess) ? 'Apply Whitelist': 'Applied Whitelist '}\n                    ,\n                    backgroundColor: '#D01F36' // disabled={!availableJoin || alreadyJoinPool || joinPoolSuccess || disableAllButton}\n                    ,\n                    loading: poolJoinLoading,\n                    onClick: joinPool,\n                    style: {\n                      minWidth: 125,\n                      padding: '0 20px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    text: getEtherscanName({\n                      networkAvailable: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.networkAvailable\n                    }),\n                    backgroundColor: '#3232DC',\n                    onClick: () => {\n                      var _poolDetails$tokenDet5;\n\n                      const url = getEtherscanTransactionAddress({\n                        appChainID: appChainID,\n                        address: poolDetails === null || poolDetails === void 0 ? void 0 : (_poolDetails$tokenDet5 = poolDetails.tokenDetails) === null || _poolDetails$tokenDet5 === void 0 ? void 0 : _poolDetails$tokenDet5.address\n                      });\n                      poolDetails && window.open(url, '_blank');\n                    },\n                    disabled: !(poolDetails === null || poolDetails === void 0 ? void 0 : (_poolDetails$tokenDet6 = poolDetails.tokenDetails) === null || _poolDetails$tokenDet6 === void 0 ? void 0 : _poolDetails$tokenDet6.address)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 425,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.poolDetailTier,\n              children: [/*#__PURE__*/_jsxDEV(Tiers, {\n                hideStatistics: true,\n                showMoreInfomation: true,\n                tiersBuyLimit: (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.buyLimit) || [],\n                tokenSymbol: `${poolDetails === null || poolDetails === void 0 ? void 0 : (_poolDetails$purchasa = poolDetails.purchasableCurrency) === null || _poolDetails$purchasa === void 0 ? void 0 : _poolDetails$purchasa.toUpperCase()}`,\n                verifiedEmail: verifiedEmail,\n                userTier: (currentUserTier === null || currentUserTier === void 0 ? void 0 : currentUserTier.level) || 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles.poolDetailMaxBuy,\n                children: userTiersAnnotationText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.poolDetailProgress,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: styles.poolDetailProgressTitle,\n                  children: \"Swap Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 19\n                }, this), isWidthUp('sm', props.width) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.poolDetailProgressStat,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: styles.poolDetailProgressPercent,\n                    children: [numberWithCommas(new BigNumber(soldProgress).gt(99) ? '100' : soldProgress), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 472,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [numberWithCommas(new BigNumber(tokenSold).gt(`${poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.amount}`) ? `${poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.amount}` : tokenSold), \"\\xA0 / \", numberWithCommas(`${poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.amount}` || \"0\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 52\n                }, this), isWidthDown('xs', props.width) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.poolDetailProgressStat,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: styles.poolDetailProgressPercent,\n                    children: [parseFloat(soldProgress).toFixed(2), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [numberWithCommas(new BigNumber(tokenSold).gt(`${poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.amount}`) ? `${poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.amount}` : tokenSold), \"\\xA0 / \", numberWithCommas(`${poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.amount}` || \"0\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 54\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles.progress,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: styles.achieved,\n                    style: {\n                      width: `${new BigNumber(soldProgress).gt(100) ? '100' : soldProgress}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.poolDetailStartTime,\n                children: display ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: styles.poolDetailStartTimeTitle,\n                    children: display\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n                    startDate: countDownDate\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: '#D01F36',\n                    marginTop: 40,\n                    font: 'normal normal bold 14px/18px DM Sans'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(PoolIsEndMessage, {\n                    poolDetails: poolDetails\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.poolDetailBuy,\n            children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n              className: styles.poolDetailBuyNav,\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: styles.poolDetailLinks,\n                children: headers.map(header => {\n                  if (header === HeaderType.Main && endBuyTimeInDate && new Date() > endBuyTimeInDate) {\n                    return;\n                  }\n\n                  if (header !== HeaderType.About && header !== HeaderType.MyTier && header !== HeaderType.Participants && (!(poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.isDeployed) || endBuyTimeInDate && endBuyTimeInDate < new Date())) {\n                    return;\n                  }\n\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: `${styles.poolDetailLink} ${activeNav === header ? `${styles.poolDetailLinkActive}` : ''}`,\n                    onClick: () => setActiveNav(header),\n                    children: header\n                  }, header, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 30\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.poolDetailBuyForm,\n              children: [activeNav === HeaderType.Main && endBuyTimeInDate && new Date() <= endBuyTimeInDate && /*#__PURE__*/_jsxDEV(BuyTokenForm, {\n                disableAllButton: disableAllButton,\n                existedWinner: existedWinner,\n                alreadyJoinPool: alreadyJoinPool,\n                joinPoolSuccess: joinPoolSuccess,\n                tokenDetails: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.tokenDetails,\n                networkAvailable: (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.networkAvailable) || '',\n                rate: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.ethRate,\n                poolAddress: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.poolAddress,\n                maximumBuy: userBuyLimit,\n                minimumBuy: userBuyMinimum,\n                poolAmount: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.amount,\n                purchasableCurrency: poolDetails === null || poolDetails === void 0 ? void 0 : (_poolDetails$purchasa2 = poolDetails.purchasableCurrency) === null || _poolDetails$purchasa2 === void 0 ? void 0 : _poolDetails$purchasa2.toUpperCase(),\n                poolId: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.id,\n                joinTime: joinTimeInDate,\n                method: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.method,\n                availablePurchase: availablePurchase,\n                ableToFetchFromBlockchain: ableToFetchFromBlockchain,\n                minTier: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.minTier,\n                isDeployed: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.isDeployed,\n                startBuyTimeInDate: startBuyTimeInDate,\n                endBuyTimeInDate: endBuyTimeInDate,\n                endJoinTimeInDate: endJoinTimeInDate,\n                tokenSold: tokenSold,\n                setBuyTokenSuccess: setBuyTokenSuccess,\n                isClaimable: (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.type) === 'claimable',\n                currentUserTier: currentUserTier\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 23\n              }, this), activeNav === HeaderType.About && /*#__PURE__*/_jsxDEV(PoolAbout, {\n                website: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.website,\n                exchangeRate: poolDetailsMapping && poolDetailsMapping[PoolDetailKey.exchangeRate].display,\n                description: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 22\n              }, this), activeNav === HeaderType.Participants && /*#__PURE__*/_jsxDEV(LotteryWinners, {\n                poolId: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.id,\n                userWinLottery: existedWinner ? true : false,\n                maximumBuy: userBuyLimit,\n                purchasableCurrency: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.purchasableCurrency.toUpperCase(),\n                verifiedEmail: verifiedEmail ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 21\n              }, this), activeNav === HeaderType.MyTier && /*#__PURE__*/_jsxDEV(MyTier, {\n                tiers: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.tiersWithDetails,\n                poolDetails: poolDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 21\n              }, this), (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.type) === POOL_TYPE.CLAIMABLE && /*#__PURE__*/_jsxDEV(ClaimToken, {\n                releaseTime: (poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.releaseTime) ? releaseTimeInDate : undefined,\n                ableToFetchFromBlockchain: ableToFetchFromBlockchain,\n                poolAddress: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.poolAddress,\n                tokenDetails: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.tokenDetails,\n                buyTokenSuccess: buyTokenSuccess,\n                poolId: poolDetails === null || poolDetails === void 0 ? void 0 : poolDetails.id,\n                disableAllButton: disableAllButton,\n                poolDetails: poolDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DefaultLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.poolDetailContainer,\n      children: render()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 636,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BuyToken, \"PDrr8r/Ho5WMQhwp2O9V7PKz1O8=\", false, function () {\n  return [useDispatch, useStyles, useLocation, useParams, useTypedSelector, usePoolDetails, useAuth, useTokenSoldProgress, usePoolJoinAction, useFetch, useFetch, useFetch, useFetch, useFetch, useFetch, usePoolDetailsMapping];\n});\n\n_c = BuyToken;\nexport default withWidth()(BuyToken);\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyToken\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/BuyToken/index.tsx"],"names":["React","useCallback","useEffect","useMemo","useState","HashLoader","Link","useLocation","useParams","useDispatch","CopyToClipboard","BigNumber","Tooltip","withWidth","isWidthDown","isWidthUp","useTypedSelector","usePoolDetailsMapping","PoolDetailKey","useAuth","usePoolDetails","useTokenSoldProgress","usePoolJoinAction","useFetch","Tiers","LotteryWinners","PoolAbout","ClaimToken","MyTier","BuyTokenForm","Button","StatusBar","Countdown","DefaultLayout","ETH_CHAIN_ID","NETWORK_BSC_NAME","NETWORK_ETH_NAME","getPoolCountDown","getPoolStatus","numberWithCommas","sotaTiersActions","useStyles","pushMessage","getIconCurrencyUsdt","POOL_TYPE","TIER_LEVELS","PoolInfoTable","WhiteListUserGuideBanner","getEtherscanName","getEtherscanTransactionAddress","PoolIsEndMessage","copyImage","poolImage","iconClose","HeaderType","headers","Main","About","Participants","ETHERSCAN_BASE_URL","process","env","REACT_APP_ETHERSCAN_BASE_URL","BuyToken","props","dispatch","styles","buyTokenSuccess","setBuyTokenSuccess","copiedAddress","setCopiedAddress","activeNav","setActiveNav","disableAllButton","setDisableAllButton","pathname","id","appChainID","state","appNetwork","data","poolDetails","loading","loadingPoolDetail","isAuth","connectedAccount","wrongChain","tokenSold","soldProgress","poolAddress","amount","networkAvailable","joinPool","poolJoinLoading","joinPoolSuccess","poolId","existedWinner","undefined","method","pickedWinner","alreadyJoinPool","verifiedEmail","currentUserTier","winnersList","poolDetailsMapping","ableToFetchFromBlockchain","userBuyLimit","max_buy","userBuyMinimum","min_buy","joinTimeInDate","joinTime","Date","Number","endJoinTimeInDate","endJoinTime","startBuyTimeInDate","startBuyTime","endBuyTimeInDate","endBuyTime","releaseTimeInDate","releaseTime","currencyIcon","currencyName","purchasableCurrency","today","availableJoin","level","gte","minTier","availablePurchase","isDeployed","poolStatus","div","toFixed","type","displayCountDownTime","startJoinTime","date","countDownDate","display","shortenAddress","address","digits","substring","userTiersAnnotationText","approximateValue","dividedBy","ethRate","toString","tokenDetails","symbol","window","scrollTo","USER_TIER_SUCCESS","payload","toLocaleUpperCase","render","loader","marginTop","loaderText","marginRight","isDisplay","color","textAlign","fontSize","fontWeight","poolDetailHeader","poolHeaderWrapper","poolHeaderImage","banner","poolHeaderInfo","poolHeaderTitle","title","poolHeaderAddress","width","setTimeout","poolHeaderCopy","marginLeft","poolType","poolHeaderType","poolHeaderTypeInner","networkIcon","poolHeaderNetworkAvailable","total","DOVE","poolTicketWinner","Array","map","num","index","paddingLeft","LotteryWinnersMessage","textDecoration","getTime","poolDetailInfo","poolDetailTierWrapper","poolDetailIntro","btnGroup","minWidth","padding","url","open","poolDetailTier","buyLimit","toUpperCase","poolDetailMaxBuy","poolDetailProgress","poolDetailProgressTitle","poolDetailProgressStat","poolDetailProgressPercent","gt","parseFloat","progress","achieved","poolDetailStartTime","poolDetailStartTimeTitle","font","poolDetailBuy","poolDetailBuyNav","poolDetailLinks","header","poolDetailLink","poolDetailLinkActive","poolDetailBuyForm","website","exchangeRate","description","tiersWithDetails","CLAIMABLE","poolDetailContainer"],"mappings":"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","sourcesContent":["import React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport {HashLoader} from \"react-spinners\";\nimport {Link, useLocation, useParams} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\n//@ts-ignore\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport BigNumber from 'bignumber.js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport withWidth, {isWidthDown, isWidthUp} from '@material-ui/core/withWidth';\n\nimport {useTypedSelector} from '../../hooks/useTypedSelector';\nimport usePoolDetailsMapping, {PoolDetailKey} from './hooks/usePoolDetailsMapping';\nimport useAuth from '../../hooks/useAuth';\nimport usePoolDetails from '../../hooks/usePoolDetails';\nimport useTokenSoldProgress from './hooks/useTokenSoldProgress';\nimport usePoolJoinAction from './hooks/usePoolJoinAction';\nimport useFetch from '../../hooks/useFetch';\n\nimport Tiers from '../AccountV2/Tiers';\nimport LotteryWinners from './LotteryWinners';\nimport PoolAbout from './PoolAbout';\nimport ClaimToken from './ClaimToken';\nimport MyTier from './MyTier';\nimport BuyTokenForm from './BuyTokenForm';\nimport Button from './Button';\nimport StatusBar from './StatusBar';\nimport Countdown from '../../components/Base/Countdown';\nimport DefaultLayout from '../../components/Layout/DefaultLayout';\nimport {ETH_CHAIN_ID, NETWORK_BSC_NAME, NETWORK_ETH_NAME} from '../../constants/network';\nimport {getPoolCountDown} from '../../utils/getPoolCountDown';\nimport {getPoolStatus} from '../../utils/getPoolStatus';\nimport {numberWithCommas} from '../../utils/formatNumber';\n\nimport {sotaTiersActions} from '../../store/constants/sota-tiers';\n\nimport useStyles from './style';\nimport {pushMessage} from '../../store/actions/message';\nimport {getIconCurrencyUsdt} from \"../../utils/usdt\";\nimport {POOL_TYPE, TIER_LEVELS} from \"../../constants\";\nimport PoolInfoTable from \"./PoolInfoTable/PoolInfoTable\";\nimport WhiteListUserGuideBanner from \"./WhiteListUserGuideBanner/WhiteListUserGuideBanner\";\nimport {getEtherscanName, getEtherscanTransactionAddress} from \"../../utils/network\";\nimport PoolIsEndMessage from \"./PoolIsEndMessage/PoolIsEndMessage\";\n\nconst copyImage = \"/images/copy.svg\";\nconst poolImage = \"/images/pool_circle.svg\";\nconst iconClose = \"/images/icons/close.svg\";\n\nenum HeaderType {\n  Main = \"Main\",\n  About = \"About the project\",\n  Participants = \"Winner\",\n  MyTier = \"My Tier\"\n}\n\nconst headers = [HeaderType.Main, HeaderType.MyTier, HeaderType.About, HeaderType.Participants];\n\nconst ETHERSCAN_BASE_URL = process.env.REACT_APP_ETHERSCAN_BASE_URL;\n\nconst BuyToken: React.FC<any> = (props: any) => {\n  const dispatch = useDispatch();\n  const styles = useStyles();\n\n  const [buyTokenSuccess, setBuyTokenSuccess] = useState<boolean>(false);\n\n  const [copiedAddress, setCopiedAddress] = useState(false);\n  const [activeNav, setActiveNav] = useState(HeaderType.About);\n  const [disableAllButton, setDisableAllButton] = useState<boolean>(false);\n\n  const { pathname } = useLocation();\n  const { id } = useParams() as any;\n  /* const userTier = useTypedSelector(state => state.userTier).data; */\n  const { appChainID } = useTypedSelector(state => state.appNetwork).data;\n  const { poolDetails, loading: loadingPoolDetail } = usePoolDetails(id);\n  const { isAuth, connectedAccount, wrongChain } = useAuth();\n  // Fetch token sold, total tokens sold\n  const { tokenSold, soldProgress } = useTokenSoldProgress(\n      poolDetails?.poolAddress,\n      poolDetails?.amount,\n      poolDetails?.networkAvailable,\n      poolDetails,\n  );\n  const { joinPool, poolJoinLoading, joinPoolSuccess } = usePoolJoinAction({ poolId: poolDetails?.id });\n  const { data: existedWinner } = useFetch<Array<any>>(\n    poolDetails ? `/pool/${poolDetails?.id}/check-exist-winner?wallet_address=${connectedAccount}`: undefined,\n    poolDetails?.method !== \"whitelist\"\n  );\n\n  const { data: pickedWinner } = useFetch<Array<any>>(\n    poolDetails ? `/pool/${poolDetails?.id}/check-picked-winner`: undefined,\n    poolDetails?.method !== \"whitelist\"\n  );\n\n  const { data: alreadyJoinPool } = useFetch<boolean>(\n    poolDetails && connectedAccount ?\n    `/user/check-join-campaign/${poolDetails?.id}?wallet_address=${connectedAccount}`\n    : undefined\n  );\n  const { data: verifiedEmail = true } = useFetch<boolean>(\n    poolDetails && connectedAccount && isAuth ?\n    `/user/check-wallet-address?wallet_address=${connectedAccount}`\n    : undefined\n  );\n  const { data: currentUserTier } = useFetch<any>(\n    id && connectedAccount ?\n    `pool/${id}/user/${connectedAccount}/current-tier`\n    : undefined,\n  );\n  const { data: winnersList } = useFetch<any>(`/user/winner-list/${id}?page=1&limit=10&`);\n\n  const poolDetailsMapping = usePoolDetailsMapping(poolDetails);\n\n  // Use for check whether pool exist in selected network or not\n  const networkAvailable = poolDetails?.networkAvailable === 'eth'? NETWORK_ETH_NAME: NETWORK_BSC_NAME;\n  const appNetwork = appChainID === ETH_CHAIN_ID ? 'eth': 'bsc';\n  const ableToFetchFromBlockchain = appNetwork === poolDetails?.networkAvailable && !wrongChain;\n\n  const userBuyLimit = currentUserTier?.max_buy || 0;\n  const userBuyMinimum = currentUserTier?.min_buy || 0;\n\n  // With Whitelist situation, Enable when join time < current < end join time\n  // With FCFS, always disable join button\n  const joinTimeInDate = poolDetails?.joinTime ? new Date(Number(poolDetails?.joinTime) * 1000): undefined;\n  const endJoinTimeInDate = poolDetails?.endJoinTime ? new Date(Number(poolDetails?.endJoinTime) * 1000): undefined;\n  const startBuyTimeInDate = poolDetails?.startBuyTime ? new Date(Number(poolDetails?.startBuyTime) * 1000): undefined;\n  const endBuyTimeInDate = poolDetails?.endBuyTime ? new Date(Number(poolDetails?.endBuyTime) * 1000): undefined;\n  /* const tierStartBuyInDate = new Date(Number(currentUserTier?.start_time) * 1000); */\n  /* const tierEndBuyInDate = new Date(Number(currentUserTier?.end_time) * 1000); */\n  const releaseTimeInDate = poolDetails?.releaseTime ? new Date(Number(poolDetails?.releaseTime) * 1000): undefined;\n\n  // Get Currency Info\n  const { currencyIcon, currencyName } = getIconCurrencyUsdt({\n    purchasableCurrency: poolDetails?.purchasableCurrency,\n    networkAvailable: poolDetails?.networkAvailable,\n  });\n\n  const today = new Date();\n  const availableJoin = poolDetails?.method === 'whitelist' && joinTimeInDate && endJoinTimeInDate\n    ? (\n      today >= joinTimeInDate &&\n      today <= endJoinTimeInDate &&\n      currentUserTier &&\n      /* today <= tierEndBuyInDate && */\n      connectedAccount &&\n      !wrongChain &&\n      new BigNumber(currentUserTier?.level || 0).gte(poolDetails?.minTier)\n      && verifiedEmail\n    )\n    : false;\n\n  const availablePurchase = startBuyTimeInDate && endBuyTimeInDate &&\n    today >= startBuyTimeInDate &&\n    today <= endBuyTimeInDate &&\n    /* today >= tierStartBuyInDate && */\n    /* today <= tierEndBuyInDate && */\n    poolDetails?.isDeployed &&\n    verifiedEmail;\n    /* (poolDetails?.method === 'whitelist' ? alreadyJoinPool: true); */\n\n  // Get Pool Status\n  const poolStatus = getPoolStatus(\n    joinTimeInDate,\n    endJoinTimeInDate,\n    startBuyTimeInDate,\n    endBuyTimeInDate,\n    releaseTimeInDate,\n    new BigNumber(tokenSold).div(poolDetails?.amount || 1).toFixed(),\n    poolDetails?.type !== 'swap',\n    poolDetails?.method\n  );\n\n  const displayCountDownTime = useCallback((\n    method: string | undefined,\n    startJoinTime: Date | undefined,\n    endJoinTime: Date| undefined,\n    startBuyTime: Date | undefined,\n    endBuyTime: Date | undefined\n  ) => {\n    return getPoolCountDown(startJoinTime, endJoinTime, startBuyTime, endBuyTime, method);\n  }, [poolDetails?.method, joinTimeInDate, endJoinTimeInDate, startBuyTimeInDate, endBuyTimeInDate]);\n\n  const { date: countDownDate, display } = displayCountDownTime(poolDetails?.method, joinTimeInDate, endJoinTimeInDate, startBuyTimeInDate, endBuyTimeInDate)\n\n  const shortenAddress = (address: string, digits: number = 4) => {\n    return `${address.substring(0, digits + 2)}...${address.substring(42 - digits)}`\n  }\n\n  const userTiersAnnotationText = useMemo(() => {\n    if (!verifiedEmail) {\n      return 'Determined at whitelist closing';\n    }\n\n    if (pickedWinner && poolDetails) {\n      const approximateValue = new BigNumber(userBuyLimit).dividedBy(poolDetails?.ethRate || 0);\n      return `\n        *Individual caps: ${numberWithCommas(userBuyLimit.toString())} ${currencyName} - ${' '} \n        Estimated equivalent of ${numberWithCommas(approximateValue.toFixed())} ${poolDetails?.tokenDetails?.symbol}\n      `;\n    }\n\n    return 'Determined at whitelist closing';\n  }, [existedWinner, userBuyLimit, poolDetails, verifiedEmail]);\n\n  useEffect(() => {\n    setActiveNav(HeaderType.Main);\n    if (!poolDetails?.isDeployed) setActiveNav(HeaderType.About);\n    if (availablePurchase) setActiveNav(HeaderType.Main);\n  }, [availablePurchase, poolDetails]);\n\n  // Auto Scroll To Top When redirect from other pages\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  // Hide main tab after end buy time\n  useEffect(() => {\n    if (\n      endBuyTimeInDate && endBuyTimeInDate < new Date() &&\n      activeNav === HeaderType.Main\n    ) setActiveNav(HeaderType.About);\n  }, [endBuyTimeInDate]);\n\n  useEffect(() => {\n    currentUserTier && dispatch({\n      type: sotaTiersActions.USER_TIER_SUCCESS,\n      payload: currentUserTier.level\n    })\n  }, [currentUserTier]);\n\n  useEffect(() => {\n    const appNetwork = appChainID === ETH_CHAIN_ID ? 'eth': 'bsc';\n    setDisableAllButton(appNetwork !== poolDetails?.networkAvailable);\n    if(appNetwork !== poolDetails?.networkAvailable && poolDetails) {\n      dispatch(pushMessage(`Please switch to ${poolDetails?.networkAvailable.toLocaleUpperCase()} network to do Join pool, Approve/Buy tokens.`))\n    } else {\n      dispatch(pushMessage(''));\n    }\n  }, [appChainID, poolDetails])\n\n  const render = () => {\n    if (loadingPoolDetail)  {\n      return (\n        <div className={styles.loader} style={{ marginTop: 70 }}>\n          <HashLoader loading={true} color={'#3232DC'} />\n          <p className={styles.loaderText}>\n            <span style={{ marginRight: 10 }}>Loading Pool Details ...</span>\n          </p>\n        </div>\n      )\n    }\n\n    if ((!poolDetails || !poolDetails?.isDisplay) && !loadingPoolDetail) {\n      return <p style={{\n        color: 'white',\n        textAlign: 'center',\n        fontSize: 16,\n        fontWeight: 700,\n        marginTop: 20\n      }}>\n        This pool does not exist. Try later! 🙂\n      </p>\n    } else {\n      return (\n        <>\n          <header className={styles.poolDetailHeader}>\n            <div className={styles.poolHeaderWrapper}>\n              <div className={styles.poolHeaderImage}>\n                <img src={poolDetails?.banner || poolImage} alt=\"pool-image\" className={styles.poolImage}/>\n              </div>\n              <div className={styles.poolHeaderInfo}>\n                <h2 className={styles.poolHeaderTitle}>\n                  {poolDetails?.title}\n                </h2>\n                <Tooltip title={<p style={{ fontSize: 15, textAlign: 'left' }}>Token ICO Address</p>}>\n                    <p className={styles.poolHeaderAddress}>\n                      {isWidthUp('sm', props.width) && poolDetails?.tokenDetails?.address}\n                      {isWidthDown('xs', props.width) && shortenAddress(poolDetails?.tokenDetails?.address || '', 8)}\n\n                      <CopyToClipboard text={poolDetails?.tokenDetails?.address}\n                        onCopy={() => {\n                        setCopiedAddress(true);\n                        setTimeout(() => {\n                          setCopiedAddress(false);\n                          }, 2000);\n                        }}\n                      >\n                      {\n                        !copiedAddress ? <img src={copyImage} alt=\"copy-icon\" className={styles.poolHeaderCopy} />\n                        : <p style={{ color: '#6398FF', marginLeft: 10 }}>Copied</p>\n                      }\n                      </CopyToClipboard>\n                    </p>\n                </Tooltip>\n                {isWidthUp('md', props.width) && <StatusBar currentStatus={poolStatus} />}\n              </div>\n            </div>\n            <div className={styles.poolType}>\n              <span className={styles.poolHeaderType}>\n                <div className={styles.poolHeaderTypeInner}>\n                  <img src={poolDetails?.networkIcon} />\n                  <strong className={styles.poolHeaderNetworkAvailable}>{networkAvailable}</strong>\n                </div>\n              </span>\n              <span className={`${styles.poolStatus} ${styles.poolStatus}--${poolStatus}`}>\n                {poolStatus}\n              </span>\n            </div>\n            {ableToFetchFromBlockchain && (winnersList && winnersList.total > 0) && verifiedEmail &&\n            (currentUserTier && currentUserTier.level == TIER_LEVELS.DOVE) &&\n              <p className={styles.poolTicketWinner}>\n                {existedWinner &&\n                <div>\n                  {\n                    [...Array(3)].map((num, index) => (\n                      <img src=\"/images/fire-cracker.svg\" alt=\"file-cracker\" key={index} />\n                    ))\n                  }\n                </div>\n                }\n                {!existedWinner &&\n                <div>\n                  {\n                    [...Array(3)].map((num, index) => (\n                      <img style={{ paddingLeft: 5 }} src=\"/images/icons/warning.svg\" alt=\"file-cracker\" key={index} />\n                    ))\n                  }\n                </div>\n                }\n                <span style={{ marginLeft: 14 }}>\n                  {/*Congratulations! You have won the lottery!*/}\n                  {existedWinner &&\n                    <p className={styles.LotteryWinnersMessage}>\n                      Congratulations! You have won the lottery. You can buy up to {numberWithCommas(`${userBuyLimit}`)} {currencyName}.\n                    </p>\n                  }\n                  {!existedWinner &&\n                    <p className={styles.LotteryWinnersMessage}>\n                      Unfortunately, you did not win a ticket to buy this time! See you next time.\n                    </p>\n                  }\n                </span>\n              </p>\n            }\n            {endBuyTimeInDate && new Date() > endBuyTimeInDate && ableToFetchFromBlockchain &&\n              <p className={styles.poolTicketWinner}>\n                <div>\n                  {\n                    [...Array(3)].map((num, index) => (\n                      <img src=\"/images/fire-cracker.svg\" alt=\"file-cracker\" key={index} />\n                    ))\n                  }\n                </div>\n                <span style={{ marginLeft: 14 }}>\n                  <PoolIsEndMessage\n                    poolDetails={poolDetails}\n                  />\n                </span>\n              </p>\n            }\n            {\n              !verifiedEmail && (\n                <p className={styles.poolTicketWinner}>\n                  <div>\n                    <img src=\"/images/red-warning.svg\" alt=\"warning\" />\n                  </div>\n                  <span style={{ marginLeft: 14 }}>\n                    Your account has not been verified. To verify your account, please click&nbsp;\n                    <Link\n                      to=\"/account\"\n                      style={{ color: 'white', textDecoration: 'underline' }}\n                    >\n                      here\n                    </Link>.\n                  </span>\n                </p>\n              )\n            }\n            {\n              // (joinTimeInDate || 0) <= today && today <= (endJoinTimeInDate || 0) &&\n              (poolDetails?.joinTime || 0) <= (today.getTime() / 1000) && (today.getTime() / 1000) <= (poolDetails?.endJoinTime || 0) &&\n\n              <>\n                {!(alreadyJoinPool || joinPoolSuccess) &&\n                  (\n                    <p className={styles.poolTicketWinner}>\n                      <div>\n                        <img src=\"/images/tick.svg\" alt=\"warning\" />\n                      </div>\n                      <span style={{ marginLeft: 14 }}>\n                        You must click the Apply Whitelist button to join the pool whitelist.\n                      </span>\n                    </p>\n                  )\n                }\n                {\n                (alreadyJoinPool || joinPoolSuccess) &&\n                  (\n                    <WhiteListUserGuideBanner\n                      poolDetails={poolDetails}\n                    />\n                  )\n                }\n              </>\n            }\n          </header>\n          <main className={styles.poolDetailInfo}>\n            <div className={styles.poolDetailTierWrapper}>\n              <div className={styles.poolDetailIntro}>\n              {\n                (loadingPoolDetail) ? (\n                  <div className={styles.loader}>\n                    <HashLoader loading={true} color={'#3232DC'} />\n                    <p className={styles.loaderText}>\n                      <span style={{ marginRight: 10 }}>Loading Pool Details ...</span>\n                    </p>\n                  </div>\n                ):  poolDetailsMapping &&\n                (\n                  <>\n                    <PoolInfoTable\n                      poolDetailsMapping={poolDetailsMapping}\n                      poolDetails={poolDetails}\n                    />\n\n                    <div className={styles.btnGroup}>\n                      {\n                        (availableJoin && !alreadyJoinPool && !joinPoolSuccess && !disableAllButton) &&\n                        <Button\n                          text={(!alreadyJoinPool && !joinPoolSuccess) ? 'Apply Whitelist': 'Applied Whitelist '}\n                          // text={(!joinPoolSuccess) ? 'Apply Whitelist': 'Applied Whitelist '}\n                          backgroundColor={'#D01F36'}\n                          // disabled={!availableJoin || alreadyJoinPool || joinPoolSuccess || disableAllButton}\n                          loading={poolJoinLoading}\n                          onClick={joinPool}\n                          style={{\n                            minWidth: 125,\n                            padding: '0 20px',\n                          }}\n                        />\n                      }\n\n                      <Button\n                        text={getEtherscanName({ networkAvailable: poolDetails?.networkAvailable })}\n                        backgroundColor={'#3232DC'}\n                        onClick={() => {\n                          const url = getEtherscanTransactionAddress({ appChainID: appChainID, address: poolDetails?.tokenDetails?.address });\n                          poolDetails && window.open(url as string, '_blank')\n                        }}\n                        disabled={!poolDetails?.tokenDetails?.address}\n                      />\n                    </div>\n                  </>\n                )\n              }\n              </div>\n              <div className={styles.poolDetailTier}>\n                <Tiers\n                  hideStatistics\n                  showMoreInfomation={true}\n                  tiersBuyLimit={poolDetails?.buyLimit || [] }\n                  tokenSymbol={`${poolDetails?.purchasableCurrency?.toUpperCase()}`}\n                  verifiedEmail={verifiedEmail}\n                  userTier={currentUserTier?.level || 0}\n                />\n                <p className={styles.poolDetailMaxBuy}>\n                  {/* *Max bought: {numberWithCommas(userBuyLimit.toString())} {poolDetails?.purchasableCurrency?.toUpperCase()} */}\n                  {userTiersAnnotationText}\n                </p>\n                <div className={styles.poolDetailProgress}>\n                  <p className={styles.poolDetailProgressTitle}>Swap Progress</p>\n                  {isWidthUp('sm', props.width) && <div className={styles.poolDetailProgressStat}>\n                    <span className={styles.poolDetailProgressPercent}>\n                      {numberWithCommas(new BigNumber(soldProgress).gt(99) ? '100': soldProgress)}%\n                    </span>\n                    <span>\n                      {\n                        numberWithCommas(new BigNumber(tokenSold).gt(`${poolDetails?.amount}`) ? `${poolDetails?.amount}`: tokenSold)}&nbsp;\n                        / {numberWithCommas(`${poolDetails?.amount}` || \"0\")\n                      }\n                    </span>\n                  </div>}\n                  {isWidthDown('xs', props.width) && <div className={styles.poolDetailProgressStat}>\n                    <span className={styles.poolDetailProgressPercent}>\n                      {parseFloat(soldProgress).toFixed(2)}%\n                    </span>\n                    <span>\n                      {\n                        numberWithCommas(new BigNumber(tokenSold).gt(`${poolDetails?.amount}`) ? `${poolDetails?.amount}`: tokenSold)}&nbsp;\n                        / {numberWithCommas(`${poolDetails?.amount}` || \"0\")\n                      }\n                    </span>\n                  </div>}\n                  <div className={styles.progress}>\n                    <div className={styles.achieved} style={{ width: `${new BigNumber(soldProgress).gt(100) ? '100': soldProgress}%` }}></div>\n                  </div>\n                </div>\n                <div className={styles.poolDetailStartTime}>\n                  {\n                    display ? (\n                      <>\n                        <span className={styles.poolDetailStartTimeTitle}>{display}</span>\n                        <Countdown startDate={countDownDate} />\n                      </>\n                    ): (\n                      <p\n                        style={{\n                          color: '#D01F36',\n                          marginTop: 40,\n                          font: 'normal normal bold 14px/18px DM Sans'\n                        }}>\n                        <PoolIsEndMessage\n                          poolDetails={poolDetails}\n                        />\n                      </p>\n                    )\n                  }\n                </div>\n              </div>\n            </div>\n            <div className={styles.poolDetailBuy}>\n              <nav className={styles.poolDetailBuyNav}>\n                <ul className={styles.poolDetailLinks}>\n                  {\n                    headers.map((header) => {\n                      if (header === HeaderType.Main\n                        && endBuyTimeInDate && new Date() > endBuyTimeInDate\n                      ) {\n                        return;\n                      }\n\n                      if (\n                        header !== HeaderType.About &&\n                        header !== HeaderType.MyTier &&\n                        header !== HeaderType.Participants &&\n                        (!poolDetails?.isDeployed || endBuyTimeInDate && endBuyTimeInDate < new Date())\n                      ) {\n                        return;\n                      }\n\n                      return <li\n                        className={`${styles.poolDetailLink} ${activeNav === header ? `${styles.poolDetailLinkActive}`: ''}`}\n                        onClick={() => setActiveNav(header)}\n                        key={header}\n                      >\n                        {header}\n                      </li>\n                    })\n                  }\n                </ul>\n              </nav>\n              <div className={styles.poolDetailBuyForm}>\n                {\n                  activeNav === HeaderType.Main\n                  && endBuyTimeInDate && new Date() <= endBuyTimeInDate\n                  && (\n                      <BuyTokenForm\n                        disableAllButton={disableAllButton}\n                        existedWinner={existedWinner}\n                        alreadyJoinPool={alreadyJoinPool}\n                        joinPoolSuccess={joinPoolSuccess}\n                        tokenDetails={poolDetails?.tokenDetails}\n                        networkAvailable={poolDetails?.networkAvailable || ''}\n                        rate={poolDetails?.ethRate}\n                        poolAddress={poolDetails?.poolAddress}\n                        maximumBuy={userBuyLimit}\n                        minimumBuy={userBuyMinimum}\n                        poolAmount={poolDetails?.amount}\n                        purchasableCurrency={poolDetails?.purchasableCurrency?.toUpperCase()}\n                        poolId={poolDetails?.id}\n                        joinTime={joinTimeInDate}\n                        method={poolDetails?.method}\n                        availablePurchase={availablePurchase}\n                        ableToFetchFromBlockchain={ableToFetchFromBlockchain}\n                        minTier={poolDetails?.minTier}\n                        isDeployed={poolDetails?.isDeployed}\n                        startBuyTimeInDate={startBuyTimeInDate}\n                        endBuyTimeInDate={endBuyTimeInDate}\n                        endJoinTimeInDate={endJoinTimeInDate}\n                        tokenSold={tokenSold}\n                        setBuyTokenSuccess={setBuyTokenSuccess}\n                        isClaimable={poolDetails?.type === 'claimable'}\n                        currentUserTier={currentUserTier}\n                      />\n                   )\n                }\n                {\n                  activeNav === HeaderType.About && (\n                     <PoolAbout\n                       website={poolDetails?.website}\n                       exchangeRate={poolDetailsMapping && poolDetailsMapping[PoolDetailKey.exchangeRate].display}\n                       description={poolDetails?.description}\n                     />\n                  )\n                }\n                {\n                  activeNav === HeaderType.Participants && (\n                    <LotteryWinners\n                      poolId={poolDetails?.id}\n                      userWinLottery={existedWinner ? true: false}\n                      maximumBuy={userBuyLimit}\n                      purchasableCurrency={poolDetails?.purchasableCurrency.toUpperCase()}\n                      verifiedEmail={verifiedEmail ? true: false}\n                    />\n                   )\n                }\n                {\n                  activeNav === HeaderType.MyTier &&\n                    <MyTier\n                      tiers={poolDetails?.tiersWithDetails}\n                      poolDetails={poolDetails}\n                    />\n                }\n                {\n                  poolDetails?.type === POOL_TYPE.CLAIMABLE && (\n                    <ClaimToken\n                      releaseTime={poolDetails?.releaseTime ? releaseTimeInDate : undefined}\n                      ableToFetchFromBlockchain={ableToFetchFromBlockchain}\n                      poolAddress={poolDetails?.poolAddress}\n                      tokenDetails={poolDetails?.tokenDetails}\n                      buyTokenSuccess={buyTokenSuccess}\n                      poolId={poolDetails?.id}\n                      disableAllButton={disableAllButton}\n                      poolDetails={poolDetails}\n                    />\n                 )\n                }\n              </div>\n            </div>\n          </main>\n        </>\n      )\n    }\n  }\n\n  return (\n    <DefaultLayout>\n      <div className={styles.poolDetailContainer}>\n        {render()}\n     </div>\n    </DefaultLayout>\n  )\n}\n\nexport default withWidth()(BuyToken);\n"]},"metadata":{},"sourceType":"module"}