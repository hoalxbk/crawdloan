{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/AccountV2/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getBalance } from '../../store/actions/balance';\nimport { getUserTier, getRates } from '../../store/actions/sota-tiers';\nimport { getAllowance } from '../../store/actions/sota-token';\nimport Tiers from './Tiers';\nimport DefaultLayout from '../../components/Layout/DefaultLayout';\nimport AccountInformation from './AccountInformation';\nimport ManageTier from './ManageTier';\nimport useStyles from './style';\nimport useAuth from '../../hooks/useAuth';\nimport useTokenDetails from '../../hooks/useTokenDetails';\nimport useFetch from '../../hooks/useFetch';\nimport TierInfomation from './TierInfomation';\nimport { CONVERSION_RATE, USER_STATUS } from '../../constants';\nimport useUserTier from '../../hooks/useUserTier';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOKEN_ADDRESS = process.env.REACT_APP_PKF || '';\nconst TOKEN_UNI_ADDRESS = process.env.REACT_APP_UNI_LP || '';\nconst TOKEN_MANTRA_ADDRESS = process.env.REACT_APP_MANTRA_LP || '';\nconst iconWarning = \"/images/icons/warning.svg\";\nconst iconClose = \"/images/icons/close.svg\";\n\nconst AccountV2 = props => {\n  _s();\n\n  var _data$user;\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    data: balance = {}\n  } = useSelector(state => state.balance);\n  const {\n    data: userInfo = {}\n  } = useSelector(state => state.userInfo);\n  const {\n    isAuth,\n    connectedAccount,\n    wrongChain\n  } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const {\n    tokenDetails: tokenPKFDetails\n  } = useTokenDetails(TOKEN_ADDRESS, 'eth');\n  const {\n    tokenDetails: tokenUniLPDetails\n  } = useTokenDetails(TOKEN_UNI_ADDRESS, 'eth');\n  const {\n    tokenDetails: tokenMantraLPDetails\n  } = useTokenDetails(TOKEN_MANTRA_ADDRESS, 'eth');\n  const {\n    data = {},\n    loading,\n    error\n  } = useFetch(`/user/profile?wallet_address=${connectedAccount}`);\n  const [emailVerified, setEmailVeryfied] = useState(0);\n  const [email, setEmail] = useState('');\n  const [isKYC, setIsKYC] = useState(false);\n  const [showAlertVerifyEmail, setShowAlertVerifyEmail] = useState(true);\n  const [listTokenDetails, setListTokenDetails] = useState([]);\n  const {\n    data: appChainID\n  } = useSelector(state => state.appNetwork);\n  const [rates, setRates] = useState([]);\n  const {\n    currentTier,\n    totalStaked,\n    totalUnstaked,\n    total\n  } = useUserTier(connectedAccount || '', 'eth');\n  useEffect(() => {\n    if (isAuth && connectedAccount && !wrongChain) {\n      dispatch(getBalance(connectedAccount));\n      dispatch(getUserTier(connectedAccount));\n      dispatch(getAllowance(connectedAccount));\n    }\n  }, [isAuth, wrongChain, connectedAccount]);\n  useEffect(() => {\n    setEmail('');\n    setEmailVeryfied(USER_STATUS.UNVERIFIED);\n    setIsKYC(false);\n  }, [connectedAccount]);\n  useEffect(() => {\n    setListTokenDetails([tokenPKFDetails, tokenUniLPDetails, tokenMantraLPDetails]);\n  }, [tokenPKFDetails, tokenUniLPDetails, tokenMantraLPDetails]);\n  useEffect(() => {\n    if (data && data.user && data.user) {\n      setEmail(data.user.email);\n      setEmailVeryfied(data.user.status);\n      setIsKYC(data.user.is_kyc == 1 ? true : false);\n    } else {\n      setEmail('');\n      setEmailVeryfied(USER_STATUS.UNVERIFIED);\n      setIsKYC(false);\n    }\n  }, [data]);\n  useEffect(() => {\n    dispatch(getRates(CONVERSION_RATE));\n  }, [appChainID]);\n  return /*#__PURE__*/_jsxDEV(DefaultLayout, {\n    children: [emailVerified == USER_STATUS.UNVERIFIED && !loading && showAlertVerifyEmail && connectedAccount && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.alertVerifyEmail,\n      children: [\"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconWarning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconClose,\n        className: \"btn-close\",\n        onClick: () => setShowAlertVerifyEmail(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\", !email && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Your account has not been verified. To verify your account, please click on Verify Email button.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 20\n      }, this), email && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Please go to the mail to verify your account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 107\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.accountContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.mainContent,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.leftPanel,\n          children: [/*#__PURE__*/_jsxDEV(AccountInformation, {\n            classNamePrefix: \"account-infomation\",\n            balance: balance,\n            userInfo: userInfo,\n            tokenPKFDetails: tokenPKFDetails,\n            email: email,\n            emailVerified: emailVerified,\n            setEmail: setEmail,\n            setEmailVeryfied: setEmailVeryfied,\n            isKYC: isKYC,\n            kycStatus: data === null || data === void 0 ? void 0 : (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.is_kyc,\n            userTier: currentTier\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tiers, {\n            showMoreInfomation: false,\n            tokenSymbol: tokenPKFDetails === null || tokenPKFDetails === void 0 ? void 0 : tokenPKFDetails.symbol,\n            userTier: currentTier,\n            total: total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TierInfomation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.rightPanel,\n          children: /*#__PURE__*/_jsxDEV(ManageTier, {\n            listTokenDetails: listTokenDetails,\n            emailVerified: emailVerified,\n            totalUnstaked: totalUnstaked,\n            total: total\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountV2, \"7cHaX4tx12Top/XMQOomvc451Jo=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useAuth, useTokenDetails, useTokenDetails, useTokenDetails, useFetch, useSelector, useUserTier];\n});\n\n_c = AccountV2;\nexport default _c2 = withRouter(AccountV2);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AccountV2\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/AccountV2/index.tsx"],"names":["useEffect","useState","useSelector","useDispatch","withRouter","getBalance","getUserTier","getRates","getAllowance","Tiers","DefaultLayout","AccountInformation","ManageTier","useStyles","useAuth","useTokenDetails","useFetch","TierInfomation","CONVERSION_RATE","USER_STATUS","useUserTier","TOKEN_ADDRESS","process","env","REACT_APP_PKF","TOKEN_UNI_ADDRESS","REACT_APP_UNI_LP","TOKEN_MANTRA_ADDRESS","REACT_APP_MANTRA_LP","iconWarning","iconClose","AccountV2","props","classes","dispatch","data","balance","state","userInfo","isAuth","connectedAccount","wrongChain","isLoading","setIsLoading","tokenDetails","tokenPKFDetails","tokenUniLPDetails","tokenMantraLPDetails","loading","error","emailVerified","setEmailVeryfied","email","setEmail","isKYC","setIsKYC","showAlertVerifyEmail","setShowAlertVerifyEmail","listTokenDetails","setListTokenDetails","appChainID","appNetwork","rates","setRates","currentTier","totalStaked","totalUnstaked","total","UNVERIFIED","user","status","is_kyc","alertVerifyEmail","accountContainer","mainContent","leftPanel","symbol","rightPanel"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport _ from 'lodash';\nimport { getBalance } from '../../store/actions/balance';\nimport { getTiers, getUserTier, getUserInfo, getRates } from '../../store/actions/sota-tiers';\nimport { getAllowance } from '../../store/actions/sota-token';\nimport Tiers from './Tiers';\nimport DefaultLayout from '../../components/Layout/DefaultLayout';\nimport AccountInformation from './AccountInformation';\nimport ManageTier from './ManageTier';\nimport useStyles from './style';\nimport useAuth from '../../hooks/useAuth';\nimport useTokenDetails from '../../hooks/useTokenDetails';\nimport useFetch from '../../hooks/useFetch';\nimport TierInfomation from './TierInfomation';\nimport { CONVERSION_RATE, USER_STATUS } from '../../constants';\nimport RedKite from '../../abi/RedKiteTiers.json';\nimport { getContractInstance, SmartContractMethod } from '../../services/web3';\nimport BigNumber from 'bignumber.js'\nimport useUserTier from '../../hooks/useUserTier';\n\nconst TOKEN_ADDRESS = process.env.REACT_APP_PKF || '';\nconst TOKEN_UNI_ADDRESS = process.env.REACT_APP_UNI_LP || '';\nconst TOKEN_MANTRA_ADDRESS = process.env.REACT_APP_MANTRA_LP || '';\n\nconst iconWarning = \"/images/icons/warning.svg\";\nconst iconClose = \"/images/icons/close.svg\";\n\nconst AccountV2 = (props: any) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const { data: balance = {} } = useSelector((state: any) => state.balance);\n  const { data: userInfo = {} } = useSelector((state: any) => state.userInfo);\n  const { isAuth, connectedAccount, wrongChain } = useAuth();\n  const [isLoading, setIsLoading] = useState(true);\n  const { tokenDetails: tokenPKFDetails } = useTokenDetails(TOKEN_ADDRESS, 'eth');\n  const { tokenDetails: tokenUniLPDetails } = useTokenDetails(TOKEN_UNI_ADDRESS, 'eth');\n  const { tokenDetails: tokenMantraLPDetails } = useTokenDetails(TOKEN_MANTRA_ADDRESS, 'eth');\n  const { data: data = {}, loading, error } = useFetch<any>(`/user/profile?wallet_address=${connectedAccount}`);\n  const [emailVerified, setEmailVeryfied] = useState(0);\n  const [email, setEmail] = useState<string>('');\n  const [isKYC, setIsKYC] = useState(false);\n  const [showAlertVerifyEmail, setShowAlertVerifyEmail] = useState(true);\n  const [listTokenDetails, setListTokenDetails] = useState([]) as any;\n  const { data: appChainID } = useSelector((state: any) => state.appNetwork)\n  const [rates, setRates] = useState([]) as any;\n  const { currentTier, totalStaked, totalUnstaked, total } = useUserTier(connectedAccount || '', 'eth')\n\n  useEffect(() => {\n    if (isAuth && connectedAccount && !wrongChain) {\n      dispatch(getBalance(connectedAccount));\n      dispatch(getUserTier(connectedAccount));\n      dispatch(getAllowance(connectedAccount));\n    }\n  }, [isAuth, wrongChain, connectedAccount]);\n\n  useEffect(() => {\n    setEmail('')\n    setEmailVeryfied(USER_STATUS.UNVERIFIED)\n    setIsKYC(false)\n  }, [connectedAccount]);\n\n  useEffect(() => {\n    setListTokenDetails([tokenPKFDetails, tokenUniLPDetails, tokenMantraLPDetails]);\n  }, [tokenPKFDetails, tokenUniLPDetails, tokenMantraLPDetails]);\n\n  useEffect(() => {\n    if(data && data.user && data.user) {\n      setEmail(data.user.email)\n      setEmailVeryfied(data.user.status)\n      setIsKYC(data.user.is_kyc == 1 ? true : false)\n    } else {\n      setEmail('')\n      setEmailVeryfied(USER_STATUS.UNVERIFIED)\n      setIsKYC(false)\n    }\n  }, [data]);\n\n  useEffect(() => {\n    dispatch(getRates(CONVERSION_RATE));\n  }, [appChainID])\n\n  return (\n    <DefaultLayout>\n      {emailVerified == USER_STATUS.UNVERIFIED && !loading && showAlertVerifyEmail && connectedAccount && <div className={classes.alertVerifyEmail}>\n        &nbsp;&nbsp;<img src={iconWarning}/>\n        <img src={iconClose} className=\"btn-close\" onClick={() => setShowAlertVerifyEmail(false)}/>\n        &nbsp;&nbsp;\n        {!email && <span>Your account has not been verified. To verify your account, please click on Verify Email button.</span>}\n        {email && <span>Please go to the mail to verify your account.</span>}\n      </div>}\n      <div className={classes.accountContainer}>\n        <div className={classes.mainContent}>\n          <div className={classes.leftPanel}>\n            <AccountInformation\n              classNamePrefix=\"account-infomation\"\n              balance={balance}\n              userInfo={userInfo}\n              tokenPKFDetails={tokenPKFDetails}\n              email={email}\n              emailVerified={emailVerified}\n              setEmail={setEmail}\n              setEmailVeryfied={setEmailVeryfied}\n              isKYC={isKYC}\n              kycStatus={data?.user?.is_kyc}\n              userTier={currentTier}\n            ></AccountInformation>\n            <Tiers\n              showMoreInfomation={false}\n              tokenSymbol={tokenPKFDetails?.symbol}\n              userTier={currentTier}\n              total={total}\n            />\n            <TierInfomation/>\n          </div>\n          <div className={classes.rightPanel}>\n            <ManageTier\n              listTokenDetails={listTokenDetails}\n              emailVerified={emailVerified}\n              totalUnstaked={totalUnstaked}\n              total={total}\n            />\n          </div>\n        </div>\n      </div>\n    </DefaultLayout>\n  );\n};\n\nexport default withRouter(AccountV2);\n"]},"metadata":{},"sourceType":"module"}