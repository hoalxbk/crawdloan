{"ast":null,"code":"import { claimTokenActions } from '../constants/claim-token';\nconst initialState = {\n  data: '',\n  loading: false,\n  error: ''\n};\nexport const claimTokenReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case claimTokenActions.CLAIM_TOKEN_LOADING:\n      {\n        return { ...state,\n          loading: true,\n          error: ''\n        };\n      }\n\n    case claimTokenActions.CLAIM_TOKEN_SUCCESS:\n      {\n        return { ...state,\n          data: action.payload,\n          loading: false,\n          error: ''\n        };\n      }\n\n    case claimTokenActions.CLAIM_TOKEN_FAILURE:\n      {\n        return { ...state,\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const stakedTokensClaimReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case claimTokenActions.CLAIM_TOKEN_STAKED_LOADING:\n      {\n        return { ...state,\n          loading: true,\n          error: ''\n        };\n      }\n\n    case claimTokenActions.CLAIM_TOKEN_STAKED_SUCCESS:\n      {\n        return { ...state,\n          data: action.payload,\n          loading: false,\n          error: ''\n        };\n      }\n\n    case claimTokenActions.CLAIM_TOKEN_STAKED_FAILURE:\n      {\n        return { ...state,\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const claimTokenClaimableReducer = (state = {\n  data: false,\n  loading: false,\n  error: ''\n}, action) => {\n  switch (action.type) {\n    case claimTokenActions.CLAIM_TOKEN_AVAILABLE_LOADING:\n      {\n        return {\n          data: false,\n          loading: true,\n          error: ''\n        };\n      }\n\n    case claimTokenActions.CLAIM_TOKEN_AVAILABLE_SUCCESS:\n      {\n        return {\n          data: action.payload,\n          loading: false,\n          error: ''\n        };\n      }\n\n    case claimTokenActions.CLAIM_TOKEN_AVAILABLE_FAILURE:\n      {\n        return {\n          data: false,\n          loading: false,\n          error: action.payload\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/store/reducers/claim-token.ts"],"names":["claimTokenActions","initialState","data","loading","error","claimTokenReducer","state","action","type","CLAIM_TOKEN_LOADING","CLAIM_TOKEN_SUCCESS","payload","CLAIM_TOKEN_FAILURE","stakedTokensClaimReducer","CLAIM_TOKEN_STAKED_LOADING","CLAIM_TOKEN_STAKED_SUCCESS","CLAIM_TOKEN_STAKED_FAILURE","claimTokenClaimableReducer","CLAIM_TOKEN_AVAILABLE_LOADING","CLAIM_TOKEN_AVAILABLE_SUCCESS","CLAIM_TOKEN_AVAILABLE_FAILURE"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,0BAAlC;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,KAAgB,GAAGL,YAApB,EAAkCM,MAAlC,KAAwD;AACvF,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,iBAAiB,CAACS,mBAAvB;AAA4C;AAC1C,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,OAAO,EAAE,IAFJ;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD;;AAED,SAAKJ,iBAAiB,CAACU,mBAAvB;AAA4C;AAC1C,eAAO,EACL,GAAGJ,KADE;AAELJ,UAAAA,IAAI,EAAEK,MAAM,CAACI,OAFR;AAGLR,UAAAA,OAAO,EAAE,KAHJ;AAILC,UAAAA,KAAK,EAAE;AAJF,SAAP;AAMD;;AAED,SAAKJ,iBAAiB,CAACY,mBAAvB;AAA4C;AAC1C,eAAO,EACL,GAAGN,KADE;AAELH,UAAAA,OAAO,EAAE,KAFJ;AAGLC,UAAAA,KAAK,EAAEG,MAAM,CAACI;AAHT,SAAP;AAKD;;AAED;AAAS;AACP,eAAOL,KAAP;AACD;AA7BH;AA+BD,CAhCM;AAkCP,OAAO,MAAMO,wBAAwB,GAAG,CAACP,KAAgB,GAAGL,YAApB,EAAkCM,MAAlC,KAAwD;AAC9F,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,iBAAiB,CAACc,0BAAvB;AAAmD;AACjD,eAAO,EACL,GAAGR,KADE;AAELH,UAAAA,OAAO,EAAE,IAFJ;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD;;AAED,SAAKJ,iBAAiB,CAACe,0BAAvB;AAAmD;AACjD,eAAO,EACL,GAAGT,KADE;AAELJ,UAAAA,IAAI,EAAEK,MAAM,CAACI,OAFR;AAGLR,UAAAA,OAAO,EAAE,KAHJ;AAILC,UAAAA,KAAK,EAAE;AAJF,SAAP;AAMD;;AAED,SAAKJ,iBAAiB,CAACgB,0BAAvB;AAAmD;AACjD,eAAO,EACL,GAAGV,KADE;AAELH,UAAAA,OAAO,EAAE,KAFJ;AAGLC,UAAAA,KAAK,EAAEG,MAAM,CAACI;AAHT,SAAP;AAKD;;AAED;AAAS;AACP,eAAOL,KAAP;AACD;AA7BH;AA+BD,CAhCM;AAkCP,OAAO,MAAMW,0BAA0B,GAAG,CAACX,KAAK,GAAG;AAAEJ,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,OAAO,EAAE,KAAxB;AAA+BC,EAAAA,KAAK,EAAE;AAAtC,CAAT,EAAqDG,MAArD,KAA2E;AACnH,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKR,iBAAiB,CAACkB,6BAAvB;AAAsD;AACpD,eAAO;AACLhB,UAAAA,IAAI,EAAE,KADD;AAELC,UAAAA,OAAO,EAAE,IAFJ;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD;;AAED,SAAKJ,iBAAiB,CAACmB,6BAAvB;AAAsD;AACpD,eAAO;AACLjB,UAAAA,IAAI,EAAEK,MAAM,CAACI,OADR;AAELR,UAAAA,OAAO,EAAE,KAFJ;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD;;AAED,SAAKJ,iBAAiB,CAACoB,6BAAvB;AAAsD;AACpD,eAAO;AACLlB,UAAAA,IAAI,EAAE,KADD;AAELC,UAAAA,OAAO,EAAE,KAFJ;AAGLC,UAAAA,KAAK,EAAEG,MAAM,CAACI;AAHT,SAAP;AAKD;;AAED;AAAS;AACP,eAAOL,KAAP;AACD;AA5BH;AA8BD,CA/BM","sourcesContent":["import { claimTokenActions } from '../constants/claim-token';\nimport { AnyAction } from 'redux';\n\ntype StateType = {\n  data: string;\n  loading: boolean;\n  error: string;\n};\n\nconst initialState = {\n  data: '',\n  loading: false,\n  error: ''\n};\n\nexport const claimTokenReducer = (state: StateType = initialState, action: AnyAction) => {\n  switch (action.type) {\n\n    case claimTokenActions.CLAIM_TOKEN_LOADING: {\n      return {\n        ...state,\n        loading: true,\n        error: '',\n      }\n    }\n\n    case claimTokenActions.CLAIM_TOKEN_SUCCESS: {\n      return {\n        ...state,\n        data: action.payload,\n        loading: false,\n        error: '',\n      }\n    }\n\n    case claimTokenActions.CLAIM_TOKEN_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const stakedTokensClaimReducer = (state: StateType = initialState, action: AnyAction) => {\n  switch (action.type) {\n\n    case claimTokenActions.CLAIM_TOKEN_STAKED_LOADING: {\n      return {\n        ...state,\n        loading: true,\n        error: '',\n      }\n    }\n\n    case claimTokenActions.CLAIM_TOKEN_STAKED_SUCCESS: {\n      return {\n        ...state,\n        data: action.payload,\n        loading: false,\n        error: '',\n      }\n    }\n\n    case claimTokenActions.CLAIM_TOKEN_STAKED_FAILURE: {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport const claimTokenClaimableReducer = (state = { data: false, loading: false, error: '' }, action: AnyAction) => {\n  switch (action.type) {\n\n    case claimTokenActions.CLAIM_TOKEN_AVAILABLE_LOADING: {\n      return {\n        data: false,\n        loading: true,\n        error: '',\n      }\n    }\n\n    case claimTokenActions.CLAIM_TOKEN_AVAILABLE_SUCCESS: {\n      return {\n        data: action.payload,\n        loading: false,\n        error: '',\n      }\n    }\n\n    case claimTokenActions.CLAIM_TOKEN_AVAILABLE_FAILURE: {\n      return {\n        data: false,\n        loading: false,\n        error: action.payload,\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}