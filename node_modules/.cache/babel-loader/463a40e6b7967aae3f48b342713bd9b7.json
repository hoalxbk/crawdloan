{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport _ from 'lodash';\nimport { ADMIN_URL_PREFIX, API_URL_PREFIX, ETHERSCAN_BASE_URL, IMAGE_URL_PREFIX, NETWORK_AVAILABLE } from \"../constants\";\nimport axios from \"axios\";\nexport function formatPrecisionAmount(amount, precision = 18) {\n  const rawValue = new BigNumber(`${amount}`).toFixed(precision);\n  return amount && parseFloat(amount) !== Infinity ? new BigNumber(rawValue).toFormat() : '0';\n}\nexport const routeWithPrefix = (prefix = ADMIN_URL_PREFIX, url = '') => {\n  const truncateUrl = _.trim(url, '/');\n\n  return `/${prefix}/${truncateUrl}`;\n};\nexport const adminRoute = (url = '') => {\n  const truncateUrl = _.trim(url, '/');\n\n  const resUrl = `/${ADMIN_URL_PREFIX}/${truncateUrl}`;\n  return resUrl;\n};\nexport const publicRoute = (url = '') => {\n  const truncateUrl = _.trim(url, '/');\n\n  const resUrl = `/${truncateUrl}`;\n  return resUrl;\n};\nexport const checkIsAdminRoute = pathname => {\n  return pathname.indexOf(`/${ADMIN_URL_PREFIX}`) !== -1 || pathname === '/dashboard/login';\n};\nexport const checkIsLoginRoute = pathname => {\n  return pathname.indexOf(`/login`) !== -1;\n};\nexport const checkIsInvestorRoute = pathname => {\n  return pathname.indexOf(`/buy-token`) !== -1 || pathname === '/login';\n};\nexport const apiRoute = (url = '') => {\n  const truncateUrl = _.trim(url, '/');\n\n  const resUrl = `/${API_URL_PREFIX}/${truncateUrl}`;\n  return resUrl;\n};\nexport const imageRoute = (url = '') => {\n  const truncateUrl = _.trim(url, '/');\n\n  const resUrl = `${process.env.REACT_APP_API_BASE_URL || ''}/${IMAGE_URL_PREFIX}/${truncateUrl}`;\n  return resUrl;\n};\nexport const etherscanRoute = (address = '', poolDetail = null) => {\n  let network = '';\n\n  if (poolDetail) {\n    if (poolDetail.network_available === NETWORK_AVAILABLE.BSC) {\n      network = process.env.REACT_APP_BSC_NETWORK_ID + '';\n    } else {\n      network = process.env.REACT_APP_NETWORK_ID + '';\n    }\n  }\n\n  const networkId = network || localStorage.getItem('NETWORK_ID') || process.env.REACT_APP_NETWORK_ID || '1';\n  const baseUrl = ETHERSCAN_BASE_URL[networkId];\n\n  const truncateUrl = _.trim(address, '/');\n\n  const resUrl = `${baseUrl}/${truncateUrl}`;\n  return resUrl;\n};\nexport const etherscanAddressRoute = (address = '', poolDetail = null) => {\n  return etherscanRoute(`address/${address}`, poolDetail);\n};\nexport const etherscanTransactionRoute = (address = '', poolDetail = null) => {\n  return etherscanRoute(`tx/${address}`, poolDetail);\n};\nexport const getTransactionRowType = transaction => {\n  if ((transaction === null || transaction === void 0 ? void 0 : transaction.type) === 'Refund') {\n    return 'Refund';\n  }\n\n  if ((transaction === null || transaction === void 0 ? void 0 : transaction.type) === 'TokenClaimed') {\n    return 'Claim';\n  }\n\n  return 'Buy';\n};\nexport const getETHPrices = async () => {\n  // To use:\n  // useEffect(() => {\n  //   getPrices().then((resPrices: any) => {\n  //     setPrices(resPrices);\n  //   });\n  // }, []);\n  return await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd').then(function (response) {\n    let resData = JSON.parse(JSON.stringify(response));\n    resData = resData && resData.data || {};\n    return resData && resData.ethereum && resData.ethereum.usd || 0;\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nexport const fixGasLimit = (type = 'deposit') => {\n  let overrides = {};\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (type == 'deposit') {\n      overrides = {\n        gasLimit: 200000,\n        gasPrice: 10000000000\n      };\n    } else if (type == 'approve') {\n      overrides = {\n        gasLimit: 500000,\n        gasPrice: 50000000000\n      };\n    } else if (type == 'claim') {\n      overrides = {\n        gasLimit: 200000,\n        gasPrice: 10000000000\n      };\n    } else if (type == 'buy') {\n      overrides = {\n        gasLimit: 500000,\n        gasPrice: 10000000000\n      };\n    }\n  }\n\n  return overrides;\n};\nexport const fixGasLimitWithProvider = (library, type = 'deposit') => {\n  let overrides = {};\n  return overrides;\n  const provider = library === null || library === void 0 ? void 0 : library.provider;\n\n  if (provider === null || provider === void 0 ? void 0 : provider.isWalletLink) {\n    overrides = fixGasLimit(type);\n    console.log('Provider is WalletLink:', provider);\n    console.log('Gas Limit: ', overrides);\n  }\n\n  return overrides;\n};\nexport const checkIsWalletLink = library => {\n  const provider = library === null || library === void 0 ? void 0 : library.provider;\n\n  if (provider === null || provider === void 0 ? void 0 : provider.isWalletLink) {\n    console.log('Provider is WalletLink:', provider);\n  }\n\n  return !!(provider === null || provider === void 0 ? void 0 : provider.isWalletLink);\n};\nexport const disconnectWalletLink = library => {\n  const provider = library === null || library === void 0 ? void 0 : library.provider;\n  (provider === null || provider === void 0 ? void 0 : provider.close) && (provider === null || provider === void 0 ? void 0 : provider.close());\n};","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/utils/index.ts"],"names":["BigNumber","_","ADMIN_URL_PREFIX","API_URL_PREFIX","ETHERSCAN_BASE_URL","IMAGE_URL_PREFIX","NETWORK_AVAILABLE","axios","formatPrecisionAmount","amount","precision","rawValue","toFixed","parseFloat","Infinity","toFormat","routeWithPrefix","prefix","url","truncateUrl","trim","adminRoute","resUrl","publicRoute","checkIsAdminRoute","pathname","indexOf","checkIsLoginRoute","checkIsInvestorRoute","apiRoute","imageRoute","process","env","REACT_APP_API_BASE_URL","etherscanRoute","address","poolDetail","network","network_available","BSC","REACT_APP_BSC_NETWORK_ID","REACT_APP_NETWORK_ID","networkId","localStorage","getItem","baseUrl","etherscanAddressRoute","etherscanTransactionRoute","getTransactionRowType","transaction","type","getETHPrices","get","then","response","resData","JSON","parse","stringify","data","ethereum","usd","catch","error","console","log","fixGasLimit","overrides","NODE_ENV","gasLimit","gasPrice","fixGasLimitWithProvider","library","provider","isWalletLink","checkIsWalletLink","disconnectWalletLink","close"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js';\nimport _ from 'lodash';\nimport {ADMIN_URL_PREFIX, API_URL_PREFIX, ETHERSCAN_BASE_URL, IMAGE_URL_PREFIX, NETWORK_AVAILABLE} from \"../constants\";\nimport axios from \"axios\";\n\n\nexport function formatPrecisionAmount(amount: any, precision: number = 18): string {\n  const rawValue = new BigNumber(`${amount}`).toFixed(precision);\n  return (amount && parseFloat(amount) !== Infinity) ? new BigNumber(rawValue).toFormat() : '0';\n}\n\nexport const routeWithPrefix = (prefix = ADMIN_URL_PREFIX, url = '') => {\n  const truncateUrl = _.trim(url, '/');\n  return `/${prefix}/${truncateUrl}`;\n};\n\nexport const adminRoute = (url = '') => {\n  const truncateUrl = _.trim(url, '/');\n  const resUrl = `/${ADMIN_URL_PREFIX}/${truncateUrl}`;\n  return resUrl;\n};\n\nexport const publicRoute = (url = '') => {\n  const truncateUrl = _.trim(url, '/');\n  const resUrl = `/${truncateUrl}`;\n  return resUrl;\n};\n\nexport const checkIsAdminRoute = (pathname: string) => {\n  return (pathname.indexOf(`/${ADMIN_URL_PREFIX}`) !== -1) || (pathname === '/dashboard/login');\n};\n\nexport const checkIsLoginRoute = (pathname: string) => {\n  return pathname.indexOf(`/login`) !== -1;\n};\n\nexport const checkIsInvestorRoute = (pathname: string) => {\n  return (pathname.indexOf(`/buy-token`) !== -1) ||  (pathname === '/login');\n};\n\nexport const apiRoute = (url = '') => {\n  const truncateUrl = _.trim(url, '/');\n  const resUrl = `/${API_URL_PREFIX}/${truncateUrl}`;\n  return resUrl;\n};\n\nexport const imageRoute = (url = '') => {\n  const truncateUrl = _.trim(url, '/');\n  const resUrl = `${process.env.REACT_APP_API_BASE_URL || ''}/${IMAGE_URL_PREFIX}/${truncateUrl}`;\n  return resUrl;\n};\n\nexport const etherscanRoute = (address = '', poolDetail: any = null) => {\n  let network = '';\n  if (poolDetail) {\n    if (poolDetail.network_available === NETWORK_AVAILABLE.BSC) {\n      network = process.env.REACT_APP_BSC_NETWORK_ID + '';\n    } else {\n      network = process.env.REACT_APP_NETWORK_ID + '';\n    }\n  }\n\n  const networkId = network || localStorage.getItem('NETWORK_ID') || process.env.REACT_APP_NETWORK_ID || '1';\n  const baseUrl = ETHERSCAN_BASE_URL[networkId];\n  const truncateUrl = _.trim(address, '/');\n  const resUrl = `${baseUrl}/${truncateUrl}`;\n  return resUrl;\n};\n\nexport const etherscanAddressRoute = (address = '', poolDetail: any = null) => {\n  return etherscanRoute(`address/${address}`, poolDetail);\n};\n\nexport const etherscanTransactionRoute = (address = '', poolDetail: any = null) => {\n  return etherscanRoute(`tx/${address}`, poolDetail);\n};\n\nexport const getTransactionRowType = (transaction: any) => {\n  if (transaction?.type === 'Refund') {\n    return 'Refund';\n  }\n  if (transaction?.type === 'TokenClaimed') {\n    return 'Claim';\n  }\n  return 'Buy';\n};\n\nexport const getETHPrices = async () => {\n  // To use:\n  // useEffect(() => {\n  //   getPrices().then((resPrices: any) => {\n  //     setPrices(resPrices);\n  //   });\n  // }, []);\n\n  return await axios.get('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd')\n    .then(function (response) {\n      let resData = JSON.parse(JSON.stringify(response));\n      resData = (resData && resData.data) || {};\n      return (resData && resData.ethereum && resData.ethereum.usd) || 0;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n};\n\nexport const fixGasLimit = (type = 'deposit') => {\n  let overrides = {};\n  if (process.env.NODE_ENV !== 'production') {\n    if (type == 'deposit') {\n      overrides = {\n        gasLimit: 200000,\n        gasPrice: 10000000000,\n      };\n    } else if (type == 'approve') {\n      overrides = {\n        gasLimit: 500000,\n        gasPrice: 50000000000,\n      };\n    } else if (type == 'claim') {\n      overrides = {\n        gasLimit: 200000,\n        gasPrice: 10000000000,\n      };\n    } else if (type == 'buy') {\n      overrides = {\n        gasLimit: 500000,\n        gasPrice: 10000000000,\n      };\n    }\n  }\n\n  return overrides;\n};\n\nexport const fixGasLimitWithProvider = (library: any, type = 'deposit') => {\n  let overrides = {};\n  return overrides;\n\n  const provider = (library?.provider as any);\n  if (provider?.isWalletLink) {\n    overrides = fixGasLimit(type);\n    console.log('Provider is WalletLink:', provider);\n    console.log('Gas Limit: ', overrides);\n  }\n\n  return overrides;\n};\n\nexport const checkIsWalletLink = (library: any) => {\n  const provider = (library?.provider as any);\n  if (provider?.isWalletLink) {\n    console.log('Provider is WalletLink:', provider);\n  }\n  return !!provider?.isWalletLink;\n};\n\nexport const disconnectWalletLink = (library: any) => {\n  const provider = (library?.provider as any);\n  provider?.close && provider?.close();\n};\n"]},"metadata":{},"sourceType":"module"}