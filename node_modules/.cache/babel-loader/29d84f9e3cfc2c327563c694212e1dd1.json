{"ast":null,"code":"// Copyright 2018-2021 @polkadot/ui-shared authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Copyright 2018 Paritytech via paritytech/oo7/polkadot-identicon\n// This has been converted from the original version that can be found at\n//\n// https://github.com/paritytech/oo7/blob/251ba2b7c45503b68eab4320c270b5afa9bccb60/packages/polkadot-identicon/src/index.jsx\nimport { blake2AsU8a, decodeAddress } from '@polkadot/util-crypto';\n\nconst blake2 = value => blake2AsU8a(value, 512);\n\nconst S = 64;\nconst C = S / 2;\nconst Z = S / 64 * 5;\nconst ZERO = blake2(new Uint8Array(32));\n/* eslint-disable sort-keys */\n\nconst SCHEMA = {\n  target: {\n    colors: [0, 28, 0, 0, 28, 0, 0, 28, 0, 0, 28, 0, 0, 28, 0, 0, 28, 0, 1],\n    freq: 1\n  },\n  cube: {\n    colors: [0, 1, 3, 2, 4, 3, 0, 1, 3, 2, 4, 3, 0, 1, 3, 2, 4, 3, 5],\n    freq: 20\n  },\n  quazar: {\n    colors: [1, 2, 3, 1, 2, 4, 5, 5, 4, 1, 2, 3, 1, 2, 4, 5, 5, 4, 0],\n    freq: 16\n  },\n  flower: {\n    colors: [0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 3],\n    freq: 32\n  },\n  cyclic: {\n    colors: [0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 6],\n    freq: 32\n  },\n  vmirror: {\n    colors: [0, 1, 2, 3, 4, 5, 3, 4, 2, 0, 1, 6, 7, 8, 9, 7, 8, 6, 10],\n    freq: 128\n  },\n  hmirror: {\n    colors: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 8, 6, 7, 5, 3, 4, 2, 11],\n    freq: 128\n  }\n};\n/* eslint-enable sort-keys */\n\nconst OUTER_CIRCLE = {\n  cx: C,\n  cy: C,\n  fill: '#eee',\n  r: C\n};\n\nfunction getRotation(isSixPoint) {\n  const r = isSixPoint ? C / 8 * 5 : C / 4 * 3;\n  const rroot3o2 = r * Math.sqrt(3) / 2;\n  const ro2 = r / 2;\n  const rroot3o4 = r * Math.sqrt(3) / 4;\n  const ro4 = r / 4;\n  const r3o4 = r * 3 / 4;\n  return {\n    r,\n    r3o4,\n    ro2,\n    ro4,\n    rroot3o2,\n    rroot3o4\n  };\n}\n\nfunction getCircleXY(isSixPoint) {\n  const {\n    r,\n    r3o4,\n    ro2,\n    ro4,\n    rroot3o2,\n    rroot3o4\n  } = getRotation(isSixPoint);\n  return [[C, C - r], [C, C - ro2], [C - rroot3o4, C - r3o4], [C - rroot3o2, C - ro2], [C - rroot3o4, C - ro4], [C - rroot3o2, C], [C - rroot3o2, C + ro2], [C - rroot3o4, C + ro4], [C - rroot3o4, C + r3o4], [C, C + r], [C, C + ro2], [C + rroot3o4, C + r3o4], [C + rroot3o2, C + ro2], [C + rroot3o4, C + ro4], [C + rroot3o2, C], [C + rroot3o2, C - ro2], [C + rroot3o4, C - ro4], [C + rroot3o4, C - r3o4], [C, C]];\n}\n\nfunction findScheme(d) {\n  let cum = 0;\n  const schema = Object.values(SCHEMA).find(schema => {\n    cum += schema.freq;\n    return d < cum;\n  });\n\n  if (!schema) {\n    throw new Error('Unable to find schema');\n  }\n\n  return schema;\n}\n\nfunction addressToId(address) {\n  return blake2(decodeAddress(address)).map((x, i) => (x + 256 - ZERO[i]) % 256);\n}\n\nfunction getColors(address) {\n  const total = Object.values(SCHEMA).map(s => s.freq).reduce((a, b) => a + b);\n  const id = addressToId(address);\n  const d = Math.floor((id[30] + id[31] * 256) % total);\n  const rot = id[28] % 6 * 3;\n  const sat = Math.floor(id[29] * 70 / 256 + 26) % 80 + 30;\n  const scheme = findScheme(d);\n  const palette = Array.from(id).map((x, i) => {\n    const b = (x + i % 28 * 58) % 256;\n\n    if (b === 0) {\n      return '#444';\n    } else if (b === 255) {\n      return 'transparent';\n    }\n\n    const h = Math.floor(b % 64 * 360 / 64);\n    const l = [53, 15, 35, 75][Math.floor(b / 64)];\n    return `hsl(${h}, ${sat}%, ${l}%)`;\n  });\n  return scheme.colors.map((_, i) => palette[scheme.colors[i < 18 ? (i + rot) % 18 : 18]]);\n}\n/**\n * @description Generate a array of the circles that make up an identicon\n */\n\n\nexport function polkadotIcon(address, {\n  isAlternative\n}) {\n  const colors = getColors(address);\n  return [OUTER_CIRCLE].concat(getCircleXY(isAlternative).map(([cx, cy], index) => ({\n    cx,\n    cy,\n    fill: colors[index],\n    r: Z\n  })));\n}","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/node_modules/@polkadot/ui-shared/icons/polkadot.js"],"names":["blake2AsU8a","decodeAddress","blake2","value","S","C","Z","ZERO","Uint8Array","SCHEMA","target","colors","freq","cube","quazar","flower","cyclic","vmirror","hmirror","OUTER_CIRCLE","cx","cy","fill","r","getRotation","isSixPoint","rroot3o2","Math","sqrt","ro2","rroot3o4","ro4","r3o4","getCircleXY","findScheme","d","cum","schema","Object","values","find","Error","addressToId","address","map","x","i","getColors","total","s","reduce","a","b","id","floor","rot","sat","scheme","palette","Array","from","h","l","_","polkadotIcon","isAlternative","concat","index"],"mappings":"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","sourcesContent":["// Copyright 2018-2021 @polkadot/ui-shared authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Copyright 2018 Paritytech via paritytech/oo7/polkadot-identicon\n// This has been converted from the original version that can be found at\n//\n// https://github.com/paritytech/oo7/blob/251ba2b7c45503b68eab4320c270b5afa9bccb60/packages/polkadot-identicon/src/index.jsx\nimport { blake2AsU8a, decodeAddress } from '@polkadot/util-crypto';\n\nconst blake2 = value => blake2AsU8a(value, 512);\n\nconst S = 64;\nconst C = S / 2;\nconst Z = S / 64 * 5;\nconst ZERO = blake2(new Uint8Array(32));\n/* eslint-disable sort-keys */\n\nconst SCHEMA = {\n  target: {\n    colors: [0, 28, 0, 0, 28, 0, 0, 28, 0, 0, 28, 0, 0, 28, 0, 0, 28, 0, 1],\n    freq: 1\n  },\n  cube: {\n    colors: [0, 1, 3, 2, 4, 3, 0, 1, 3, 2, 4, 3, 0, 1, 3, 2, 4, 3, 5],\n    freq: 20\n  },\n  quazar: {\n    colors: [1, 2, 3, 1, 2, 4, 5, 5, 4, 1, 2, 3, 1, 2, 4, 5, 5, 4, 0],\n    freq: 16\n  },\n  flower: {\n    colors: [0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 3],\n    freq: 32\n  },\n  cyclic: {\n    colors: [0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 6],\n    freq: 32\n  },\n  vmirror: {\n    colors: [0, 1, 2, 3, 4, 5, 3, 4, 2, 0, 1, 6, 7, 8, 9, 7, 8, 6, 10],\n    freq: 128\n  },\n  hmirror: {\n    colors: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 8, 6, 7, 5, 3, 4, 2, 11],\n    freq: 128\n  }\n};\n/* eslint-enable sort-keys */\n\nconst OUTER_CIRCLE = {\n  cx: C,\n  cy: C,\n  fill: '#eee',\n  r: C\n};\n\nfunction getRotation(isSixPoint) {\n  const r = isSixPoint ? C / 8 * 5 : C / 4 * 3;\n  const rroot3o2 = r * Math.sqrt(3) / 2;\n  const ro2 = r / 2;\n  const rroot3o4 = r * Math.sqrt(3) / 4;\n  const ro4 = r / 4;\n  const r3o4 = r * 3 / 4;\n  return {\n    r,\n    r3o4,\n    ro2,\n    ro4,\n    rroot3o2,\n    rroot3o4\n  };\n}\n\nfunction getCircleXY(isSixPoint) {\n  const {\n    r,\n    r3o4,\n    ro2,\n    ro4,\n    rroot3o2,\n    rroot3o4\n  } = getRotation(isSixPoint);\n  return [[C, C - r], [C, C - ro2], [C - rroot3o4, C - r3o4], [C - rroot3o2, C - ro2], [C - rroot3o4, C - ro4], [C - rroot3o2, C], [C - rroot3o2, C + ro2], [C - rroot3o4, C + ro4], [C - rroot3o4, C + r3o4], [C, C + r], [C, C + ro2], [C + rroot3o4, C + r3o4], [C + rroot3o2, C + ro2], [C + rroot3o4, C + ro4], [C + rroot3o2, C], [C + rroot3o2, C - ro2], [C + rroot3o4, C - ro4], [C + rroot3o4, C - r3o4], [C, C]];\n}\n\nfunction findScheme(d) {\n  let cum = 0;\n  const schema = Object.values(SCHEMA).find(schema => {\n    cum += schema.freq;\n    return d < cum;\n  });\n\n  if (!schema) {\n    throw new Error('Unable to find schema');\n  }\n\n  return schema;\n}\n\nfunction addressToId(address) {\n  return blake2(decodeAddress(address)).map((x, i) => (x + 256 - ZERO[i]) % 256);\n}\n\nfunction getColors(address) {\n  const total = Object.values(SCHEMA).map(s => s.freq).reduce((a, b) => a + b);\n  const id = addressToId(address);\n  const d = Math.floor((id[30] + id[31] * 256) % total);\n  const rot = id[28] % 6 * 3;\n  const sat = Math.floor(id[29] * 70 / 256 + 26) % 80 + 30;\n  const scheme = findScheme(d);\n  const palette = Array.from(id).map((x, i) => {\n    const b = (x + i % 28 * 58) % 256;\n\n    if (b === 0) {\n      return '#444';\n    } else if (b === 255) {\n      return 'transparent';\n    }\n\n    const h = Math.floor(b % 64 * 360 / 64);\n    const l = [53, 15, 35, 75][Math.floor(b / 64)];\n    return `hsl(${h}, ${sat}%, ${l}%)`;\n  });\n  return scheme.colors.map((_, i) => palette[scheme.colors[i < 18 ? (i + rot) % 18 : 18]]);\n}\n/**\n * @description Generate a array of the circles that make up an identicon\n */\n\n\nexport function polkadotIcon(address, {\n  isAlternative\n}) {\n  const colors = getColors(address);\n  return [OUTER_CIRCLE].concat(getCircleXY(isAlternative).map(([cx, cy], index) => ({\n    cx,\n    cy,\n    fill: colors[index],\n    r: Z\n  })));\n}"]},"metadata":{},"sourceType":"module"}