{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/Dashboard/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport DefaultLayout from '../../components/Layout/DefaultLayout';\nimport useStyles from './style';\nimport Card from './Card';\nimport usePools from '../../hooks/usePools';\nimport { BUY_TYPE, POOL_TYPE } from '../../constants';\nimport { convertFromWei, getPoolContract } from '../../services/web3';\nimport { getPoolStatusByPoolDetail } from \"../../utils/getPoolStatusByPoolDetail\";\nimport { PoolStatus } from \"../../utils/getPoolStatus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst arrowRightIcon = '/images/icons/arrow-right.svg';\nconst background = '/images/icons/background2.svg';\n\nconst Dashboard = props => {\n  _s();\n\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  let {\n    pools = [],\n    pagination,\n    loading\n  } = usePools();\n  const [upcomingPools, setUpcomingPools] = useState([]);\n  const [featurePools, setFeaturePools] = useState([]);\n  const {\n    data: appChain\n  } = useSelector(state => state.appNetwork);\n  const {\n    data: connector\n  } = useSelector(state => state.connector);\n  const [poolFetched, setPoolFetched] = useState(false);\n\n  const getTokenSold = async pool => {\n    let result = '0';\n\n    try {\n      // const contract = getContractInstance(POOL_ABI, pool.campaign_hash || '', connector, appChain.appChainID);\n      // if (contract) {\n      //   result = await contract.methods.tokenSold().call();\n      //   result = convertFromWei(result.toString());\n      // }\n      const networkAvailable = pool.network_available || pool.networkAvailable;\n      const poolHash = pool.campaign_hash || pool.campaignHash;\n      const contract = getPoolContract({\n        networkAvailable,\n        poolHash\n      });\n\n      if (contract) {\n        result = await contract.methods.tokenSold().call();\n        result = convertFromWei(result.toString());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    return result;\n  };\n\n  const checkBuyTime = pool => {\n    return !pool.start_time || !pool.finish_time;\n  };\n\n  const checkJoinTime = pool => {\n    return !pool.start_join_pool_time || !pool.end_join_pool_time;\n  };\n\n  const checkTBA = pool => {\n    return pool.pool_type == POOL_TYPE.SWAP && pool.buy_type == BUY_TYPE.FCFS && checkBuyTime(pool) || pool.pool_type == POOL_TYPE.SWAP && pool.buy_type == BUY_TYPE.WHITELIST_LOTTERY && (checkBuyTime(pool) || checkJoinTime(pool)) || pool.pool_type == POOL_TYPE.CLAIMABLE && pool.buy_type == BUY_TYPE.FCFS && (checkBuyTime(pool) || !pool.release_time) || pool.pool_type == POOL_TYPE.CLAIMABLE && pool.buy_type == BUY_TYPE.WHITELIST_LOTTERY && (checkBuyTime(pool) || checkJoinTime(pool) || !pool.release_time);\n  };\n\n  const setStatusPools = async () => {\n    for (let i = 0; i < pools.length; i++) {\n      const pool = pools[i];\n      const status = await getPoolStatusByPoolDetail(pool, 0);\n      console.log('Status Pool:', status);\n      pool.status = status;\n    } // pools.forEach(async (pool: any) => {\n    //   const status = await getPoolStatusByPoolDetail(pool, 0);\n    //   console.log('Status Pool:', status);\n    //   pool.status = status;\n    // });\n\n\n    setUpcomingPools(pools.filter(pool => (pool === null || pool === void 0 ? void 0 : pool.status) != PoolStatus.Claimable && (pool === null || pool === void 0 ? void 0 : pool.status) != PoolStatus.Closed && (pool === null || pool === void 0 ? void 0 : pool.is_display) == 1));\n    setFeaturePools(pools.filter(pool => ((pool === null || pool === void 0 ? void 0 : pool.status) == PoolStatus.Claimable || (pool === null || pool === void 0 ? void 0 : pool.status) == PoolStatus.Closed) && (pool === null || pool === void 0 ? void 0 : pool.is_display) == 1));\n  };\n\n  useEffect(() => {\n    if (pools.length == 0 || poolFetched) return;\n    setStatusPools();\n    setPoolFetched(true);\n  }, [pools]);\n  useEffect(() => {\n    if (!appChain) return;\n    pools.forEach(async pool => {\n      if (pool.is_deploy === 0) return;\n      const tokenSold = await getTokenSold(pool);\n      pool.tokenSold = tokenSold;\n    });\n  }, [appChain, connector, pools]);\n  return /*#__PURE__*/_jsxDEV(DefaultLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.styles.listPools,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upcoming Pools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pools\",\n        children: upcomingPools.map((pool, index) => {\n          return index < 8 && /*#__PURE__*/_jsxDEV(Card, {\n            pool: pool\n          }, pool.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => props.history.push('/pools'),\n        children: [\"View all Pools\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrowRightIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.styles.listPools,\n      style: {\n        marginTop: '220px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Featured Pools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pools\",\n        children: featurePools.map((pool, index) => {\n          return index < 8 && /*#__PURE__*/_jsxDEV(Card, {\n            pool: pool\n          }, pool.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => props.history.push('/pools'),\n        children: [\"View all Pools\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: arrowRightIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: this.styles.getAlert,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: background\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Get Alerts For New Pools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Subscribe to get notified about new pools and other relevant events.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => window.open('https://t.me/PolkaFoundryANN', '_blank'),\n          children: [\"Subscribe to upcoming pools\\xA0\", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: arrowRightIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"cXrIr/pApXaJxEegzRPNINW1a8w=\", false, function () {\n  return [useStyles, useDispatch, usePools, useSelector, useSelector];\n});\n\n_c = Dashboard;\nexport default _c2 = withRouter(Dashboard);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/pages/Dashboard/index.tsx"],"names":["React","useEffect","useState","useDispatch","useSelector","withRouter","DefaultLayout","useStyles","Card","usePools","BUY_TYPE","POOL_TYPE","convertFromWei","getPoolContract","getPoolStatusByPoolDetail","PoolStatus","arrowRightIcon","background","Dashboard","props","styles","dispatch","pools","pagination","loading","upcomingPools","setUpcomingPools","featurePools","setFeaturePools","data","appChain","state","appNetwork","connector","poolFetched","setPoolFetched","getTokenSold","pool","result","networkAvailable","network_available","poolHash","campaign_hash","campaignHash","contract","methods","tokenSold","call","toString","error","console","log","checkBuyTime","start_time","finish_time","checkJoinTime","start_join_pool_time","end_join_pool_time","checkTBA","pool_type","SWAP","buy_type","FCFS","WHITELIST_LOTTERY","CLAIMABLE","release_time","setStatusPools","i","length","status","filter","Claimable","Closed","is_display","forEach","is_deploy","listPools","map","index","id","history","push","marginTop","getAlert","window","open"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\nimport DefaultLayout from '../../components/Layout/DefaultLayout';\nimport useStyles from './style';\nimport Card from './Card';\nimport usePools from '../../hooks/usePools';\nimport {BUY_TYPE, POOL_TYPE} from '../../constants';\nimport {convertFromWei, getPoolContract} from '../../services/web3';\nimport {getPoolStatusByPoolDetail} from \"../../utils/getPoolStatusByPoolDetail\";\nimport {PoolStatus} from \"../../utils/getPoolStatus\";\n\nconst arrowRightIcon = '/images/icons/arrow-right.svg';\nconst background = '/images/icons/background2.svg';\n\nconst Dashboard = (props: any) => {\n  const styles = useStyles();\n  const dispatch = useDispatch();\n  let { pools = [], pagination, loading } = usePools();\n  const [upcomingPools, setUpcomingPools] = useState([]);\n  const [featurePools, setFeaturePools] = useState([]);\n  const { data: appChain } = useSelector((state: any) => state.appNetwork);\n  const { data: connector } = useSelector((state: any) => state.connector);\n  const [poolFetched, setPoolFetched] = useState(false);\n\n  const getTokenSold = async (pool: any) => {\n    let result = '0';\n    try {\n      // const contract = getContractInstance(POOL_ABI, pool.campaign_hash || '', connector, appChain.appChainID);\n      // if (contract) {\n      //   result = await contract.methods.tokenSold().call();\n      //   result = convertFromWei(result.toString());\n      // }\n      const networkAvailable = pool.network_available || pool.networkAvailable;\n      const poolHash = pool.campaign_hash || pool.campaignHash;\n      const contract = getPoolContract({ networkAvailable, poolHash });\n      if (contract) {\n        result = await contract.methods.tokenSold().call();\n        result = convertFromWei(result.toString());\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    return result;\n  }\n\n  const checkBuyTime = (pool: any) => {\n    return !pool.start_time || !pool.finish_time\n  }\n\n  const checkJoinTime = (pool: any) => {\n    return !pool.start_join_pool_time || !pool.end_join_pool_time\n  }\n\n  const checkTBA = (pool: any) => {\n    return pool.pool_type == POOL_TYPE.SWAP && pool.buy_type == BUY_TYPE.FCFS && checkBuyTime(pool)\n    || pool.pool_type == POOL_TYPE.SWAP && pool.buy_type == BUY_TYPE.WHITELIST_LOTTERY && (checkBuyTime(pool) || checkJoinTime(pool))\n    || pool.pool_type == POOL_TYPE.CLAIMABLE && pool.buy_type == BUY_TYPE.FCFS && (checkBuyTime(pool) || !pool.release_time)\n    || pool.pool_type == POOL_TYPE.CLAIMABLE && pool.buy_type == BUY_TYPE.WHITELIST_LOTTERY && (checkBuyTime(pool) || checkJoinTime(pool) || !pool.release_time)\n  };\n\n  const setStatusPools = async () => {\n    for (let i = 0; i < pools.length; i++) {\n      const pool: any = pools[i];\n      const status = await getPoolStatusByPoolDetail(pool, 0);\n      console.log('Status Pool:', status);\n      pool.status = status;\n    }\n    // pools.forEach(async (pool: any) => {\n    //   const status = await getPoolStatusByPoolDetail(pool, 0);\n    //   console.log('Status Pool:', status);\n    //   pool.status = status;\n    // });\n    setUpcomingPools(pools.filter((pool: any) => pool?.status != PoolStatus.Claimable && pool?.status != PoolStatus.Closed && pool?.is_display == 1))\n    setFeaturePools(pools.filter((pool: any) => (pool?.status == PoolStatus.Claimable || pool?.status == PoolStatus.Closed) && pool?.is_display == 1))\n  };\n\n  useEffect(() => {\n    if(pools.length == 0 || poolFetched) return;\n    setStatusPools();\n    setPoolFetched(true);\n  }, [pools]);\n\n  useEffect(() => {\n    if(!appChain) return\n    pools.forEach(async (pool: any) => {\n      if(pool.is_deploy === 0) return\n      const tokenSold = await getTokenSold(pool)\n      pool.tokenSold = tokenSold\n    })\n  },[appChain, connector, pools])\n\n  return (\n    <DefaultLayout>\n      {/* <BackgroundComponent/> */}\n      <div className={this.styles.listPools}>\n        <h2>Upcoming Pools</h2>\n        <div className=\"pools\">\n          {upcomingPools.map((pool: any, index) => {\n            return index < 8 && <Card pool={pool} key={pool.id}/>\n          })}\n        </div>\n        {/*<button className=\"btn\" onClick={() => window.open('https://t.me/PolkaFoundryANN', '_blank')}>*/}\n        {/*  Get Notified&nbsp;*/}\n        {/*  <img src={arrowRightIcon}/>*/}\n        {/*</button>*/}\n        <button className=\"btn\" onClick={() => props.history.push('/pools')}>\n          View all Pools&nbsp;\n          <img src={arrowRightIcon}/>\n        </button>\n      </div>\n      <div className={this.styles.listPools} style={{marginTop: '220px'}}>\n        <h2>Featured Pools</h2>\n        <div className=\"pools\">\n          {featurePools.map((pool: any, index) => {\n            return index < 8 && <Card pool={pool} key={pool.id}/>\n          })}\n        </div>\n        {/*<a href=\"https://t.me/PolkaFoundryANN\" target=\"_blank\" className=\"btn\" style={{width: '170px'}}>*/}\n        {/*  View all Pools&nbsp;*/}\n        {/*  <img src={arrowRightIcon}/>*/}\n        {/*</a>*/}\n        <button className=\"btn\" onClick={() => props.history.push('/pools')}>\n          View all Pools&nbsp;\n          <img src={arrowRightIcon}/>\n        </button>\n      </div>\n      <div className={this.styles.getAlert}>\n        <img src={background}/>\n        <div className=\"content\">\n          <h2>Get Alerts For New Pools</h2>\n          <p>Subscribe to get notified about new pools and other relevant events.</p>\n          <button className=\"btn\" onClick={() => window.open('https://t.me/PolkaFoundryANN', '_blank')}>\n            Subscribe to upcoming pools&nbsp;\n            <img src={arrowRightIcon}/>\n          </button>\n        </div>\n      </div>\n    </DefaultLayout>\n  );\n};\n\nexport default withRouter(Dashboard);\n"]},"metadata":{},"sourceType":"module"}