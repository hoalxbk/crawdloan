{"ast":null,"code":"import { walletActions } from '../constants/wallet';\nexport const connectWalletSuccess = (entity, addresses, balances) => {\n  return {\n    type: walletActions.WALLET_CONNECT_SUCCESS,\n    payload: {\n      entity,\n      addresses,\n      balances\n    }\n  };\n};\nexport const updateWalletBalance = (entity, addresses, balances) => {\n  return {\n    type: walletActions.WALLET_UPDATE_BALANCE,\n    payload: {\n      entity,\n      addresses,\n      balances\n    }\n  };\n};\nexport const disconnectWallet = () => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: walletActions.WALLET_DISCONNECT_SUCCESS\n    });\n  };\n};\nexport const disconnectWalletLayer2 = () => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: walletActions.WALLET_CONNECT_SUCCESS_WITHOUT_LAYER2\n    });\n  };\n};","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/store/actions/wallet.ts"],"names":["walletActions","connectWalletSuccess","entity","addresses","balances","type","WALLET_CONNECT_SUCCESS","payload","updateWalletBalance","WALLET_UPDATE_BALANCE","disconnectWallet","dispatch","getState","WALLET_DISCONNECT_SUCCESS","disconnectWalletLayer2","WALLET_CONNECT_SUCCESS_WITHOUT_LAYER2"],"mappings":"AAAA,SAASA,aAAT,QAA8B,qBAA9B;AAIA,OAAO,MAAMC,oBAAoB,GAAG,CAACC,MAAD,EAAiBC,SAAjB,EAAsCC,QAAtC,KAA4E;AAC9G,SAAO;AACLC,IAAAA,IAAI,EAAEL,aAAa,CAACM,sBADf;AAELC,IAAAA,OAAO,EAAE;AACPL,MAAAA,MADO;AAEPC,MAAAA,SAFO;AAGPC,MAAAA;AAHO;AAFJ,GAAP;AAQD,CATM;AAWP,OAAO,MAAMI,mBAAmB,GAAG,CAACN,MAAD,EAAiBC,SAAjB,EAAsCC,QAAtC,KAA4E;AAC7G,SAAO;AACLC,IAAAA,IAAI,EAAEL,aAAa,CAACS,qBADf;AAELF,IAAAA,OAAO,EAAE;AACPL,MAAAA,MADO;AAEPC,MAAAA,SAFO;AAGPC,MAAAA;AAHO;AAFJ,GAAP;AAQD,CATM;AAWP,OAAO,MAAMM,gBAAgB,GAAG,MAAM;AACpC,SAAO,OAAOC,QAAP,EAAmDC,QAAnD,KAA2E;AAChFD,IAAAA,QAAQ,CAAC;AACPN,MAAAA,IAAI,EAAEL,aAAa,CAACa;AADb,KAAD,CAAR;AAGD,GAJD;AAKD,CANM;AAQP,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAC1C,SAAO,OAAOH,QAAP,EAAmDC,QAAnD,KAA2E;AAChFD,IAAAA,QAAQ,CAAC;AACPN,MAAAA,IAAI,EAAEL,aAAa,CAACe;AADb,KAAD,CAAR;AAGD,GAJD;AAKD,CANM","sourcesContent":["import { walletActions } from '../constants/wallet';\nimport { AnyAction } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nexport const connectWalletSuccess = (entity: string, addresses: string[], balances: {[key: string]: string}) => {\n  return {\n    type: walletActions.WALLET_CONNECT_SUCCESS,\n    payload: {\n      entity,\n      addresses,\n      balances\n    }\n  }\n};\n\nexport const updateWalletBalance = (entity: string, addresses: string[], balances: {[key: string]: string}) => {\n  return {\n    type: walletActions.WALLET_UPDATE_BALANCE,\n    payload: {\n      entity,\n      addresses,\n      balances\n    }\n  }\n};\n\nexport const disconnectWallet = () => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>, getState: () => any) => {\n    dispatch({\n      type: walletActions.WALLET_DISCONNECT_SUCCESS\n    })\n  }\n}\n\nexport const disconnectWalletLayer2 = () => {\n  return async (dispatch: ThunkDispatch<{}, {}, AnyAction>, getState: () => any) => {\n    dispatch({\n      type: walletActions.WALLET_CONNECT_SUCCESS_WITHOUT_LAYER2\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}