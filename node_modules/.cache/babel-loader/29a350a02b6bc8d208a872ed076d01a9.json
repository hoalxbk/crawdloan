{"ast":null,"code":"var _jsxFileName = \"/Users/lehoa/icetea/work/redkite/frontend-user/src/components/Base/HeaderDefaultLayout/ConnectWalletModal/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './style';\nimport ConnectWalletBox from '../ConnectWalletBox';\nimport { AppContext } from '../../../../AppContext';\nimport { APP_NETWORKS, APP_NETWORKS_NAME, ETH_CHAIN_ID } from '../../../../constants/network';\nimport { SUPPORTED_WALLETS, connectorsSupportByNetwork } from '../../../../constants/connectors';\nimport { HeaderContext } from '../context/HeaderContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => createStyles({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    background: '#020616',\n    paddingTop: 0\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: 'black',\n    backgroundColor: '#4B4B4B',\n    padding: 4,\n    \"&:hover\": {\n      backgroundColor: '#D4D4D4'\n    }\n  },\n  svgIcon: {\n    fontSize: 5\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    customClass,\n    onClose,\n    ...other\n  } = props;\n  const customStyles = {\n    color: 'white'\n  };\n  return /*#__PURE__*/_jsxDEV(MuiDialogTitle, {\n    disableTypography: true,\n    className: `${classes.root} ${customClass}`,\n    ...other,\n    style: customStyles,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      className: classes.closeButton,\n      onClick: onClose,\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n    color: '#999999'\n  }\n}))(MuiDialogContent);\n\nconst ConnectWalletModal = props => {\n  _s();\n\n  const styles = useStyles();\n  const {\n    opened,\n    handleClose\n  } = props;\n  const {\n    walletName,\n    handleProviderChosen,\n    connectWalletLoading\n  } = useContext(AppContext);\n  const {\n    setAgreedTerms,\n    agreedTerms\n  } = useContext(HeaderContext);\n  const {\n    appChainID\n  } = useSelector(state => state.appNetwork).data;\n  const connectorsByNetwork = appChainID === ETH_CHAIN_ID ? SUPPORTED_WALLETS : connectorsSupportByNetwork[APP_NETWORKS_NAME.BSC];\n\n  const handleChange = event => {\n    event.target && setAgreedTerms(event.target.checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: opened,\n    onClose: handleClose,\n    className: styles.dialog,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      id: \"customized-dialog-title\",\n      onClose: handleClose,\n      customClass: styles.dialogTitle,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      dividers: true,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        className: styles.dialogContentTypo,\n        children: \"1. Accept\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dialogContentBlock} ${styles.dialogPrivacy}`,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: agreedTerms,\n          onChange: handleChange,\n          color: \"primary\",\n          inputProps: {\n            'aria-label': 'secondary checkbox'\n          },\n          className: styles.dialogCheckbox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.dialogPrivacyText,\n          children: [\"I read and accept the\", /*#__PURE__*/_jsxDEV(Link, {\n            className: styles.dialogPrivacyHighlight,\n            to: \"/terms\",\n            target: \"_blank\",\n            children: \" Terms of Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), \" and\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n            className: styles.dialogPrivacyHighlight,\n            to: \"/privacy\",\n            target: \"_blank\",\n            children: \" Privacy Policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        className: styles.dialogContentTypo,\n        children: \"2. Choose Network\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dialogContentBlock} ${styles.dialogNetworks}`,\n        children: Object.keys(APP_NETWORKS).map(key => {\n          const network = APP_NETWORKS[key];\n          return /*#__PURE__*/_jsxDEV(ConnectWalletBox, {\n            appNetwork: network,\n            isAppNetwork: true\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        className: styles.dialogContentTypo,\n        children: \"3. Choose Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.dialogContentBlock} ${styles.dialogNetworks}`,\n        children: Object.keys(connectorsByNetwork).map(key => {\n          const network = connectorsByNetwork[key];\n          const isMobile = isWidthDown('xs', props.width);\n          const showConnectorInMobile = isMobile ? network.mobile : true;\n          return showConnectorInMobile && /*#__PURE__*/_jsxDEV(ConnectWalletBox, {\n            wallet: network,\n            isAppNetwork: false,\n            handleProviderChosen: handleProviderChosen,\n            connectWalletLoading: connectWalletLoading,\n            walletName: walletName\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 47\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ConnectWalletModal, \"4y8qdFQ+nIvp9EIA9K1uUd7/x0Q=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = ConnectWalletModal;\nexport default withWidth()(ConnectWalletModal);\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectWalletModal\");","map":{"version":3,"sources":["/Users/lehoa/icetea/work/redkite/frontend-user/src/components/Base/HeaderDefaultLayout/ConnectWalletModal/index.tsx"],"names":["useContext","useSelector","withStyles","createStyles","Link","withWidth","isWidthDown","Checkbox","Dialog","MuiDialogTitle","MuiDialogContent","IconButton","CloseIcon","Typography","useStyles","ConnectWalletBox","AppContext","APP_NETWORKS","APP_NETWORKS_NAME","ETH_CHAIN_ID","SUPPORTED_WALLETS","connectorsSupportByNetwork","HeaderContext","styles","theme","root","margin","padding","spacing","background","paddingTop","closeButton","position","right","top","color","backgroundColor","svgIcon","fontSize","DialogTitle","props","children","classes","customClass","onClose","other","customStyles","DialogContent","ConnectWalletModal","opened","handleClose","walletName","handleProviderChosen","connectWalletLoading","setAgreedTerms","agreedTerms","appChainID","state","appNetwork","data","connectorsByNetwork","BSC","handleChange","event","target","checked","dialog","dialogTitle","dialogContentTypo","dialogContentBlock","dialogPrivacy","dialogCheckbox","dialogPrivacyText","dialogPrivacyHighlight","dialogNetworks","Object","keys","map","key","network","isMobile","width","showConnectorInMobile","mobile"],"mappings":"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","sourcesContent":["import { useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { withStyles, Theme, createStyles, WithStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport withWidth, { isWidthDown } from '@material-ui/core/withWidth';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './style';\nimport ConnectWalletBox from '../ConnectWalletBox';\nimport { AppContext } from '../../../../AppContext';\nimport { APP_NETWORKS, APP_NETWORKS_NAME, appNetworkType, ETH_CHAIN_ID } from '../../../../constants/network';\nimport { SUPPORTED_WALLETS, connectorsSupportByNetwork } from '../../../../constants/connectors';\nimport { HeaderContext, HeaderContextType } from '../context/HeaderContext';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n      background: '#020616',\n      paddingTop: 0\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: 'black',\n      backgroundColor: '#4B4B4B',\n      padding: 4,\n\n      \"&:hover\" : {\n        backgroundColor: '#D4D4D4'\n      }\n    },\n    svgIcon: {\n      fontSize: 5\n    }\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n  customClass: string\n}\n\nexport interface ComponentProps {\n  opened: boolean,\n  handleClose: () => void;\n  width: any;\n}\n\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, customClass, onClose, ...other } = props;\n\n  const customStyles = {\n    color: 'white',\n  }\n\n  return (\n    <MuiDialogTitle disableTypography className={`${classes.root} ${customClass}`} {...other} style={customStyles}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    color: '#999999'\n  },\n}))(MuiDialogContent);\n\nconst ConnectWalletModal: React.FC<ComponentProps> = (props: ComponentProps) => {\n  const styles = useStyles();\n  const { opened, handleClose } = props;\n  const { walletName, handleProviderChosen, connectWalletLoading } = useContext(AppContext);\n  const { setAgreedTerms, agreedTerms } = useContext<HeaderContextType>(HeaderContext);\n  const { appChainID } = useSelector((state: any) => state.appNetwork).data;\n  const connectorsByNetwork = appChainID === ETH_CHAIN_ID ? SUPPORTED_WALLETS: connectorsSupportByNetwork[APP_NETWORKS_NAME.BSC];\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.target && setAgreedTerms(event.target.checked);\n  };\n\n  return (\n    <Dialog open={opened} onClose={handleClose} className={styles.dialog}>\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose} customClass={styles.dialogTitle} >\n        Connect Wallet\n      </DialogTitle>\n      <DialogContent dividers>\n        <Typography gutterBottom className={styles.dialogContentTypo}>\n          1. Accept\n        </Typography>\n        <div className={`${styles.dialogContentBlock} ${styles.dialogPrivacy}`}>\n          <Checkbox\n            checked={agreedTerms}\n            onChange={handleChange}\n            color=\"primary\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n            className={styles.dialogCheckbox}\n          />\n          <span className={styles.dialogPrivacyText}>\n            I read and accept the\n            <Link className={styles.dialogPrivacyHighlight} to=\"/terms\" target=\"_blank\"> Terms of Service</Link> and&nbsp;\n            <Link className={styles.dialogPrivacyHighlight} to=\"/privacy\" target=\"_blank\"> Privacy Policy</Link>\n          </span>\n        </div>\n        <Typography gutterBottom className={styles.dialogContentTypo} >\n          2. Choose Network\n        </Typography>\n        <div className={`${styles.dialogContentBlock} ${styles.dialogNetworks}`}>\n          {\n            Object.keys(APP_NETWORKS).map((key: string) => {\n              const network = APP_NETWORKS[key as appNetworkType];\n              return <ConnectWalletBox key={key} appNetwork={network} isAppNetwork/>\n            })\n          }\n        </div>\n        <Typography gutterBottom className={styles.dialogContentTypo}>\n          3. Choose Wallet\n        </Typography>\n        <div className={`${styles.dialogContentBlock} ${styles.dialogNetworks}`}>\n          {\n            Object.keys(connectorsByNetwork).map((key: string) => {\n              const network = connectorsByNetwork[key];\n              const isMobile = isWidthDown('xs', props.width);\n              const showConnectorInMobile = isMobile ? network.mobile: true;\n              return showConnectorInMobile && <ConnectWalletBox \n                  key={key}\n                  wallet={network} \n                  isAppNetwork={false} \n                  handleProviderChosen={handleProviderChosen} \n                  connectWalletLoading={connectWalletLoading}\n                  walletName={walletName}\n                />\n            })\n          }\n        </div>\n      </DialogContent>\n    </Dialog>\n  )\n\n}\n\nexport default withWidth()(ConnectWalletModal);\n"]},"metadata":{},"sourceType":"module"}